{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_projectTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lendingProtocol",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newProtocol",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldProtocol",
          "type": "address"
        }
      ],
      "name": "LendingProtocolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token_address",
          "type": "address"
        }
      ],
      "name": "TokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUnstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pricefeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_yield",
          "type": "uint256"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newLendingProtocol",
          "type": "address"
        }
      ],
      "name": "changeLendingProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUserSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingProtocol",
      "outputs": [
        {
          "internalType": "contract ILendingProtocol",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToYieldRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newYieldRate",
          "type": "uint256"
        }
      ],
      "name": "updateYieldRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToTokenToUnrealisedYieldTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "4": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "5": "/home/mike/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "8": "contracts/StakingContract.sol",
    "9": "interfaces/ILendingProtocol.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakingContract.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1986
      ],
      "Context": [
        2007
      ],
      "IERC20": [
        1905
      ],
      "ILendingProtocol": [
        1940
      ],
      "Ownable": [
        1603
      ],
      "StakingContract": [
        1499
      ]
    },
    "id": 1500,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 624,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 625,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1500,
        "sourceUnit": 1604,
        "src": "57:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1500,
        "sourceUnit": 1906,
        "src": "110:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mike/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 627,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1500,
        "sourceUnit": 1987,
        "src": "167:76:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingProtocol.sol",
        "file": "../interfaces/ILendingProtocol.sol",
        "id": 628,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1500,
        "sourceUnit": 1941,
        "src": "245:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 629,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1603,
              "src": "319:7:8"
            },
            "id": 630,
            "nodeType": "InheritanceSpecifier",
            "src": "319:7:8"
          }
        ],
        "canonicalName": "StakingContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1499,
        "linearizedBaseContracts": [
          1499,
          1603,
          2007
        ],
        "name": "StakingContract",
        "nameLocation": "300:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4b60ce77",
            "id": 633,
            "mutability": "mutable",
            "name": "projectToken",
            "nameLocation": "347:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "333:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1905",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 631,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1905,
                "src": "333:6:8"
              },
              "referencedDeclaration": 1905,
              "src": "333:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1905",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 636,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "382:7:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "365:24:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 634,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "365:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 635,
              "nodeType": "ArrayTypeName",
              "src": "365:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 639,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "412:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "395:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 637,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "395:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 638,
              "nodeType": "ArrayTypeName",
              "src": "395:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 645,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "523:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "468:69:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 644,
              "keyType": {
                "id": 640,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "476:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "468:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 643,
                "keyType": {
                  "id": 641,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "495:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "487:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 642,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b83e0234",
            "id": 649,
            "mutability": "mutable",
            "name": "uniqueTokensStaked",
            "nameLocation": "645:18:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "610:53:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 648,
              "keyType": {
                "id": 646,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "618:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "610:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 647,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "629:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 653,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "739:21:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "704:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 652,
              "keyType": {
                "id": 650,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "712:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "704:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 651,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "723:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2fb345a",
            "id": 657,
            "mutability": "mutable",
            "name": "tokenToClaim",
            "nameLocation": "856:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "821:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 656,
              "keyType": {
                "id": 654,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "821:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5583e5",
            "id": 661,
            "mutability": "mutable",
            "name": "tokenToYieldRate",
            "nameLocation": "1155:16:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "1120:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 660,
              "keyType": {
                "id": 658,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1128:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1120:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 659,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1139:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da0f0604",
            "id": 667,
            "mutability": "mutable",
            "name": "userToTokenToUnrealisedYieldTime",
            "nameLocation": "1284:32:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "1221:95:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 666,
              "keyType": {
                "id": 662,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1229:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1221:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 665,
                "keyType": {
                  "id": 663,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1248:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1240:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 664,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "84436d3e",
            "id": 670,
            "mutability": "mutable",
            "name": "lendingProtocol",
            "nameLocation": "1347:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 1499,
            "src": "1323:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
              "typeString": "contract ILendingProtocol"
            },
            "typeName": {
              "id": 669,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 668,
                "name": "ILendingProtocol",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1940,
                "src": "1323:16:8"
              },
              "referencedDeclaration": 1940,
              "src": "1323:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                "typeString": "contract ILendingProtocol"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 674,
            "name": "TokenAdded",
            "nameLocation": "1389:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token_address",
                  "nameLocation": "1416:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1400:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1399:31:8"
            },
            "src": "1383:48:8"
          },
          {
            "anonymous": false,
            "id": 682,
            "name": "TokenStaked",
            "nameLocation": "1442:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1479:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "1463:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "1510:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "1494:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1534:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "1526:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1453:93:8"
            },
            "src": "1436:111:8"
          },
          {
            "anonymous": false,
            "id": 690,
            "name": "TokenUnstaked",
            "nameLocation": "1558:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1597:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "1581:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "1628:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "1612:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1652:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "1644:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:93:8"
            },
            "src": "1552:113:8"
          },
          {
            "anonymous": false,
            "id": 696,
            "name": "LendingProtocolChanged",
            "nameLocation": "1676:22:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newProtocol",
                  "nameLocation": "1707:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "1699:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldProtocol",
                  "nameLocation": "1728:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "1720:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:42:8"
            },
            "src": "1670:71:8"
          },
          {
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "1834:122:8",
              "statements": [
                {
                  "expression": {
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 703,
                      "name": "projectToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1844:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1905",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 705,
                          "name": "_projectTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "1866:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 704,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "1859:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1905_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1859:28:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1905",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1844:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1905",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:43:8"
                },
                {
                  "expression": {
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 709,
                      "name": "lendingProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "1897:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 711,
                          "name": "_lendingProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 700,
                          "src": "1932:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 710,
                        "name": "ILendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "1915:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingProtocol_$1940_$",
                          "typeString": "type(contract ILendingProtocol)"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1915:34:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "src": "1897:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                      "typeString": "contract ILendingProtocol"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:52:8"
                }
              ]
            },
            "id": 716,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_projectTokenAddress",
                  "nameLocation": "1786:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "1778:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_lendingProtocol",
                  "nameLocation": "1816:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "1808:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:56:8"
            },
            "returnParameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:8"
            },
            "scope": 1499,
            "src": "1766:190:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "2180:1108:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 725,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "2226:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2236:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2226:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2239:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b46d844d1d779fcc9362909bf290c401952fdbc746fd9855a767428269cd6506",
                          "typeString": "literal_string \"StakingContract: Amount must be greater than 0\""
                        },
                        "value": "StakingContract: Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b46d844d1d779fcc9362909bf290c401952fdbc746fd9855a767428269cd6506",
                          "typeString": "literal_string \"StakingContract: Amount must be greater than 0\""
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2218:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:70:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 733,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "2334:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 732,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "2319:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2319:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a20546f6b656e2069732063757272656e746c79206e6f20616c6c6f776564",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2355:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dba74bb48761de9dcf3e7e37b9b1f10ac3648a19d765ace628674bda6c10f886",
                          "typeString": "literal_string \"StakingContract: Token is currently no allowed\""
                        },
                        "value": "StakingContract: Token is currently no allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dba74bb48761de9dcf3e7e37b9b1f10ac3648a19d765ace628674bda6c10f886",
                          "typeString": "literal_string \"StakingContract: Token is currently no allowed\""
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2298:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:115:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:115:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2510:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2510:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 741,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "2522:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 738,
                      "name": "_updateOneTokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "2487:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:42:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 749,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2588:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2588:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 753,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2608:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingContract_$1499",
                                  "typeString": "contract StakingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingContract_$1499",
                                  "typeString": "contract StakingContract"
                                }
                              ],
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2600:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 751,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2600:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2600:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 755,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 719,
                            "src": "2615:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 746,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 721,
                                "src": "2567:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 745,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1905,
                              "src": "2560:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1905_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2560:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1905",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1886,
                          "src": "2560:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2560:63:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a207472616e7366657246726f6d2829206661696c6564",
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2637:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8b6f5d9cf331e22190ddf231caeeccd6c18fca4bd6ccef5ff540ba48495fa16",
                          "typeString": "literal_string \"StakingContract: transferFrom() failed\""
                        },
                        "value": "StakingContract: transferFrom() failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8b6f5d9cf331e22190ddf231caeeccd6c18fca4bd6ccef5ff540ba48495fa16",
                          "typeString": "literal_string \"StakingContract: transferFrom() failed\""
                        }
                      ],
                      "id": 744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2539:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2539:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "2539:148:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 760,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "2702:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 762,
                        "indexExpression": {
                          "id": 761,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "2717:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2702:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 765,
                      "indexExpression": {
                        "expression": {
                          "id": 763,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2725:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2725:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2702:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2740:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2702:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 781,
                  "nodeType": "IfStatement",
                  "src": "2698:137:8",
                  "trueBody": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "2743:92:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 768,
                              "name": "uniqueTokensStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 649,
                              "src": "2757:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 771,
                            "indexExpression": {
                              "expression": {
                                "id": 769,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2776:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2776:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2757:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 772,
                                "name": "uniqueTokensStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "2790:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 775,
                              "indexExpression": {
                                "expression": {
                                  "id": 773,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2809:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2809:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2790:30:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2823:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2790:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2757:67:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "2757:67:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 782,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "2845:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 786,
                        "indexExpression": {
                          "id": 783,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "2860:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2845:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 787,
                      "indexExpression": {
                        "expression": {
                          "id": 784,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2868:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2868:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2845:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 788,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "2894:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 790,
                          "indexExpression": {
                            "id": 789,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "2909:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2894:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 793,
                        "indexExpression": {
                          "expression": {
                            "id": 791,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2917:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2917:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2894:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 794,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "2943:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2894:56:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2845:105:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:105:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 798,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3037:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 801,
                      "indexExpression": {
                        "expression": {
                          "id": 799,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3056:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3056:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3037:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3071:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3037:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 812,
                  "nodeType": "IfStatement",
                  "src": "3033:90:8",
                  "trueBody": {
                    "id": 811,
                    "nodeType": "Block",
                    "src": "3074:49:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 807,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3101:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3101:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 804,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "3088:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3088:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3088:24:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 810,
                        "nodeType": "ExpressionStatement",
                        "src": "3088:24:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 816,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "3195:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 817,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "3203:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 820,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3220:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingContract_$1499",
                              "typeString": "contract StakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingContract_$1499",
                              "typeString": "contract StakingContract"
                            }
                          ],
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3212:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3212:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3212:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 813,
                        "name": "lendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "3171:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                          "typeString": "contract ILendingProtocol"
                        }
                      },
                      "id": 815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1921,
                      "src": "3171:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3171:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:55:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 825,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "3253:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3261:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3261:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 828,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "3273:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 824,
                      "name": "TokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "3241:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3241:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "EmitStatement",
                  "src": "3236:45:8"
                }
              ]
            },
            "documentation": {
              "id": 717,
              "nodeType": "StructuredDocumentation",
              "src": "1987:125:8",
              "text": "@notice Stake _amount of _token\n @param _amount The amount ot stake\n @param _token The address of the token"
            },
            "functionSelector": "0bea440d",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "2126:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2146:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "2138:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2163:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "2155:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:33:8"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2180:0:8"
            },
            "scope": 1499,
            "src": "2117:1171:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "3431:1039:8",
              "statements": [
                {
                  "assignments": [
                    839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 839,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3482:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 947,
                      "src": "3474:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 838,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3474:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 846,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 840,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "3492:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 842,
                      "indexExpression": {
                        "id": 841,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "3507:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3492:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 845,
                    "indexExpression": {
                      "expression": {
                        "id": 843,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3515:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3515:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3492:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3474:52:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 848,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "3544:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3554:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3544:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a205374616b696e672062616c616e636520616c7265616479203021",
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3557:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_91283f15539e460280c4d505106087e8e4f7f6b2a2dfe726d5ffdc184dd7c165",
                          "typeString": "literal_string \"StakingContract: Staking balance already 0!\""
                        },
                        "value": "StakingContract: Staking balance already 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_91283f15539e460280c4d505106087e8e4f7f6b2a2dfe726d5ffdc184dd7c165",
                          "typeString": "literal_string \"StakingContract: Staking balance already 0!\""
                        }
                      ],
                      "id": 847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3536:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3536:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:67:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 855,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3668:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3668:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 857,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "3680:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 854,
                      "name": "_updateOneTokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "3645:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3645:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "3645:42:8"
                },
                {
                  "expression": {
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 860,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "3729:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 864,
                        "indexExpression": {
                          "id": 861,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "3744:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3729:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 865,
                      "indexExpression": {
                        "expression": {
                          "id": 862,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3752:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3752:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3729:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3766:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3729:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "3729:38:8"
                },
                {
                  "expression": {
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 869,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3777:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 872,
                      "indexExpression": {
                        "expression": {
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3796:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3796:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3777:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 873,
                          "name": "uniqueTokensStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "3810:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 876,
                        "indexExpression": {
                          "expression": {
                            "id": 874,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3829:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3829:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3810:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3843:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3810:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3777:67:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:67:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 881,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3858:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "expression": {
                          "id": 882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3877:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3877:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3858:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3892:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3858:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 926,
                  "nodeType": "IfStatement",
                  "src": "3854:315:8",
                  "trueBody": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "3895:274:8",
                    "statements": [
                      {
                        "body": {
                          "id": 923,
                          "nodeType": "Block",
                          "src": "3954:205:8",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 898,
                                    "name": "stakers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "3976:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 900,
                                  "indexExpression": {
                                    "id": 899,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 888,
                                    "src": "3984:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3976:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 901,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3990:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3990:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3976:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 922,
                              "nodeType": "IfStatement",
                              "src": "3972:173:8",
                              "trueBody": {
                                "id": 921,
                                "nodeType": "Block",
                                "src": "4002:143:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 913,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 904,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "4024:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 906,
                                        "indexExpression": {
                                          "id": 905,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 888,
                                          "src": "4032:1:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4024:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 907,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "4037:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 912,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 911,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 908,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 636,
                                              "src": "4045:7:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 909,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "4045:14:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 910,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4062:1:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "4045:18:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4037:27:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4024:40:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 914,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4024:40:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 915,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "4086:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 917,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "4086:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer)"
                                        }
                                      },
                                      "id": 918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4086:13:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 919,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4086:13:8"
                                  },
                                  {
                                    "id": 920,
                                    "nodeType": "Break",
                                    "src": "4121:5:8"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 891,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "3929:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 892,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "3933:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3933:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3929:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 924,
                        "initializationExpression": {
                          "assignments": [
                            888
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 888,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3922:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 924,
                              "src": "3914:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 887,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3914:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 890,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3926:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3914:13:8"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3949:3:8",
                            "subExpression": {
                              "id": 895,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "3949:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 897,
                          "nodeType": "ExpressionStatement",
                          "src": "3949:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "3909:250:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 930,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 835,
                              "src": "4317:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 931,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "4325:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 932,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4334:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4334:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 928,
                              "name": "lendingProtocol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "4292:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                                "typeString": "contract ILendingProtocol"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1933,
                            "src": "4292:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4292:53:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4348:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4292:57:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a207769746864726177206572726f72",
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4363:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4fee1f72ce4b003b63152f10d6a4d1c6641114516ccb63493a7cdcbd6ba5aa",
                          "typeString": "literal_string \"StakingContract: withdraw error\""
                        },
                        "value": "StakingContract: withdraw error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4fee1f72ce4b003b63152f10d6a4d1c6641114516ccb63493a7cdcbd6ba5aa",
                          "typeString": "literal_string \"StakingContract: withdraw error\""
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4271:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4271:135:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:135:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 941,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "4435:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 942,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4443:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4443:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 944,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "4455:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 940,
                      "name": "TokenUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "4421:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4421:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 946,
                  "nodeType": "EmitStatement",
                  "src": "4416:47:8"
                }
              ]
            },
            "documentation": {
              "id": 833,
              "nodeType": "StructuredDocumentation",
              "src": "3294:84:8",
              "text": "@notice Unstake all _token staked\n @param _token The address of the token"
            },
            "functionSelector": "2d1ad8b8",
            "id": 948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "3392:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3414:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "3406:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3406:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3405:16:8"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3431:0:8"
            },
            "scope": 1499,
            "src": "3383:1087:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "4558:282:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 953,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4673:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4673:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 952,
                      "name": "_updateTokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "4653:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:31:8"
                },
                {
                  "assignments": [
                    958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 958,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4702:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 980,
                      "src": "4694:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4694:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 963,
                  "initialValue": {
                    "baseExpression": {
                      "id": 959,
                      "name": "tokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "4711:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 962,
                    "indexExpression": {
                      "expression": {
                        "id": 960,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4724:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4724:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4711:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4694:41:8"
                },
                {
                  "expression": {
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 964,
                        "name": "tokenToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "4745:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 967,
                      "indexExpression": {
                        "expression": {
                          "id": 965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4758:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4758:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4745:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4772:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4745:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:28:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 974,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4813:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4813:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 976,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "4825:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 972,
                            "name": "projectToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "4791:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1905",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1854,
                          "src": "4791:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4791:41:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4783:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4783:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "4783:50:8"
                }
              ]
            },
            "documentation": {
              "id": 949,
              "nodeType": "StructuredDocumentation",
              "src": "4476:46:8",
              "text": "@notice Send Earned \"ProjectToken\" to user"
            },
            "functionSelector": "4451d89f",
            "id": 981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimToken",
            "nameLocation": "4536:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4546:2:8"
            },
            "returnParameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4558:0:8"
            },
            "scope": 1499,
            "src": "4527:313:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1013,
              "nodeType": "Block",
              "src": "5083:189:8",
              "statements": [
                {
                  "body": {
                    "id": 1009,
                    "nodeType": "Block",
                    "src": "5144:100:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1000,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "5162:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1002,
                            "indexExpression": {
                              "id": 1001,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "5176:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5162:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1003,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "5182:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5162:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1008,
                        "nodeType": "IfStatement",
                        "src": "5158:76:8",
                        "trueBody": {
                          "id": 1007,
                          "nodeType": "Block",
                          "src": "5190:44:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5215:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 988,
                              "id": 1006,
                              "nodeType": "Return",
                              "src": "5208:11:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 993,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "5113:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 994,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "5117:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5117:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5113:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1010,
                  "initializationExpression": {
                    "assignments": [
                      990
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5106:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "5098:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5098:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 992,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5110:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5098:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5139:3:8",
                      "subExpression": {
                        "id": 997,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "5139:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 999,
                    "nodeType": "ExpressionStatement",
                    "src": "5139:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "5093:151:8"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5260:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 988,
                  "id": 1012,
                  "nodeType": "Return",
                  "src": "5253:12:8"
                }
              ]
            },
            "documentation": {
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "4846:165:8",
              "text": "@notice Check wheter a token is stakable on this contract\n @param _token The address of the token\n @return bool Wheter the token is stakable or not"
            },
            "functionSelector": "dd5b8467",
            "id": 1014,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "5025:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5048:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "5040:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5040:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5039:16:8"
            },
            "returnParameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1014,
                  "src": "5077:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5076:6:8"
            },
            "scope": 1499,
            "src": "5016:256:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "5546:324:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1022,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "5560:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1024,
                      "indexExpression": {
                        "id": 1023,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "5579:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5560:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5589:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5560:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1030,
                  "nodeType": "IfStatement",
                  "src": "5556:69:8",
                  "trueBody": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "5592:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5613:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1021,
                        "id": 1028,
                        "nodeType": "Return",
                        "src": "5606:8:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1032,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "5642:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "5634:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1031,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5634:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5655:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5634:22:8"
                },
                {
                  "body": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "5750:87:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1046,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "5764:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1048,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1017,
                                "src": "5802:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1049,
                                  "name": "allowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "5809:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1051,
                                "indexExpression": {
                                  "id": 1050,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1036,
                                  "src": "5823:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5809:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1047,
                              "name": "getUserSingleTokenValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1098,
                              "src": "5778:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5778:48:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5764:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "5764:62:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1039,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "5719:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1040,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "5723:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5723:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5719:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1056,
                  "initializationExpression": {
                    "assignments": [
                      1036
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1036,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5712:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "5704:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5704:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1038,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5716:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5704:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5745:3:8",
                      "subExpression": {
                        "id": 1043,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "5745:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1045,
                    "nodeType": "ExpressionStatement",
                    "src": "5745:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "5699:138:8"
                },
                {
                  "expression": {
                    "id": 1057,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1032,
                    "src": "5853:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1021,
                  "id": 1058,
                  "nodeType": "Return",
                  "src": "5846:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1015,
              "nodeType": "StructuredDocumentation",
              "src": "5278:191:8",
              "text": "@notice Get the total value (in USD) staked by _user\n @param _user The address of the user\n @return totalValue The total value  of the tokens staked on the contract by _user"
            },
            "functionSelector": "af3f5e22",
            "id": 1060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "5483:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5509:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "5501:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5501:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5500:15:8"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "5537:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5537:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5536:9:8"
            },
            "scope": 1499,
            "src": "5474:396:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1097,
              "nodeType": "Block",
              "src": "6234:362:8",
              "statements": [
                {
                  "assignments": [
                    1071,
                    1073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1071,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "6253:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1097,
                      "src": "6245:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1070,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6245:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "6268:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1097,
                      "src": "6260:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1072,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6260:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1077,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1075,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "6294:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1074,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "6280:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6280:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6244:57:8"
                },
                {
                  "assignments": [
                    1079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "tokenValue",
                      "nameLocation": "6334:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1097,
                      "src": "6326:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1078,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6326:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1094,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1080,
                                    "name": "stakingBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 645,
                                    "src": "6349:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1082,
                                  "indexExpression": {
                                    "id": 1081,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "6364:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6349:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1084,
                                "indexExpression": {
                                  "id": 1083,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1063,
                                  "src": "6372:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6349:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1085,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1071,
                                "src": "6381:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6349:37:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1087,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6348:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6403:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 1089,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1073,
                                "src": "6407:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6403:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1091,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6402:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6348:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1093,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6347:70:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6326:91:8"
                },
                {
                  "expression": {
                    "id": 1095,
                    "name": "tokenValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1079,
                    "src": "6434:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1069,
                  "id": 1096,
                  "nodeType": "Return",
                  "src": "6427:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1061,
              "nodeType": "StructuredDocumentation",
              "src": "5876:231:8",
              "text": "@notice Get the value (in USD) of _token staked by _user\n @param _user The address of the user\n @param _token The address of the token\n @return tokenValue The value of _token staked on the contract by _user"
            },
            "functionSelector": "276b11da",
            "id": 1098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "6121:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6153:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "6145:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6145:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6168:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "6160:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6160:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6144:31:8"
            },
            "returnParameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "6221:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6221:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6220:9:8"
            },
            "scope": 1499,
            "src": "6112:484:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "6929:341:8",
              "statements": [
                {
                  "assignments": [
                    1109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1109,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "6947:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "6939:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1108,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6939:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1113,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1110,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "6966:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1112,
                    "indexExpression": {
                      "id": 1111,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "6988:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6966:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6939:56:8"
                },
                {
                  "assignments": [
                    1116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1116,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7027:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "7005:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1986",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 1115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1114,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "7005:21:8"
                        },
                        "referencedDeclaration": 1986,
                        "src": "7005:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1986",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "7074:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1117,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1986,
                      "src": "7039:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1986_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7039:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1986",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7005:95:8"
                },
                {
                  "assignments": [
                    null,
                    1122,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "7120:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "7113:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7113:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 1126,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1123,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "7135:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1986",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1985,
                      "src": "7135:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7135:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7110:52:8"
                },
                {
                  "assignments": [
                    1128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1128,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "7180:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "7172:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7172:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1135,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1131,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "7199:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1986",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1947,
                          "src": "7199:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7199:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7191:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7191:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7191:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7172:48:8"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 1138,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "7246:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7238:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1136,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7238:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7238:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1140,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "7254:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1141,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7237:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1107,
                  "id": 1142,
                  "nodeType": "Return",
                  "src": "7230:33:8"
                }
              ]
            },
            "documentation": {
              "id": 1099,
              "nodeType": "StructuredDocumentation",
              "src": "6602:216:8",
              "text": "@notice Get the value (in USD) of a _token and its decimals()\n @param _token The address of the token\n @return price The value of _token\n @return decimals The number of decimals of the _token"
            },
            "functionSelector": "f1c5d6c2",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "6832:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6854:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "6846:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6846:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6845:16:8"
            },
            "returnParameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "6907:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6907:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "6916:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6916:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6906:18:8"
            },
            "scope": 1499,
            "src": "6823:447:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1160,
              "nodeType": "Block",
              "src": "7620:59:8",
              "statements": [
                {
                  "expression": {
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1154,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "7630:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1156,
                      "indexExpression": {
                        "id": 1155,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "7652:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7630:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1157,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "7662:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7630:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "7630:42:8"
                }
              ]
            },
            "documentation": {
              "id": 1145,
              "nodeType": "StructuredDocumentation",
              "src": "7294:218:8",
              "text": "@notice Set the price feed address for an ERC20 token\n @dev Gets call automatically when adding new token\n @param _token The address of the token\n @param _priceFeed The address of the pricefeed"
            },
            "functionSelector": "877dd39d",
            "id": 1161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1151,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "7606:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7606:9:8"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "7526:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7555:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "7547:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7547:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "7571:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "7563:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7563:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7546:36:8"
            },
            "returnParameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7620:0:8"
            },
            "scope": 1499,
            "src": "7517:162:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "7989:324:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1176,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "8018:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1173,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "7999:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7999:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7999:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "7999:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1186,
                                "name": "lendingProtocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "8087:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                                  "typeString": "contract ILendingProtocol"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                                  "typeString": "contract ILendingProtocol"
                                }
                              ],
                              "id": 1185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8079:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1184,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8079:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8079:24:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8110:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1189,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8110:7:8",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1188,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8105:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8105:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8105:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1181,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1164,
                                "src": "8063:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1180,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1905,
                              "src": "8056:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1905_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8056:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1905",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1874,
                          "src": "8056:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8056:67:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a20617070726f76652829206661696c6564",
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8137:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                          "typeString": "literal_string \"StakingContract: approve() failed\""
                        },
                        "value": "StakingContract: approve() failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                          "typeString": "literal_string \"StakingContract: approve() failed\""
                        }
                      ],
                      "id": 1179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8035:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8035:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
                  "src": "8035:147:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1198,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "8213:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1199,
                        "name": "_pricefeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "8221:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1197,
                      "name": "setPriceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "8192:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8192:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "8192:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1203,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "8258:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1204,
                        "name": "_yield",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "8266:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1202,
                      "name": "updateYieldRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1260,
                      "src": "8242:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8242:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "8242:31:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1208,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "8299:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1207,
                      "name": "TokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "8288:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1210,
                  "nodeType": "EmitStatement",
                  "src": "8283:23:8"
                }
              ]
            },
            "documentation": {
              "id": 1162,
              "nodeType": "StructuredDocumentation",
              "src": "7685:172:8",
              "text": "@notice Add a new _token to the list of stakable token\n @param _token The address of the token\n @param _pricefeed The address for the price feed of _token"
            },
            "functionSelector": "00367622",
            "id": 1212,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "7979:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7979:9:8"
              }
            ],
            "name": "addAllowedTokens",
            "nameLocation": "7871:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7905:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "7897:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7897:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "_pricefeed",
                  "nameLocation": "7929:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "7921:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7921:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "_yield",
                  "nameLocation": "7957:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "7949:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7949:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7887:82:8"
            },
            "returnParameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7989:0:8"
            },
            "scope": 1499,
            "src": "7862:451:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1259,
              "nodeType": "Block",
              "src": "8563:421:8",
              "statements": [
                {
                  "body": {
                    "id": 1251,
                    "nodeType": "Block",
                    "src": "8762:143:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1233,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 645,
                                "src": "8780:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1235,
                              "indexExpression": {
                                "id": 1234,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1215,
                                "src": "8795:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8780:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1239,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1236,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 636,
                                "src": "8803:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1238,
                              "indexExpression": {
                                "id": 1237,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1223,
                                "src": "8811:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8803:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8780:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8817:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8780:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1250,
                        "nodeType": "IfStatement",
                        "src": "8776:119:8",
                        "trueBody": {
                          "id": 1249,
                          "nodeType": "Block",
                          "src": "8820:75:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1243,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 636,
                                      "src": "8861:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1245,
                                    "indexExpression": {
                                      "id": 1244,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1223,
                                      "src": "8869:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8861:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1246,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1215,
                                    "src": "8873:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1242,
                                  "name": "_updateOneTokenToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1498,
                                  "src": "8838:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address)"
                                  }
                                },
                                "id": 1247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8838:42:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1248,
                              "nodeType": "ExpressionStatement",
                              "src": "8838:42:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1226,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "8737:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1227,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "8741:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8741:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8737:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1252,
                  "initializationExpression": {
                    "assignments": [
                      1223
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8730:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1252,
                        "src": "8722:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8722:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1225,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8734:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8722:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8757:3:8",
                      "subExpression": {
                        "id": 1230,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "8757:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1232,
                    "nodeType": "ExpressionStatement",
                    "src": "8757:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "8717:188:8"
                },
                {
                  "expression": {
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1253,
                        "name": "tokenToYieldRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "8937:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1255,
                      "indexExpression": {
                        "id": 1254,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "8954:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8937:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1256,
                      "name": "_newYieldRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "8964:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8937:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "8937:40:8"
                }
              ]
            },
            "documentation": {
              "id": 1213,
              "nodeType": "StructuredDocumentation",
              "src": "8367:90:8",
              "text": "@param _token The address of the token\n @param _newYieldRate The new yield rate"
            },
            "functionSelector": "f37a55e4",
            "id": 1260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1219,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "8549:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "8549:9:8"
              }
            ],
            "name": "updateYieldRate",
            "nameLocation": "8471:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8495:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1260,
                  "src": "8487:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8487:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "_newYieldRate",
                  "nameLocation": "8511:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1260,
                  "src": "8503:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8503:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8486:39:8"
            },
            "returnParameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8563:0:8"
            },
            "scope": 1499,
            "src": "8462:522:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1389,
              "nodeType": "Block",
              "src": "9217:1101:8",
              "statements": [
                {
                  "assignments": [
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1269,
                      "mutability": "mutable",
                      "name": "oldProtocol",
                      "nameLocation": "9235:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1389,
                      "src": "9227:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1268,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9227:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1274,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1272,
                        "name": "lendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "9257:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                          "typeString": "contract ILendingProtocol"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                          "typeString": "contract ILendingProtocol"
                        }
                      ],
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9249:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9249:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9249:24:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9227:46:8"
                },
                {
                  "expression": {
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1275,
                      "name": "lendingProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "9283:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1277,
                          "name": "_newLendingProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1263,
                          "src": "9318:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1276,
                        "name": "ILendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "9301:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingProtocol_$1940_$",
                          "typeString": "type(contract ILendingProtocol)"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9301:37:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "src": "9283:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                      "typeString": "contract ILendingProtocol"
                    }
                  },
                  "id": 1280,
                  "nodeType": "ExpressionStatement",
                  "src": "9283:55:8"
                },
                {
                  "body": {
                    "id": 1309,
                    "nodeType": "Block",
                    "src": "9399:247:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1299,
                                  "name": "_newLendingProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1263,
                                  "src": "9492:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9538:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1301,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9538:7:8",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        }
                                      ],
                                      "id": 1300,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "9533:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9533:13:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint256",
                                      "typeString": "type(uint256)"
                                    }
                                  },
                                  "id": 1304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "9533:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 1294,
                                        "name": "allowedTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 639,
                                        "src": "9445:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1296,
                                      "indexExpression": {
                                        "id": 1295,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1282,
                                        "src": "9459:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9445:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1293,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1905,
                                    "src": "9438:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$1905_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9438:24:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1905",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1874,
                                "src": "9438:32:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9438:130:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b696e67436f6e74726163743a20617070726f76652829206661696c6564",
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9586:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                                "typeString": "literal_string \"StakingContract: approve() failed\""
                              },
                              "value": "StakingContract: approve() failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                                "typeString": "literal_string \"StakingContract: approve() failed\""
                              }
                            ],
                            "id": 1292,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9413:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9413:222:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "9413:222:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1285,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "9368:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1286,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "9372:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9372:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9368:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1310,
                  "initializationExpression": {
                    "assignments": [
                      1282
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9361:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1310,
                        "src": "9353:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9353:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1284,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9365:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9353:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9394:3:8",
                      "subExpression": {
                        "id": 1289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "9394:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1291,
                    "nodeType": "ExpressionStatement",
                    "src": "9394:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "9348:298:8"
                },
                {
                  "body": {
                    "id": 1382,
                    "nodeType": "Block",
                    "src": "9739:502:8",
                    "statements": [
                      {
                        "assignments": [
                          1323
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1323,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "9761:5:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1382,
                            "src": "9753:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1322,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9753:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1327,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1324,
                            "name": "allowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "9769:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1326,
                          "indexExpression": {
                            "id": 1325,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1312,
                            "src": "9783:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9769:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9753:32:8"
                      },
                      {
                        "assignments": [
                          1329
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1329,
                            "mutability": "mutable",
                            "name": "totalStaked",
                            "nameLocation": "9807:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1382,
                            "src": "9799:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1328,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9799:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1331,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9821:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9799:23:8"
                      },
                      {
                        "body": {
                          "id": 1357,
                          "nodeType": "Block",
                          "src": "9881:129:8",
                          "statements": [
                            {
                              "assignments": [
                                1344
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1344,
                                  "mutability": "mutable",
                                  "name": "staker",
                                  "nameLocation": "9907:6:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1357,
                                  "src": "9899:14:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1343,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9899:7:8",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1348,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1345,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 636,
                                  "src": "9916:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1347,
                                "indexExpression": {
                                  "id": 1346,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1333,
                                  "src": "9924:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9916:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9899:27:8"
                            },
                            {
                              "expression": {
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1349,
                                  "name": "totalStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1329,
                                  "src": "9944:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1350,
                                      "name": "stakingBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 645,
                                      "src": "9959:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1352,
                                    "indexExpression": {
                                      "id": 1351,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1323,
                                      "src": "9974:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9959:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1354,
                                  "indexExpression": {
                                    "id": 1353,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1344,
                                    "src": "9981:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9959:29:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9944:44:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1356,
                              "nodeType": "ExpressionStatement",
                              "src": "9944:44:8"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1336,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "9856:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1337,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "9860:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9860:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9856:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1358,
                        "initializationExpression": {
                          "assignments": [
                            1333
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1333,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "9849:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1358,
                              "src": "9841:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1332,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9841:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1335,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9853:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9841:13:8"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9876:3:8",
                            "subExpression": {
                              "id": 1340,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1333,
                              "src": "9876:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1342,
                          "nodeType": "ExpressionStatement",
                          "src": "9876:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "9836:174:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1363,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "10079:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1364,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1329,
                              "src": "10102:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1367,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10139:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingContract_$1499",
                                    "typeString": "contract StakingContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingContract_$1499",
                                    "typeString": "contract StakingContract"
                                  }
                                ],
                                "id": 1366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10131:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1365,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10131:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10131:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1360,
                                  "name": "oldProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1269,
                                  "src": "10040:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1359,
                                "name": "ILendingProtocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1940,
                                "src": "10023:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingProtocol_$1940_$",
                                  "typeString": "type(contract ILendingProtocol)"
                                }
                              },
                              "id": 1361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10023:29:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                                "typeString": "contract ILendingProtocol"
                              }
                            },
                            "id": 1362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1933,
                            "src": "10023:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10023:135:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1370,
                        "nodeType": "ExpressionStatement",
                        "src": "10023:135:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1374,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "10196:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1375,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1329,
                              "src": "10203:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1378,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10224:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingContract_$1499",
                                    "typeString": "contract StakingContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingContract_$1499",
                                    "typeString": "contract StakingContract"
                                  }
                                ],
                                "id": 1377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10216:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1376,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10216:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10216:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1371,
                              "name": "lendingProtocol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "10172:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingProtocol_$1940",
                                "typeString": "contract ILendingProtocol"
                              }
                            },
                            "id": 1373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1921,
                            "src": "10172:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address) external"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10172:58:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1381,
                        "nodeType": "ExpressionStatement",
                        "src": "10172:58:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1315,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "9708:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1316,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "9712:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9712:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9708:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1383,
                  "initializationExpression": {
                    "assignments": [
                      1312
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1312,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9701:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "9693:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9693:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1314,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9705:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9693:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9734:3:8",
                      "subExpression": {
                        "id": 1319,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "9734:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1321,
                    "nodeType": "ExpressionStatement",
                    "src": "9734:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "9688:553:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1385,
                        "name": "_newLendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "10278:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1386,
                        "name": "oldProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1269,
                        "src": "10299:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1384,
                      "name": "LendingProtocolChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "10255:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10255:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1388,
                  "nodeType": "EmitStatement",
                  "src": "10250:61:8"
                }
              ]
            },
            "documentation": {
              "id": 1261,
              "nodeType": "StructuredDocumentation",
              "src": "8990:123:8",
              "text": "@notice Change the lending protocol\n @param _newLendingProtocol The address of the new lending protocol contract"
            },
            "functionSelector": "2b215124",
            "id": 1390,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1265,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1546,
                  "src": "9203:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "9203:9:8"
              }
            ],
            "name": "changeLendingProtocol",
            "nameLocation": "9127:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "_newLendingProtocol",
                  "nameLocation": "9157:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1390,
                  "src": "9149:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9149:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9148:29:8"
            },
            "returnParameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9217:0:8"
            },
            "scope": 1499,
            "src": "9118:1200:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "10528:253:8",
              "statements": [
                {
                  "body": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "10622:153:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1407,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 645,
                                "src": "10640:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1411,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 1408,
                                  "name": "allowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "10655:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1410,
                                "indexExpression": {
                                  "id": 1409,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1397,
                                  "src": "10669:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10655:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10640:32:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1413,
                            "indexExpression": {
                              "id": 1412,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1393,
                              "src": "10673:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10640:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10682:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10640:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1424,
                        "nodeType": "IfStatement",
                        "src": "10636:129:8",
                        "trueBody": {
                          "id": 1423,
                          "nodeType": "Block",
                          "src": "10685:80:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1417,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1393,
                                    "src": "10726:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1418,
                                      "name": "allowedTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 639,
                                      "src": "10733:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1420,
                                    "indexExpression": {
                                      "id": 1419,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1397,
                                      "src": "10747:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10733:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1416,
                                  "name": "_updateOneTokenToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1498,
                                  "src": "10703:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address)"
                                  }
                                },
                                "id": 1421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10703:47:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1422,
                              "nodeType": "ExpressionStatement",
                              "src": "10703:47:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1400,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "10591:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1401,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "10595:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10595:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10591:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1426,
                  "initializationExpression": {
                    "assignments": [
                      1397
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1397,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10584:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "10576:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10576:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1399,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10588:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10576:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10617:3:8",
                      "subExpression": {
                        "id": 1404,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1397,
                        "src": "10617:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1406,
                    "nodeType": "ExpressionStatement",
                    "src": "10617:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "10571:204:8"
                }
              ]
            },
            "documentation": {
              "id": 1391,
              "nodeType": "StructuredDocumentation",
              "src": "10351:119:8",
              "text": "@notice Update the tokenToClaim variable of _user for all token staked\n @param _user The address of the user"
            },
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTokenToClaim",
            "nameLocation": "10484:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "10512:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "10504:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10504:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10503:15:8"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10528:0:8"
            },
            "scope": 1499,
            "src": "10475:306:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1497,
              "nodeType": "Block",
              "src": "11020:562:8",
              "statements": [
                {
                  "assignments": [
                    1437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1437,
                      "mutability": "mutable",
                      "name": "unrealisedYieldTime",
                      "nameLocation": "11038:19:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "11030:27:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11030:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1443,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1438,
                        "name": "userToTokenToUnrealisedYieldTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "11060:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1440,
                      "indexExpression": {
                        "id": 1439,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "11093:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11060:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1442,
                    "indexExpression": {
                      "id": 1441,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1433,
                      "src": "11113:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11060:69:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11030:99:8"
                },
                {
                  "expression": {
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1444,
                          "name": "userToTokenToUnrealisedYieldTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "11139:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1447,
                        "indexExpression": {
                          "id": 1445,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "11172:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11139:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1448,
                      "indexExpression": {
                        "id": 1446,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "11179:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11139:47:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1449,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11189:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11189:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11139:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "11139:65:8"
                },
                {
                  "assignments": [
                    1454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1454,
                      "mutability": "mutable",
                      "name": "valueStaked",
                      "nameLocation": "11223:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "11215:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11215:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1459,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1456,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "11261:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1457,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "11268:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1455,
                      "name": "getUserSingleTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "11237:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11237:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11215:60:8"
                },
                {
                  "assignments": [
                    1461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1461,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "11293:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "11285:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11285:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1466,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1462,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11300:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11300:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1464,
                      "name": "unrealisedYieldTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "11318:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11300:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11285:52:8"
                },
                {
                  "assignments": [
                    1468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1468,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "11355:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "11347:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1467,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11347:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1470,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11361:6:8",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11347:20:8"
                },
                {
                  "assignments": [
                    1472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1472,
                      "mutability": "mutable",
                      "name": "tokenYieldRate",
                      "nameLocation": "11385:14:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "11377:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11377:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1476,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1473,
                      "name": "tokenToYieldRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "11402:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1475,
                    "indexExpression": {
                      "id": 1474,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1433,
                      "src": "11419:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11402:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11377:49:8"
                },
                {
                  "assignments": [
                    1478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1478,
                      "mutability": "mutable",
                      "name": "additionalYield",
                      "nameLocation": "11444:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1497,
                      "src": "11436:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11436:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1490,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1479,
                                    "name": "valueStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1454,
                                    "src": "11464:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1480,
                                    "name": "time",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1461,
                                    "src": "11478:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11464:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1482,
                                  "name": "tokenYieldRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1472,
                                  "src": "11485:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11464:35:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1484,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11463:37:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11515:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "11463:56:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1487,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11462:58:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1488,
                      "name": "day",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1468,
                      "src": "11523:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11462:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11436:90:8"
                },
                {
                  "expression": {
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1491,
                        "name": "tokenToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "11537:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1493,
                      "indexExpression": {
                        "id": 1492,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "11550:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11537:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1494,
                      "name": "additionalYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "11560:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11537:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "11537:38:8"
                }
              ]
            },
            "documentation": {
              "id": 1429,
              "nodeType": "StructuredDocumentation",
              "src": "10787:156:8",
              "text": "@notice Update the tokenToClaim variable of _user for _token\n @param _user The address of the user\n @param _token The address of the token"
            },
            "id": 1498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOneTokenToClaim",
            "nameLocation": "10957:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "10988:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "10980:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10980:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "11003:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "10995:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10995:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10979:31:8"
            },
            "returnParameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11020:0:8"
            },
            "scope": 1499,
            "src": "10948:634:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1500,
        "src": "291:11293:8",
        "usedErrors": []
      }
    ],
    "src": "32:11553:8"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001b0538038062001b058339810160408190526200003491620000de565b6200003f3362000071565b600180546001600160a01b039384166001600160a01b031991821617909155600a805492909316911617905562000116565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000d957600080fd5b919050565b60008060408385031215620000f257600080fd5b620000fd83620000c1565b91506200010d60208401620000c1565b90509250929050565b6119df80620001266000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c806384436d3e116100c3578063da0f06041161007c578063da0f06041461031c578063dd5b846714610347578063f1c5d6c21461036a578063f2fde38b14610392578063f37a55e4146103a5578063fd5e6dd1146103b857600080fd5b806384436d3e14610292578063877dd39d146102a55780638da5cb5b146102b8578063af3f5e22146102c9578063b83e0234146102dc578063c2fb345a146102fc57600080fd5b80632d1ad8b8116101155780632d1ad8b8146102295780634451d89f1461023c5780634b60ce77146102445780635e5583e5146102575780635e5f2e2614610277578063715018a61461028a57600080fd5b80623676221461015c5780630bea440d14610171578063276b11da1461018457806327927b3e146101aa57806329161a00146101eb5780632b21512414610216575b600080fd5b61016f61016a366004611594565b6103cb565b005b61016f61017f3660046115d0565b610522565b6101976101923660046115fc565b610877565b6040519081526020015b60405180910390f35b6101d36101b8366004611626565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101a1565b6101976101f93660046115fc565b600460209081526000928352604080842090915290825290205481565b61016f610224366004611626565b6108de565b61016f610237366004611626565b610bdc565b61016f610ec8565b6001546101d3906001600160a01b031681565b610197610265366004611626565b60086020526000908152604090205481565b6101d3610285366004611648565b610f6a565b61016f610f94565b600a546101d3906001600160a01b031681565b61016f6102b33660046115fc565b610fca565b6000546001600160a01b03166101d3565b6101976102d7366004611626565b611022565b6101976102ea366004611626565b60056020526000908152604090205481565b61019761030a366004611626565b60076020526000908152604090205481565b61019761032a3660046115fc565b600960209081526000928352604080842090915290825290205481565b61035a610355366004611626565b6110ab565b60405190151581526020016101a1565b61037d610378366004611626565b611115565b604080519283526020830191909152016101a1565b61016f6103a0366004611626565b611216565b61016f6103b3366004611661565b6112ae565b6101d36103c6366004611648565b61139f565b6000546001600160a01b031633146103fe5760405162461bcd60e51b81526004016103f59061168b565b60405180910390fd5b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b03858116918217909255600a5460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b3906044016020604051808303816000875af1158015610495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b991906116c0565b6104d55760405162461bcd60e51b81526004016103f5906116e2565b6104df8383610fca565b6104e983826112ae565b6040516001600160a01b038416907f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a490600090a2505050565b600082116105895760405162461bcd60e51b815260206004820152602e60248201527f5374616b696e67436f6e74726163743a20416d6f756e74206d7573742062652060448201526d067726561746572207468616e20360941b60648201526084016103f5565b610592816110ab565b6105f55760405162461bcd60e51b815260206004820152602e60248201527f5374616b696e67436f6e74726163743a20546f6b656e2069732063757272656e60448201526d1d1b1e481b9bc8185b1b1bddd95960921b60648201526084016103f5565b6105ff33826113af565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067691906116c0565b6106d15760405162461bcd60e51b815260206004820152602660248201527f5374616b696e67436f6e74726163743a207472616e7366657246726f6d28292060448201526519985a5b195960d21b60648201526084016103f5565b6001600160a01b03811660009081526004602090815260408083203384529091529020546107255733600090815260056020526040902054610714906001611739565b336000908152600560205260409020555b6001600160a01b0381166000908152600460209081526040808320338452909152902054610754908390611739565b6001600160a01b0382166000908152600460209081526040808320338452825280832093909355600590522054600114156107cc57600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790555b600a54604051633d14d1b760e21b81526001600160a01b039091169063f45346dc9061080090849086903090600401611751565b600060405180830381600087803b15801561081a57600080fd5b505af115801561082e573d6000803e3d6000fd5b50506040518481523392506001600160a01b03841691507f17a90bf25d618e67de9bc66de5762d97787b11707d112164ab54c37111467f2b906020015b60405180910390a35050565b600080600061088584611115565b9092509050600061089782600a611858565b6001600160a01b038087166000908152600460209081526040808320938b16835292905220546108c8908590611864565b6108d29190611883565b93505050505b92915050565b6000546001600160a01b031633146109085760405162461bcd60e51b81526004016103f59061168b565b600a80546001600160a01b038381166001600160a01b03198316179092551660005b6003548110156109f65760038181548110610947576109476118a5565b60009182526020909120015460405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906116c0565b6109e45760405162461bcd60e51b81526004016103f5906116e2565b806109ee816118bb565b91505061092a565b5060005b600354811015610b9457600060038281548110610a1957610a196118a5565b60009182526020822001546001600160a01b03169150805b600254811015610aa457600060028281548110610a5057610a506118a5565b60009182526020808320909101546001600160a01b03878116845260048352604080852091909216808552925290912054909150610a8e9084611739565b9250508080610a9c906118bb565b915050610a31565b50604051631a4ca37b60e21b81526001600160a01b038516906369328dec90610ad590859085903090600401611751565b6020604051808303816000875af1158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1891906118d6565b50600a54604051633d14d1b760e21b81526001600160a01b039091169063f45346dc90610b4d90859085903090600401611751565b600060405180830381600087803b158015610b6757600080fd5b505af1158015610b7b573d6000803e3d6000fd5b5050505050508080610b8c906118bb565b9150506109fa565b50604080516001600160a01b038085168252831660208201527f7b3bd21a9c66cb98f4889da8283172936abd92a905d81830738b651eee374d35910160405180910390a15050565b6001600160a01b038116600090815260046020908152604080832033845290915290205480610c615760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67436f6e74726163743a205374616b696e672062616c616e636560448201526a20616c726561647920302160a81b60648201526084016103f5565b610c6b33836113af565b6001600160a01b038216600090815260046020908152604080832033845282528083208390556005909152902054610ca5906001906118ef565b336000908152600560205260409020819055610dc65760005b600254811015610dc457336001600160a01b031660028281548110610ce557610ce56118a5565b6000918252602090912001546001600160a01b03161415610db25760028054610d10906001906118ef565b81548110610d2057610d206118a5565b600091825260209091200154600280546001600160a01b039092169183908110610d4c57610d4c6118a5565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002805480610d8b57610d8b611906565b600082815260209020810160001990810180546001600160a01b0319169055019055610dc4565b80610dbc816118bb565b915050610cbe565b505b600a54604051631a4ca37b60e21b81526000916001600160a01b0316906369328dec90610dfb90869086903390600401611751565b6020604051808303816000875af1158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e91906118d6565b11610e8b5760405162461bcd60e51b815260206004820152601f60248201527f5374616b696e67436f6e74726163743a207769746864726177206572726f720060448201526064016103f5565b60405181815233906001600160a01b038416907f4c5a68df1e54dd796657dc5832c88515a36dc92548af9951a0ef38dd61a3322e9060200161086b565b610ed133611480565b336000818152600760205260408082208054929055600154905163a9059cbb60e01b815260048101939093526024830182905290916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e91906116c0565b610f6757600080fd5b50565b60038181548110610f7a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610fbe5760405162461bcd60e51b81526004016103f59061168b565b610fc86000611528565b565b6000546001600160a01b03163314610ff45760405162461bcd60e51b81526004016103f59061168b565b6001600160a01b03918216600090815260066020526040902080546001600160a01b03191691909216179055565b6001600160a01b03811660009081526005602052604081205461104757506000919050565b6000805b6003548110156110a457611086846003838154811061106c5761106c6118a5565b6000918252602090912001546001600160a01b0316610877565b6110909083611739565b91508061109c816118bb565b91505061104b565b5092915050565b6000805b60035481101561110c57826001600160a01b0316600382815481106110d6576110d66118a5565b6000918252602090912001546001600160a01b031614156110fa5750600192915050565b80611104816118bb565b9150506110af565b50600092915050565b6001600160a01b03808216600090815260066020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015611176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119a9190611936565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112049190611986565b919760ff909216965090945050505050565b6000546001600160a01b031633146112405760405162461bcd60e51b81526004016103f59061168b565b6001600160a01b0381166112a55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f5565b610f6781611528565b6000546001600160a01b031633146112d85760405162461bcd60e51b81526004016103f59061168b565b60005b600254811015611382576001600160a01b03831660009081526004602052604081206002805483919085908110611314576113146118a5565b60009182526020808320909101546001600160a01b0316835282019290925260400190205411156113705761137060028281548110611355576113556118a5565b6000918252602090912001546001600160a01b0316846113af565b8061137a816118bb565b9150506112db565b506001600160a01b03909116600090815260086020526040902055565b60028181548110610f7a57600080fd5b6001600160a01b0382811660009081526009602090815260408083209385168352929052908120805442909155906113e78484610877565b905060006113f583426118ef565b6001600160a01b038516600090815260086020526040812054919250620151809190826103e8836114268789611864565b6114309190611864565b61143a9190611883565b6114449190611883565b6001600160a01b038916600090815260076020526040812080549293508392909190611471908490611739565b90915550505050505050505050565b60005b60035481101561152457600060046000600384815481106114a6576114a66118a5565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301822093871682529290925290205411156115125761151282600383815481106114f8576114f86118a5565b6000918252602090912001546001600160a01b03166113af565b8061151c816118bb565b915050611483565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461158f57600080fd5b919050565b6000806000606084860312156115a957600080fd5b6115b284611578565b92506115c060208501611578565b9150604084013590509250925092565b600080604083850312156115e357600080fd5b823591506115f360208401611578565b90509250929050565b6000806040838503121561160f57600080fd5b61161883611578565b91506115f360208401611578565b60006020828403121561163857600080fd5b61164182611578565b9392505050565b60006020828403121561165a57600080fd5b5035919050565b6000806040838503121561167457600080fd5b61167d83611578565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116d257600080fd5b8151801515811461164157600080fd5b60208082526021908201527f5374616b696e67436f6e74726163743a20617070726f76652829206661696c656040820152601960fa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561174c5761174c611723565b500190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b600181815b808511156117af57816000190482111561179557611795611723565b808516156117a257918102915b93841c9390800290611779565b509250929050565b6000826117c6575060016108d8565b816117d3575060006108d8565b81600181146117e957600281146117f35761180f565b60019150506108d8565b60ff84111561180457611804611723565b50506001821b6108d8565b5060208310610133831016604e8410600b8410161715611832575081810a6108d8565b61183c8383611774565b806000190482111561185057611850611723565b029392505050565b600061164183836117b7565b600081600019048311821515161561187e5761187e611723565b500290565b6000826118a057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006000198214156118cf576118cf611723565b5060010190565b6000602082840312156118e857600080fd5b5051919050565b60008282101561190157611901611723565b500390565b634e487b7160e01b600052603160045260246000fd5b805169ffffffffffffffffffff8116811461158f57600080fd5b600080600080600060a0868803121561194e57600080fd5b6119578661191c565b945060208601519350604086015192506060860151915061197a6080870161191c565b90509295509295909350565b60006020828403121561199857600080fd5b815160ff8116811461164157600080fdfea2646970667358221220c27c85dd2d8699e5daa16e491275ebf4520ead1bdbbdbe85abf555328efe1e3064736f6c634300080b0033",
  "bytecodeSha1": "5c9c3d7f0643c927fe103044bc36aae6e6f57f44",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "StakingContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "72": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "4": {},
      "5": {},
      "8": {
        "StakingContract._updateTokenToClaim": {
          "71": [
            10640,
            10683,
            false
          ]
        },
        "StakingContract.addAllowedTokens": {
          "59": [
            8056,
            8123,
            true
          ]
        },
        "StakingContract.changeLendingProtocol": {
          "64": [
            9438,
            9568,
            true
          ]
        },
        "StakingContract.claimToken": {
          "68": [
            4791,
            4832,
            true
          ]
        },
        "StakingContract.stakeTokens": {
          "60": [
            2226,
            2237,
            true
          ],
          "61": [
            2319,
            2341,
            true
          ],
          "62": [
            2560,
            2623,
            true
          ],
          "63": [
            3037,
            3072,
            false
          ]
        },
        "StakingContract.tokenIsAllowed": {
          "69": [
            5162,
            5188,
            false
          ]
        },
        "StakingContract.unstakeTokens": {
          "65": [
            3544,
            3555,
            true
          ],
          "66": [
            3976,
            4000,
            false
          ],
          "67": [
            4292,
            4349,
            true
          ]
        },
        "StakingContract.updateYieldRate": {
          "70": [
            8780,
            8818,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "57": [
            2131,
            2148
          ],
          "58": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "38": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "48": [
            1926,
            1999
          ],
          "49": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "4": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "5": {},
      "8": {
        "StakingContract._updateOneTokenToClaim": {
          "53": [
            11139,
            11204
          ],
          "54": [
            11537,
            11575
          ]
        },
        "StakingContract._updateTokenToClaim": {
          "55": [
            10703,
            10750
          ],
          "56": [
            10617,
            10620
          ]
        },
        "StakingContract.addAllowedTokens": {
          "2": [
            7999,
            8025
          ],
          "3": [
            8035,
            8182
          ],
          "4": [
            8192,
            8232
          ],
          "5": [
            8242,
            8273
          ],
          "6": [
            8283,
            8306
          ]
        },
        "StakingContract.changeLendingProtocol": {
          "16": [
            9283,
            9338
          ],
          "17": [
            9413,
            9635
          ],
          "18": [
            9394,
            9397
          ],
          "19": [
            9944,
            9988
          ],
          "20": [
            9876,
            9879
          ],
          "21": [
            10023,
            10158
          ],
          "22": [
            10172,
            10230
          ],
          "23": [
            9734,
            9737
          ],
          "24": [
            10250,
            10311
          ]
        },
        "StakingContract.claimToken": {
          "35": [
            4653,
            4684
          ],
          "36": [
            4745,
            4773
          ],
          "37": [
            4783,
            4833
          ]
        },
        "StakingContract.getTokenValue": {
          "47": [
            7230,
            7263
          ]
        },
        "StakingContract.getUserTotalValue": {
          "40": [
            5606,
            5614
          ],
          "41": [
            5764,
            5826
          ],
          "42": [
            5745,
            5748
          ],
          "43": [
            5846,
            5863
          ]
        },
        "StakingContract.setPriceFeedContract": {
          "39": [
            7630,
            7672
          ]
        },
        "StakingContract.stakeTokens": {
          "7": [
            2218,
            2288
          ],
          "8": [
            2298,
            2413
          ],
          "9": [
            2487,
            2529
          ],
          "10": [
            2539,
            2687
          ],
          "11": [
            2757,
            2824
          ],
          "12": [
            2845,
            2950
          ],
          "13": [
            3088,
            3112
          ],
          "14": [
            3171,
            3226
          ],
          "15": [
            3236,
            3281
          ]
        },
        "StakingContract.tokenIsAllowed": {
          "44": [
            5208,
            5219
          ],
          "45": [
            5139,
            5142
          ],
          "46": [
            5253,
            5265
          ]
        },
        "StakingContract.unstakeTokens": {
          "25": [
            3536,
            3603
          ],
          "26": [
            3645,
            3687
          ],
          "27": [
            3729,
            3767
          ],
          "28": [
            3777,
            3844
          ],
          "29": [
            4024,
            4064
          ],
          "30": [
            4086,
            4099
          ],
          "31": [
            4121,
            4126
          ],
          "32": [
            3949,
            3952
          ],
          "33": [
            4271,
            4406
          ],
          "34": [
            4416,
            4463
          ]
        },
        "StakingContract.updateYieldRate": {
          "50": [
            8838,
            8880
          ],
          "51": [
            8757,
            8760
          ],
          "52": [
            8937,
            8977
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "ILendingProtocol",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "291:11293:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7862:451;;;;;;:::i;:::-;;:::i;:::-;;2117:1171;;;;;;:::i;:::-;;:::i;6112:484::-;;;;;;:::i;:::-;;:::i;:::-;;;1195:25:10;;;1183:2;1168:18;6112:484:8;;;;;;;;704:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;704:56:8;;;;;;-1:-1:-1;;;;;1586:32:10;;;1568:51;;1556:2;1541:18;704:56:8;1422:203:10;468:69:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9118:1200;;;;;;:::i;:::-;;:::i;3383:1087::-;;;;;;:::i;:::-;;:::i;4527:313::-;;;:::i;333:26::-;;;;;-1:-1:-1;;;;;333:26:8;;;1120:51;;;;;;:::i;:::-;;;;;;;;;;;;;;395:30;;;;;;:::i;:::-;;:::i;1605:92:0:-;;;:::i;1323:39:8:-;;;;;-1:-1:-1;;;;;1323:39:8;;;7517:162;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;5474:396:8;;;;;;:::i;:::-;;:::i;610:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;821:47;;;;;;:::i;:::-;;;;;;;;;;;;;;1221:95;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5016:256;;;;;;:::i;:::-;;:::i;:::-;;;2436:14:10;;2429:22;2411:41;;2399:2;2384:18;5016:256:8;2271:187:10;6823:447:8;;;;;;:::i;:::-;;:::i;:::-;;;;2637:25:10;;;2693:2;2678:18;;2671:34;;;;2610:18;6823:447:8;2463:248:10;1846:189:0;;;;;;:::i;:::-;;:::i;8462:522:8:-;;;;;;:::i;:::-;;:::i;365:24::-;;;;;;:::i;:::-;;:::i;7862:451::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;7999:13:8::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;7999:26:8;;;;;::::1;::::0;;-1:-1:-1;;;;;;7999:26:8::1;-1:-1:-1::0;;;;;7999:26:8;;::::1;::::0;;::::1;::::0;;;8087:15:::1;::::0;8056:67:::1;::::0;-1:-1:-1;;;8056:67:8;;8087:15;::::1;8056:67;::::0;::::1;3510:51:10::0;-1:-1:-1;;3577:18:10;;;3570:34;7999:26:8;8056:22:::1;::::0;3483:18:10;;8056:67:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8035:147;;;;-1:-1:-1::0;;;8035:147:8::1;;;;;;;:::i;:::-;8192:40;8213:6;8221:10;8192:20;:40::i;:::-;8242:31;8258:6;8266;8242:15;:31::i;:::-;8288:18;::::0;-1:-1:-1;;;;;8288:18:8;::::1;::::0;::::1;::::0;;;::::1;7862:451:::0;;;:::o;2117:1171::-;2236:1;2226:7;:11;2218:70;;;;-1:-1:-1;;;2218:70:8;;4501:2:10;2218:70:8;;;4483:21:10;4540:2;4520:18;;;4513:30;4579:34;4559:18;;;4552:62;-1:-1:-1;;;4630:18:10;;;4623:44;4684:19;;2218:70:8;4299:410:10;2218:70:8;2319:22;2334:6;2319:14;:22::i;:::-;2298:115;;;;-1:-1:-1;;;2298:115:8;;4916:2:10;2298:115:8;;;4898:21:10;4955:2;4935:18;;;4928:30;4994:34;4974:18;;;4967:62;-1:-1:-1;;;5045:18:10;;;5038:44;5099:19;;2298:115:8;4714:410:10;2298:115:8;2487:42;2510:10;2522:6;2487:22;:42::i;:::-;2560:63;;-1:-1:-1;;;2560:63:8;;2588:10;2560:63;;;5369:34:10;2608:4:8;5419:18:10;;;5412:43;5471:18;;;5464:34;;;-1:-1:-1;;;;;2560:27:8;;;;;5304:18:10;;2560:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2539:148;;;;-1:-1:-1;;;2539:148:8;;5711:2:10;2539:148:8;;;5693:21:10;5750:2;5730:18;;;5723:30;5789:34;5769:18;;;5762:62;-1:-1:-1;;;5840:18:10;;;5833:36;5886:19;;2539:148:8;5509:402:10;2539:148:8;-1:-1:-1;;;;;2702:22:8;;;;;;:14;:22;;;;;;;;2725:10;2702:34;;;;;;;;2698:137;;2809:10;2790:30;;;;:18;:30;;;;;;:34;;2823:1;2790:34;:::i;:::-;2776:10;2757:30;;;;:18;:30;;;;;:67;2698:137;-1:-1:-1;;;;;2894:22:8;;;;;;:14;:22;;;;;;;;2917:10;2894:34;;;;;;;;:56;;2943:7;;2894:56;:::i;:::-;-1:-1:-1;;;;;2845:22:8;;;;;;:14;:22;;;;;;;;2868:10;2845:34;;;;;;;:105;;;;3037:18;:30;;;;3071:1;3037:35;3033:90;;;3088:7;:24;;;;;;;-1:-1:-1;3088:24:8;;;;;;;;-1:-1:-1;;;;;;3088:24:8;3101:10;3088:24;;;3033:90;3171:15;;:55;;-1:-1:-1;;;3171:55:8;;-1:-1:-1;;;;;3171:15:8;;;;:23;;:55;;3195:6;;3203:7;;3220:4;;3171:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3241:40:8;;1195:25:10;;;3261:10:8;;-1:-1:-1;;;;;;3241:40:8;;;-1:-1:-1;3241:40:8;;1183:2:10;1168:18;3241:40:8;;;;;;;;2117:1171;;:::o;6112:484::-;6221:7;6245:13;6260:16;6280:21;6294:6;6280:13;:21::i;:::-;6244:57;;-1:-1:-1;6244:57:8;-1:-1:-1;6326:18:8;6403:12;6244:57;6403:2;:12;:::i;:::-;-1:-1:-1;;;;;6349:22:8;;;;;;;:14;:22;;;;;;;;:29;;;;;;;;;;:37;;6381:5;;6349:37;:::i;:::-;6348:68;;;;:::i;:::-;6326:91;-1:-1:-1;;;;6112:484:8;;;;;:::o;9118:1200::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;9257:15:8::1;::::0;;-1:-1:-1;;;;;9283:55:8;;::::1;-1:-1:-1::0;;;;;;9283:55:8;::::1;;::::0;;;9257:15:::1;9227:19;9348:298;9372:13;:20:::0;9368:24;::::1;9348:298;;;9445:13;9459:1;9445:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;9438:130:::1;::::0;-1:-1:-1;;;9438:130:8;;-1:-1:-1;;;;;3528:32:10;;;9438:130:8::1;::::0;::::1;3510:51:10::0;-1:-1:-1;;3577:18:10;;;3570:34;9445:16:8;;::::1;::::0;9438:32:::1;::::0;3483:18:10;;9438:130:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9413:222;;;;-1:-1:-1::0;;;9413:222:8::1;;;;;;;:::i;:::-;9394:3:::0;::::1;::::0;::::1;:::i;:::-;;;;9348:298;;;;9693:9;9688:553;9712:13;:20:::0;9708:24;::::1;9688:553;;;9753:13;9769;9783:1;9769:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;9769:16:8::1;::::0;-1:-1:-1;9769:16:8;9836:174:::1;9860:7;:14:::0;9856:18;::::1;9836:174;;;9899:14;9916:7;9924:1;9916:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;9959:21:8;;::::1;::::0;;:14:::1;:21:::0;;;;;;9916:10;;;::::1;9959:29:::0;;;;;;;;;9916:10;;-1:-1:-1;9944:44:8::1;::::0;;::::1;:::i;:::-;;;9881:129;9876:3;;;;;:::i;:::-;;;;9836:174;;;-1:-1:-1::0;10023:135:8::1;::::0;-1:-1:-1;;;10023:135:8;;-1:-1:-1;;;;;10023:38:8;::::1;::::0;::::1;::::0;:135:::1;::::0;10079:5;;10102:11;;10139:4:::1;::::0;10023:135:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10172:15:8::1;::::0;:58:::1;::::0;-1:-1:-1;;;10172:58:8;;-1:-1:-1;;;;;10172:15:8;;::::1;::::0;:23:::1;::::0;:58:::1;::::0;10196:5;;10203:11;;10224:4:::1;::::0;10172:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9739:502;;9734:3;;;;;:::i;:::-;;;;9688:553;;;-1:-1:-1::0;10255:56:8::1;::::0;;-1:-1:-1;;;;;9021:15:10;;;9003:34;;9073:15;;9068:2;9053:18;;9046:43;10255:56:8::1;::::0;8938:18:10;10255:56:8::1;;;;;;;9217:1101;9118:1200:::0;:::o;3383:1087::-;-1:-1:-1;;;;;3492:22:8;;3474:15;3492:22;;;:14;:22;;;;;;;;3515:10;3492:34;;;;;;;;3544:11;3536:67;;;;-1:-1:-1;;;3536:67:8;;9302:2:10;3536:67:8;;;9284:21:10;9341:2;9321:18;;;9314:30;9380:34;9360:18;;;9353:62;-1:-1:-1;;;9431:18:10;;;9424:41;9482:19;;3536:67:8;9100:407:10;3536:67:8;3645:42;3668:10;3680:6;3645:22;:42::i;:::-;-1:-1:-1;;;;;3729:22:8;;3766:1;3729:22;;;:14;:22;;;;;;;;3752:10;3729:34;;;;;;;:38;;;3810:18;:30;;;;;;:34;;3843:1;;3810:34;:::i;:::-;3796:10;3777:30;;;;:18;:30;;;;;:67;;;3854:315;;3914:9;3909:250;3933:7;:14;3929:18;;3909:250;;;3990:10;-1:-1:-1;;;;;3976:24:8;:7;3984:1;3976:10;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3976:10:8;:24;3972:173;;;4037:7;4045:14;;:18;;4062:1;;4045:18;:::i;:::-;4037:27;;;;;;;;:::i;:::-;;;;;;;;;;;4024:7;:10;;-1:-1:-1;;;;;4037:27:8;;;;4032:1;;4024:10;;;;;;:::i;:::-;;;;;;;;;:40;;;;;-1:-1:-1;;;;;4024:40:8;;;;;-1:-1:-1;;;;;4024:40:8;;;;;;4086:7;:13;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4086:13:8;;;;;-1:-1:-1;;;;;;4086:13:8;;;;;;4121:5;;3972:173;3949:3;;;;:::i;:::-;;;;3909:250;;;;3854:315;4292:15;;:53;;-1:-1:-1;;;4292:53:8;;4348:1;;-1:-1:-1;;;;;4292:15:8;;:24;;:53;;4317:6;;4325:7;;4334:10;;4292:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;4271:135;;;;-1:-1:-1;;;4271:135:8;;9976:2:10;4271:135:8;;;9958:21:10;10015:2;9995:18;;;9988:30;10054:33;10034:18;;;10027:61;10105:18;;4271:135:8;9774:355:10;4271:135:8;4421:42;;1195:25:10;;;4443:10:8;;-1:-1:-1;;;;;4421:42:8;;;;;1183:2:10;1168:18;4421:42:8;1049:177:10;4527:313:8;4653:31;4673:10;4653:19;:31::i;:::-;4724:10;4694:14;4711:24;;;:12;:24;;;;;;;;4745:28;;;-1:-1:-1;4791:12:8;:41;;-1:-1:-1;;;4791:41:8;;;;;3510:51:10;;;;3577:18;;;3570:34;;;4711:24:8;;-1:-1:-1;;;;;4791:12:8;;;;:21;;3483:18:10;;4791:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4783:50;;;;;;4558:282;4527:313::o;395:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;395:30:8;;-1:-1:-1;395:30:8;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;7517:162:8:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7630:29:8;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;7630:42:8::1;::::0;;;::::1;;::::0;;7517:162::o;5474:396::-;-1:-1:-1;;;;;5560:25:8;;5537:7;5560:25;;;:18;:25;;;;;;5556:69;;-1:-1:-1;5613:1:8;;5474:396;-1:-1:-1;5474:396:8:o;5556:69::-;5634:18;5704:9;5699:138;5723:13;:20;5719:24;;5699:138;;;5778:48;5802:5;5809:13;5823:1;5809:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5809:16:8;5778:23;:48::i;:::-;5764:62;;;;:::i;:::-;;-1:-1:-1;5745:3:8;;;;:::i;:::-;;;;5699:138;;;-1:-1:-1;5853:10:8;5474:396;-1:-1:-1;;5474:396:8:o;5016:256::-;5077:4;;5093:151;5117:13;:20;5113:24;;5093:151;;;5182:6;-1:-1:-1;;;;;5162:26:8;:13;5176:1;5162:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5162:16:8;:26;5158:76;;;-1:-1:-1;5215:4:8;;5016:256;-1:-1:-1;;5016:256:8:o;5158:76::-;5139:3;;;;:::i;:::-;;;;5093:151;;;-1:-1:-1;5260:5:8;;5016:256;-1:-1:-1;;5016:256:8:o;6823:447::-;-1:-1:-1;;;;;6966:29:8;;;6907:7;6966:29;;;:21;:29;;;;;;;7135:27;;-1:-1:-1;;;7135:27:8;;;;6907:7;;;;6966:29;;;;;6907:7;;6966:29;;7135:25;;:27;;;;;;;;;;;;;;;6966:29;7135:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7110:52;;;;;;7172:16;7199:9;-1:-1:-1;;;;;7199:18:8;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7246:5;;7191:29;;;;;-1:-1:-1;7246:5:8;;-1:-1:-1;;;;;6823:447:8:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;11276:2:10;1926:73:0::1;::::0;::::1;11258:21:10::0;11315:2;11295:18;;;11288:30;11354:34;11334:18;;;11327:62;-1:-1:-1;;;11405:18:10;;;11398:36;11451:19;;1926:73:0::1;11074:402:10::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;8462:522:8:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;8722:9:8::1;8717:188;8741:7;:14:::0;8737:18;::::1;8717:188;;;-1:-1:-1::0;;;;;8780:22:8;::::1;8817:1;8780:22:::0;;;:14:::1;:22;::::0;;;;8803:7:::1;:10:::0;;8817:1;;8803:7;8811:1;;8803:10;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;8803:10:8::1;8780:34:::0;;;::::1;::::0;;;;;;;;;:38:::1;8776:119;;;8838:42;8861:7;8869:1;8861:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;8861:10:8::1;8873:6:::0;8838:22:::1;:42::i;:::-;8757:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8717:188;;;-1:-1:-1::0;;;;;;8937:24:8;;::::1;;::::0;;;:16:::1;:24;::::0;;;;:40;8462:522::o;365:24::-;;;;;;;;;;;;10948:634;-1:-1:-1;;;;;11060:39:8;;;11030:27;11060:39;;;:32;:39;;;;;;;;:69;;;;;;;;;;;;;11189:15;11139:65;;;11060:69;11237:38;11060:39;:69;11237:23;:38::i;:::-;11215:60;-1:-1:-1;11285:12:8;11300:37;11318:19;11300:15;:37;:::i;:::-;-1:-1:-1;;;;;11402:24:8;;11347:11;11402:24;;;:16;:24;;;;;;11285:52;;-1:-1:-1;11361:6:8;;11402:24;11361:6;11515:4;11402:24;11464:18;11285:52;11464:11;:18;:::i;:::-;:35;;;;:::i;:::-;11463:56;;;;:::i;:::-;11462:64;;;;:::i;:::-;-1:-1:-1;;;;;11537:19:8;;;;;;:12;:19;;;;;:38;;11436:90;;-1:-1:-1;11436:90:8;;11537:19;;;:38;;11436:90;;11537:38;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;10948:634:8:o;10475:306::-;10576:9;10571:204;10595:13;:20;10591:24;;10571:204;;;10682:1;10640:14;:32;10655:13;10669:1;10655:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10655:16:8;;;10640:32;;;;;;;;;;;;;;;:39;;;;;;;;;;;;:43;10636:129;;;10703:47;10726:5;10733:13;10747:1;10733:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;10733:16:8;10703:22;:47::i;:::-;10617:3;;;;:::i;:::-;;;;10571:204;;;;10475:306;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;525:254::-;593:6;601;654:2;642:9;633:7;629:23;625:32;622:52;;;670:1;667;660:12;622:52;706:9;693:23;683:33;;735:38;769:2;758:9;754:18;735:38;:::i;:::-;725:48;;525:254;;;;;:::o;784:260::-;852:6;860;913:2;901:9;892:7;888:23;884:32;881:52;;;929:1;926;919:12;881:52;952:29;971:9;952:29;:::i;:::-;942:39;;1000:38;1034:2;1023:9;1019:18;1000:38;:::i;1231:186::-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1382:29;1401:9;1382:29;:::i;:::-;1372:39;1231:186;-1:-1:-1;;;1231:186:10:o;1853:180::-;1912:6;1965:2;1953:9;1944:7;1940:23;1936:32;1933:52;;;1981:1;1978;1971:12;1933:52;-1:-1:-1;2004:23:10;;1853:180;-1:-1:-1;1853:180:10:o;2716:254::-;2784:6;2792;2845:2;2833:9;2824:7;2820:23;2816:32;2813:52;;;2861:1;2858;2851:12;2813:52;2884:29;2903:9;2884:29;:::i;:::-;2874:39;2960:2;2945:18;;;;2932:32;;-1:-1:-1;;;2716:254:10:o;2975:356::-;3177:2;3159:21;;;3196:18;;;3189:30;3255:34;3250:2;3235:18;;3228:62;3322:2;3307:18;;2975:356::o;3615:277::-;3682:6;3735:2;3723:9;3714:7;3710:23;3706:32;3703:52;;;3751:1;3748;3741:12;3703:52;3783:9;3777:16;3836:5;3829:13;3822:21;3815:5;3812:32;3802:60;;3858:1;3855;3848:12;3897:397;4099:2;4081:21;;;4138:2;4118:18;;;4111:30;4177:34;4172:2;4157:18;;4150:62;-1:-1:-1;;;4243:2:10;4228:18;;4221:31;4284:3;4269:19;;3897:397::o;5916:127::-;5977:10;5972:3;5968:20;5965:1;5958:31;6008:4;6005:1;5998:15;6032:4;6029:1;6022:15;6048:128;6088:3;6119:1;6115:6;6112:1;6109:13;6106:39;;;6125:18;;:::i;:::-;-1:-1:-1;6161:9:10;;6048:128::o;6181:375::-;-1:-1:-1;;;;;6439:15:10;;;6421:34;;6486:2;6471:18;;6464:34;;;;6534:15;;;6529:2;6514:18;;6507:43;6371:2;6356:18;;6181:375::o;6561:422::-;6650:1;6693:5;6650:1;6707:270;6728:7;6718:8;6715:21;6707:270;;;6787:4;6783:1;6779:6;6775:17;6769:4;6766:27;6763:53;;;6796:18;;:::i;:::-;6846:7;6836:8;6832:22;6829:55;;;6866:16;;;;6829:55;6945:22;;;;6905:15;;;;6707:270;;;6711:3;6561:422;;;;;:::o;6988:806::-;7037:5;7067:8;7057:80;;-1:-1:-1;7108:1:10;7122:5;;7057:80;7156:4;7146:76;;-1:-1:-1;7193:1:10;7207:5;;7146:76;7238:4;7256:1;7251:59;;;;7324:1;7319:130;;;;7231:218;;7251:59;7281:1;7272:10;;7295:5;;;7319:130;7356:3;7346:8;7343:17;7340:43;;;7363:18;;:::i;:::-;-1:-1:-1;;7419:1:10;7405:16;;7434:5;;7231:218;;7533:2;7523:8;7520:16;7514:3;7508:4;7505:13;7501:36;7495:2;7485:8;7482:16;7477:2;7471:4;7468:12;7464:35;7461:77;7458:159;;;-1:-1:-1;7570:19:10;;;7602:5;;7458:159;7649:34;7674:8;7668:4;7649:34;:::i;:::-;7719:6;7715:1;7711:6;7707:19;7698:7;7695:32;7692:58;;;7730:18;;:::i;:::-;7768:20;;6988:806;-1:-1:-1;;;6988:806:10:o;7799:131::-;7859:5;7888:36;7915:8;7909:4;7888:36;:::i;7935:168::-;7975:7;8041:1;8037;8033:6;8029:14;8026:1;8023:21;8018:1;8011:9;8004:17;8000:45;7997:71;;;8048:18;;:::i;:::-;-1:-1:-1;8088:9:10;;7935:168::o;8108:217::-;8148:1;8174;8164:132;;8218:10;8213:3;8209:20;8206:1;8199:31;8253:4;8250:1;8243:15;8281:4;8278:1;8271:15;8164:132;-1:-1:-1;8310:9:10;;8108:217::o;8330:127::-;8391:10;8386:3;8382:20;8379:1;8372:31;8422:4;8419:1;8412:15;8446:4;8443:1;8436:15;8462:135;8501:3;-1:-1:-1;;8522:17:10;;8519:43;;;8542:18;;:::i;:::-;-1:-1:-1;8589:1:10;8578:13;;8462:135::o;8602:184::-;8672:6;8725:2;8713:9;8704:7;8700:23;8696:32;8693:52;;;8741:1;8738;8731:12;8693:52;-1:-1:-1;8764:16:10;;8602:184;-1:-1:-1;8602:184:10:o;9512:125::-;9552:4;9580:1;9577;9574:8;9571:34;;;9585:18;;:::i;:::-;-1:-1:-1;9622:9:10;;9512:125::o;9642:127::-;9703:10;9698:3;9694:20;9691:1;9684:31;9734:4;9731:1;9724:15;9758:4;9755:1;9748:15;10134:179;10212:13;;10265:22;10254:34;;10244:45;;10234:73;;10303:1;10300;10293:12;10318:473;10421:6;10429;10437;10445;10453;10506:3;10494:9;10485:7;10481:23;10477:33;10474:53;;;10523:1;10520;10513:12;10474:53;10546:39;10575:9;10546:39;:::i;:::-;10536:49;;10625:2;10614:9;10610:18;10604:25;10594:35;;10669:2;10658:9;10654:18;10648:25;10638:35;;10713:2;10702:9;10698:18;10692:25;10682:35;;10736:49;10780:3;10769:9;10765:19;10736:49;:::i;:::-;10726:59;;10318:473;;;;;;;;:::o;10796:273::-;10864:6;10917:2;10905:9;10896:7;10892:23;10888:32;10885:52;;;10933:1;10930;10923:12;10885:52;10965:9;10959:16;11015:4;11008:5;11004:16;10997:5;10994:27;10984:55;;11035:1;11032;11025:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address,address,uint256)": {
        "notice": "Add a new _token to the list of stakable token",
        "params": {
          "_pricefeed": "The address for the price feed of _token",
          "_token": "The address of the token"
        }
      },
      "changeLendingProtocol(address)": {
        "notice": "Change the lending protocol",
        "params": {
          "_newLendingProtocol": "The address of the new lending protocol contract"
        }
      },
      "claimToken()": {
        "notice": "Send Earned \"ProjectToken\" to user"
      },
      "getTokenValue(address)": {
        "notice": "Get the value (in USD) of a _token and its decimals()",
        "params": {
          "_token": "The address of the token"
        },
        "returns": {
          "_0": "price The value of _token",
          "_1": "decimals The number of decimals of the _token"
        }
      },
      "getUserSingleTokenValue(address,address)": {
        "notice": "Get the value (in USD) of _token staked by _user",
        "params": {
          "_token": "The address of the token",
          "_user": "The address of the user"
        },
        "returns": {
          "_0": "tokenValue The value of _token staked on the contract by _user"
        }
      },
      "getUserTotalValue(address)": {
        "notice": "Get the total value (in USD) staked by _user",
        "params": {
          "_user": "The address of the user"
        },
        "returns": {
          "_0": "totalValue The total value  of the tokens staked on the contract by _user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setPriceFeedContract(address,address)": {
        "details": "Gets call automatically when adding new token",
        "notice": "Set the price feed address for an ERC20 token",
        "params": {
          "_priceFeed": "The address of the pricefeed",
          "_token": "The address of the token"
        }
      },
      "stakeTokens(uint256,address)": {
        "notice": "Stake _amount of _token",
        "params": {
          "_amount": "The amount ot stake",
          "_token": "The address of the token"
        }
      },
      "tokenIsAllowed(address)": {
        "notice": "Check wheter a token is stakable on this contract",
        "params": {
          "_token": "The address of the token"
        },
        "returns": {
          "_0": "bool Wheter the token is stakable or not"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstakeTokens(address)": {
        "notice": "Unstake all _token staked",
        "params": {
          "_token": "The address of the token"
        }
      },
      "updateYieldRate(address,uint256)": {
        "params": {
          "_newYieldRate": "The new yield rate",
          "_token": "The address of the token"
        }
      }
    },
    "version": 1
  },
  "offset": [
    291,
    11584
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84436D3E GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDA0F0604 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDA0F0604 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xF37A55E4 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84436D3E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xC2FB345A EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D1AD8B8 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x4451D89F EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x4B60CE77 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x5E5583E5 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x367622 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xBEA440D EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x276B11DA EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x2B215124 EQ PUSH2 0x216 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x16F PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0x16F PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x16F PUSH2 0xF94 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1626 JUMP JUMPDEST PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x139F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x4DF DUP4 DUP4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x4E9 DUP4 DUP3 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A20416D6F756E74206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x67726561746572207468616E203 PUSH1 0x94 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A20546F6B656E2069732063757272656E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1D1B1E481B9BC8185B1B1BDDD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x5FF CALLER DUP3 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A207472616E7366657246726F6D282920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x19985A5B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x725 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x714 SWAP1 PUSH1 0x1 PUSH2 0x1739 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x754 SWAP1 DUP4 SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x7CC JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3D14D1B7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF45346DC SWAP1 PUSH2 0x800 SWAP1 DUP5 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 POP PUSH32 0x17A90BF25D618E67DE9BC66DE5762D97787B11707D112164AB54C37111467F2B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x885 DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x897 DUP3 PUSH1 0xA PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP12 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x8C8 SWAP1 DUP6 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND OR SWAP1 SWAP3 SSTORE AND PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x947 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH2 0x9EE DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x92A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA19 JUMPI PUSH2 0xA19 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA50 JUMPI PUSH2 0xA50 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA8E SWAP1 DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xA9C SWAP1 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA31 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0xAD5 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3D14D1B7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF45346DC SWAP1 PUSH2 0xB4D SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP DUP1 DUP1 PUSH2 0xB8C SWAP1 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7B3BD21A9C66CB98F4889DA8283172936ABD92A905D81830738B651EEE374D35 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A205374616B696E672062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x20616C7265616479203021 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xC6B CALLER DUP4 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xCA5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x18EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xDC6 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xDC4 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH2 0xD10 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x18EF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD20 JUMPI PUSH2 0xD20 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD4C JUMPI PUSH2 0xD4C PUSH2 0x18A5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0xD8B JUMPI PUSH2 0xD8B PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xDC4 JUMP JUMPDEST DUP1 PUSH2 0xDBC DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCBE JUMP JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0xDFB SWAP1 DUP7 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST GT PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A207769746864726177206572726F7200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x4C5A68DF1E54DD796657DC5832C88515A36DC92548AF9951A0EF38DD61A3322E SWAP1 PUSH1 0x20 ADD PUSH2 0x86B JUMP JUMPDEST PUSH2 0xED1 CALLER PUSH2 0x1480 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0xF67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH2 0xFC8 PUSH1 0x0 PUSH2 0x1528 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1047 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x1086 DUP5 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x106C JUMPI PUSH2 0x106C PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x877 JUMP JUMPDEST PUSH2 0x1090 SWAP1 DUP4 PUSH2 0x1739 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x109C DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x104B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x110C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10D6 JUMPI PUSH2 0x10D6 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10FA JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1104 DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10AF JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1204 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1240 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xF67 DUP2 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1314 JUMPI PUSH2 0x1314 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x1370 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1355 JUMPI PUSH2 0x1355 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x13AF JUMP JUMPDEST DUP1 PUSH2 0x137A DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12DB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD TIMESTAMP SWAP1 SWAP2 SSTORE SWAP1 PUSH2 0x13E7 DUP5 DUP5 PUSH2 0x877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13F5 DUP4 TIMESTAMP PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH3 0x15180 SWAP2 SWAP1 DUP3 PUSH2 0x3E8 DUP4 PUSH2 0x1426 DUP8 DUP10 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x1430 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x143A SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1444 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1471 SWAP1 DUP5 SWAP1 PUSH2 0x1739 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1524 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x14A6 JUMPI PUSH2 0x14A6 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP8 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1512 JUMPI PUSH2 0x1512 DUP3 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14F8 JUMPI PUSH2 0x14F8 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AF JUMP JUMPDEST DUP1 PUSH2 0x151C DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1483 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x158F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B2 DUP5 PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP PUSH2 0x15C0 PUSH1 0x20 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x15F3 PUSH1 0x20 DUP5 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1618 DUP4 PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F3 PUSH1 0x20 DUP5 ADD PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1641 DUP3 PUSH2 0x1578 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x167D DUP4 PUSH2 0x1578 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A20617070726F76652829206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x174C JUMPI PUSH2 0x174C PUSH2 0x1723 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x17AF JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1795 PUSH2 0x1723 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x17A2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1779 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17C6 JUMPI POP PUSH1 0x1 PUSH2 0x8D8 JUMP JUMPDEST DUP2 PUSH2 0x17D3 JUMPI POP PUSH1 0x0 PUSH2 0x8D8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x17E9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x17F3 JUMPI PUSH2 0x180F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1804 PUSH2 0x1723 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8D8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1832 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x183C DUP4 DUP4 PUSH2 0x1774 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1850 JUMPI PUSH2 0x1850 PUSH2 0x1723 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1641 DUP4 DUP4 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x187E JUMPI PUSH2 0x187E PUSH2 0x1723 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18CF PUSH2 0x1723 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1901 JUMPI PUSH2 0x1901 PUSH2 0x1723 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x158F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1957 DUP7 PUSH2 0x191C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x197A PUSH1 0x80 DUP8 ADD PUSH2 0x191C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1641 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH29 0x85DD2D8699E5DAA16E491275EBF4520EAD1BDBBDBE85ABF555328EFE1E ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "25": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x84436D3E"
    },
    "38": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDA0F0604"
    },
    "49": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDA0F0604"
    },
    "60": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31C"
    },
    "64": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD5B8467"
    },
    "71": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x347"
    },
    "75": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36A"
    },
    "86": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x392"
    },
    "97": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF37A55E4"
    },
    "104": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "105": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A5"
    },
    "108": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "109": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFD5E6DD1"
    },
    "115": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "116": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B8"
    },
    "119": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "120": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "123": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "REVERT",
      "path": "8"
    },
    "124": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x84436D3E"
    },
    "131": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x292"
    },
    "135": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x877DD39D"
    },
    "142": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A5"
    },
    "146": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "154": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B8"
    },
    "157": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "158": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAF3F5E22"
    },
    "164": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "165": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C9"
    },
    "168": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "169": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB83E0234"
    },
    "175": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "176": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2DC"
    },
    "179": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "180": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "181": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC2FB345A"
    },
    "186": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "187": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FC"
    },
    "190": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "191": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "194": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "REVERT",
      "path": "8"
    },
    "195": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "197": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2D1AD8B8"
    },
    "202": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "GT",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "207": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "208": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2D1AD8B8"
    },
    "213": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "214": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x229"
    },
    "217": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "218": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4451D89F"
    },
    "224": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "225": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23C"
    },
    "228": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "229": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "230": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4B60CE77"
    },
    "235": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "236": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x244"
    },
    "239": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "240": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "241": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5E5583E5"
    },
    "246": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "247": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x257"
    },
    "250": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "251": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "252": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5E5F2E26"
    },
    "257": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "258": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x277"
    },
    "261": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "263": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "268": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28A"
    },
    "272": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "273": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "276": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "REVERT",
      "path": "8"
    },
    "277": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "278": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "279": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x367622"
    },
    "283": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "284": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C"
    },
    "287": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "288": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "289": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xBEA440D"
    },
    "294": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "295": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x171"
    },
    "298": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "299": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "300": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x276B11DA"
    },
    "305": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "306": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x184"
    },
    "309": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "310": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "311": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x27927B3E"
    },
    "316": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "317": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AA"
    },
    "320": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "321": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "322": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x29161A00"
    },
    "327": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "328": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EB"
    },
    "331": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "332": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "333": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2B215124"
    },
    "338": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "EQ",
      "path": "8"
    },
    "339": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x216"
    },
    "342": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "343": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "344": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "346": {
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "DUP1",
      "path": "8"
    },
    "347": {
      "first_revert": true,
      "fn": null,
      "offset": [
        291,
        11584
      ],
      "op": "REVERT",
      "path": "8"
    },
    "348": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "349": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "352": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A"
    },
    "355": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "356": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "358": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1594"
    },
    "361": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMP",
      "path": "8"
    },
    "362": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "363": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3CB"
    },
    "366": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMP",
      "path": "8"
    },
    "367": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "368": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "STOP",
      "path": "8"
    },
    "369": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "370": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "373": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17F"
    },
    "376": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "377": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "379": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15D0"
    },
    "382": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2117,
        3288
      ],
      "op": "JUMP",
      "path": "8"
    },
    "383": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "384": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x522"
    },
    "387": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2117,
        3288
      ],
      "op": "JUMP",
      "path": "8"
    },
    "388": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "389": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "392": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x192"
    },
    "395": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "396": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "398": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15FC"
    },
    "401": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMP",
      "path": "8"
    },
    "402": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "403": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "406": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMP",
      "path": "8"
    },
    "407": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "408": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "410": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "411": {
      "op": "SWAP1"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "418": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "420": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "421": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "DUP1",
      "path": "8"
    },
    "422": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "423": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "SUB",
      "path": "8"
    },
    "424": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "425": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "RETURN",
      "path": "8"
    },
    "426": {
      "offset": [
        704,
        760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "427": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "430": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B8"
    },
    "433": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "434": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "436": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "439": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        704,
        760
      ],
      "op": "JUMP",
      "path": "8"
    },
    "440": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "441": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "443": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "445": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "446": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "448": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "449": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "DUP2",
      "path": "8"
    },
    "450": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "451": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "453": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "454": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "455": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "SUB"
    },
    "464": {
      "offset": [
        704,
        760
      ],
      "op": "AND",
      "path": "8"
    },
    "465": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "DUP2",
      "path": "8"
    },
    "466": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "JUMP",
      "path": "8"
    },
    "467": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "468": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "470": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "op": "SWAP1"
    },
    "480": {
      "op": "SWAP2"
    },
    "481": {
      "op": "AND"
    },
    "482": {
      "op": "DUP2"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "490": {
      "op": "JUMP"
    },
    "491": {
      "offset": [
        468,
        537
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "492": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "495": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F9"
    },
    "498": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "499": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "501": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15FC"
    },
    "504": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        468,
        537
      ],
      "op": "JUMP",
      "path": "8"
    },
    "505": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "506": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "508": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "510": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "511": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP2",
      "path": "8"
    },
    "512": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "513": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "515": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "516": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP4",
      "path": "8"
    },
    "517": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "518": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "520": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP1",
      "path": "8"
    },
    "521": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP5",
      "path": "8"
    },
    "522": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "523": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "524": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "525": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "526": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "527": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP3",
      "path": "8"
    },
    "528": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "529": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "530": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "531": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "532": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP2",
      "path": "8"
    },
    "533": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "JUMP",
      "path": "8"
    },
    "534": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "535": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "538": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x224"
    },
    "541": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "542": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "544": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "547": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9118,
        10318
      ],
      "op": "JUMP",
      "path": "8"
    },
    "548": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "549": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8DE"
    },
    "552": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9118,
        10318
      ],
      "op": "JUMP",
      "path": "8"
    },
    "553": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "554": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "557": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x237"
    },
    "560": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "561": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "563": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "566": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3383,
        4470
      ],
      "op": "JUMP",
      "path": "8"
    },
    "567": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "568": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBDC"
    },
    "571": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3383,
        4470
      ],
      "op": "JUMP",
      "path": "8"
    },
    "572": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4527,
        4840
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "573": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4527,
        4840
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "576": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4527,
        4840
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEC8"
    },
    "579": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        4527,
        4840
      ],
      "op": "JUMP",
      "path": "8"
    },
    "580": {
      "offset": [
        333,
        359
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "581": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "583": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "584": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "587": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "SUB"
    },
    "596": {
      "offset": [
        333,
        359
      ],
      "op": "AND",
      "path": "8"
    },
    "597": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "DUP2",
      "path": "8"
    },
    "598": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "JUMP",
      "path": "8"
    },
    "599": {
      "offset": [
        1120,
        1171
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "600": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "603": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x265"
    },
    "606": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "607": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "609": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "612": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        1120,
        1171
      ],
      "op": "JUMP",
      "path": "8"
    },
    "613": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "614": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "616": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "618": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "619": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "621": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "622": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "DUP2",
      "path": "8"
    },
    "623": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "624": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "626": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "627": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "628": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "629": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "DUP2",
      "path": "8"
    },
    "630": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "JUMP",
      "path": "8"
    },
    "631": {
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "632": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "635": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x285"
    },
    "638": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "639": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "641": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1648"
    },
    "644": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        395,
        425
      ],
      "op": "JUMP",
      "path": "8"
    },
    "645": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "646": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF6A"
    },
    "649": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        395,
        425
      ],
      "op": "JUMP",
      "path": "8"
    },
    "650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF94"
    },
    "657": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "658": {
      "offset": [
        1323,
        1362
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "SUB"
    },
    "674": {
      "offset": [
        1323,
        1362
      ],
      "op": "AND",
      "path": "8"
    },
    "675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "DUP2",
      "path": "8"
    },
    "676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "JUMP",
      "path": "8"
    },
    "677": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "678": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "681": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B3"
    },
    "684": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "685": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "687": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15FC"
    },
    "690": {
      "fn": "StakingContract.setPriceFeedContract",
      "jump": "i",
      "offset": [
        7517,
        7679
      ],
      "op": "JUMP",
      "path": "8"
    },
    "691": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "692": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFCA"
    },
    "695": {
      "fn": "StakingContract.setPriceFeedContract",
      "jump": "i",
      "offset": [
        7517,
        7679
      ],
      "op": "JUMP",
      "path": "8"
    },
    "696": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "699": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "709": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "712": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "713": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "714": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "717": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D7"
    },
    "720": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "721": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "723": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "726": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "727": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "728": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1022"
    },
    "731": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "732": {
      "offset": [
        610,
        663
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "733": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "736": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2EA"
    },
    "739": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "740": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "742": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "745": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        610,
        663
      ],
      "op": "JUMP",
      "path": "8"
    },
    "746": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "747": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "749": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "751": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "752": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "754": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "755": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "DUP2",
      "path": "8"
    },
    "756": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "757": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "759": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "760": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "761": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "762": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "DUP2",
      "path": "8"
    },
    "763": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "JUMP",
      "path": "8"
    },
    "764": {
      "offset": [
        821,
        868
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "765": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "768": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30A"
    },
    "771": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "772": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "774": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "777": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        821,
        868
      ],
      "op": "JUMP",
      "path": "8"
    },
    "778": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "779": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "781": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "783": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "784": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "786": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "787": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "DUP2",
      "path": "8"
    },
    "788": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "789": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "791": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "792": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "793": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "794": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "DUP2",
      "path": "8"
    },
    "795": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "JUMP",
      "path": "8"
    },
    "796": {
      "offset": [
        1221,
        1316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "797": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "800": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32A"
    },
    "803": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "804": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "806": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15FC"
    },
    "809": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        1221,
        1316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "810": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "811": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "813": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "815": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "816": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP2",
      "path": "8"
    },
    "817": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "818": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "820": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "821": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP4",
      "path": "8"
    },
    "822": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "823": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "825": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP1",
      "path": "8"
    },
    "826": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP5",
      "path": "8"
    },
    "827": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "828": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "829": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "830": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "831": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "832": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP3",
      "path": "8"
    },
    "833": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "834": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "835": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "836": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "837": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP2",
      "path": "8"
    },
    "838": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "839": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "840": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35A"
    },
    "843": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x355"
    },
    "846": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "847": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "849": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "852": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMP",
      "path": "8"
    },
    "853": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "854": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AB"
    },
    "857": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMP",
      "path": "8"
    },
    "858": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "859": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "861": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "873": {
      "op": "JUMP"
    },
    "874": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "875": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x37D"
    },
    "878": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x378"
    },
    "881": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "882": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "884": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1626"
    },
    "887": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMP",
      "path": "8"
    },
    "888": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "889": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1115"
    },
    "892": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMP",
      "path": "8"
    },
    "893": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "894": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "896": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "DUP1",
      "path": "8"
    },
    "897": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "898": {
      "op": "SWAP3"
    },
    "899": {
      "op": "DUP4"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "903": {
      "op": "DUP4"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "op": "SWAP2"
    },
    "906": {
      "op": "SWAP1"
    },
    "907": {
      "op": "SWAP2"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "913": {
      "op": "JUMP"
    },
    "914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1626"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1216"
    },
    "932": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "933": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "934": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "937": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B3"
    },
    "940": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "941": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "943": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1661"
    },
    "946": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8462,
        8984
      ],
      "op": "JUMP",
      "path": "8"
    },
    "947": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "948": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12AE"
    },
    "951": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8462,
        8984
      ],
      "op": "JUMP",
      "path": "8"
    },
    "952": {
      "offset": [
        365,
        389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "953": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "956": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C6"
    },
    "959": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "960": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "962": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1648"
    },
    "965": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        365,
        389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "966": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "967": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x139F"
    },
    "970": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        365,
        389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "971": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "974": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "985": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "986": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "989": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "990": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "992": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1001": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1002": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1004": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1005": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1009": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "1012": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1013": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1016": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1017": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1019": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1020": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1021": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1022": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8012
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x3"
    },
    "1025": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1026": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1027": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1029": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1030": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "ADD",
      "path": "8"
    },
    "1031": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1032": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1035": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1036": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1037": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1038": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1039": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1072": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "ADD",
      "path": "8"
    },
    "1073": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1074": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "op": "NOT"
    },
    "1084": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "AND",
      "path": "8"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1094": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1095": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "AND",
      "path": "8"
    },
    "1096": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1097": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1098": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "OR",
      "path": "8"
    },
    "1099": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1100": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1101": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1102": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8087,
        8102
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0xA"
    },
    "1104": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8087,
        8102
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1105": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1107": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1108": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1117": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1118": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8087,
        8102
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1119": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8087,
        8102
      ],
      "op": "AND",
      "path": "8"
    },
    "1120": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1122": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1123": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "ADD",
      "path": "8"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1127": {
      "op": "NOT"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1130": {
      "op": "DUP4"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7999,
        8025
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1134": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8078
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "1139": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8078
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1145": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1147": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1148": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1149": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1150": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "SUB",
      "path": "8"
    },
    "1151": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1152": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1154": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1155": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "GAS",
      "path": "8"
    },
    "1156": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "CALL",
      "path": "8"
    },
    "1157": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1158": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1159": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1160": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x495"
    },
    "1163": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1164": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1165": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1167": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1168": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1169": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1170": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1172": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1173": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1174": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "POP",
      "path": "8"
    },
    "1175": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "POP",
      "path": "8"
    },
    "1176": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "POP",
      "path": "8"
    },
    "1177": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "POP",
      "path": "8"
    },
    "1178": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1180": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1181": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1182": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1184": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "NOT",
      "path": "8"
    },
    "1185": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1187": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1188": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "ADD",
      "path": "8"
    },
    "1189": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "AND",
      "path": "8"
    },
    "1190": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1191": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "ADD",
      "path": "8"
    },
    "1192": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1193": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1195": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1196": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "POP",
      "path": "8"
    },
    "1197": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1198": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "ADD",
      "path": "8"
    },
    "1199": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1200": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4B9"
    },
    "1203": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1204": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1205": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C0"
    },
    "1208": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8056,
        8123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1209": {
      "branch": 59,
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8056,
        8123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1210": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D5"
    },
    "1213": {
      "branch": 59,
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1214": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1216": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1225": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1226": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1228": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "ADD",
      "path": "8"
    },
    "1229": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1232": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1233": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16E2"
    },
    "1236": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8035,
        8182
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1237": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8035,
        8182
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1238": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8192,
        8232
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 4,
      "value": "0x4DF"
    },
    "1241": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8213,
        8219
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1242": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8221,
        8231
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1243": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8192,
        8212
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFCA"
    },
    "1246": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8192,
        8232
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1247": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8192,
        8232
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1248": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8242,
        8273
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 5,
      "value": "0x4E9"
    },
    "1251": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8258,
        8264
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1252": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8266,
        8272
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1253": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8242,
        8257
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12AE"
    },
    "1256": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8242,
        8273
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1257": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8242,
        8273
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1258": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x40"
    },
    "1260": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1270": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "AND",
      "path": "8"
    },
    "1271": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1272": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4"
    },
    "1305": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1306": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1308": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1309": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8288,
        8306
      ],
      "op": "LOG2",
      "path": "8"
    },
    "1310": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "POP",
      "path": "8"
    },
    "1311": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "POP",
      "path": "8"
    },
    "1312": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        7862,
        8313
      ],
      "op": "POP",
      "path": "8"
    },
    "1313": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "o",
      "offset": [
        7862,
        8313
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1314": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1315": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2236,
        2237
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x0"
    },
    "1317": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2226,
        2233
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1318": {
      "branch": 60,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2226,
        2237
      ],
      "op": "GT",
      "path": "8"
    },
    "1319": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x589"
    },
    "1322": {
      "branch": 60,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1323": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1325": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1334": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1337": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1339": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1340": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "ADD",
      "path": "8"
    },
    "1341": {
      "op": "MSTORE"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A20416D6F756E74206D75737420626520"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1384": {
      "op": "DUP3"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "MSTORE"
    },
    "1387": {
      "op": "PUSH14",
      "value": "0x67726561746572207468616E203"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1407": {
      "op": "DUP3"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "MSTORE"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1416": {
      "op": "JUMP"
    },
    "1417": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2218,
        2288
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1418": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2319,
        2341
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 8,
      "value": "0x592"
    },
    "1421": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2334,
        2340
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1422": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2319,
        2333
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AB"
    },
    "1425": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2319,
        2341
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1426": {
      "branch": 61,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2319,
        2341
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1427": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F5"
    },
    "1430": {
      "branch": 61,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1431": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1433": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1442": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1445": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1447": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1448": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "ADD",
      "path": "8"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1454": {
      "op": "DUP3"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "op": "MSTORE"
    },
    "1457": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A20546F6B656E2069732063757272656E"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1492": {
      "op": "DUP3"
    },
    "1493": {
      "op": "ADD"
    },
    "1494": {
      "op": "MSTORE"
    },
    "1495": {
      "op": "PUSH14",
      "value": "0x1D1B1E481B9BC8185B1B1BDDD959"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1515": {
      "op": "DUP3"
    },
    "1516": {
      "op": "ADD"
    },
    "1517": {
      "op": "MSTORE"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1524": {
      "op": "JUMP"
    },
    "1525": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2298,
        2413
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1526": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2487,
        2529
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 9,
      "value": "0x5FF"
    },
    "1529": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2510,
        2520
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1530": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2522,
        2528
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1531": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2487,
        2509
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13AF"
    },
    "1534": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2487,
        2529
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1535": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2487,
        2529
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1536": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x40"
    },
    "1538": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1539": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1548": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1549": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2588,
        2598
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1550": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1552": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1553": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "ADD",
      "path": "8"
    },
    "1554": {
      "op": "MSTORE"
    },
    "1555": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2612
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "DUP4"
    },
    "1566": {
      "op": "SWAP1"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1574": {
      "op": "SHL"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2587
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1577": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2587
      ],
      "op": "AND",
      "path": "8"
    },
    "1578": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2587
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1579": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2587
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "1584": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2587
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1590": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1592": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1593": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1594": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1595": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "SUB",
      "path": "8"
    },
    "1596": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1597": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1599": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1600": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "GAS",
      "path": "8"
    },
    "1601": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "CALL",
      "path": "8"
    },
    "1602": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1603": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1604": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1605": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x652"
    },
    "1608": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1609": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1610": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1612": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1613": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1614": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1615": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1617": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1618": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1619": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "POP",
      "path": "8"
    },
    "1620": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "POP",
      "path": "8"
    },
    "1621": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "POP",
      "path": "8"
    },
    "1622": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "POP",
      "path": "8"
    },
    "1623": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1625": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1626": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1627": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1629": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "NOT",
      "path": "8"
    },
    "1630": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1632": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1633": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "ADD",
      "path": "8"
    },
    "1634": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "AND",
      "path": "8"
    },
    "1635": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1636": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "ADD",
      "path": "8"
    },
    "1637": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1638": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1640": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1641": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "POP",
      "path": "8"
    },
    "1642": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1643": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "ADD",
      "path": "8"
    },
    "1644": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1645": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x676"
    },
    "1648": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1649": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1650": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C0"
    },
    "1653": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2560,
        2623
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1654": {
      "branch": 62,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2560,
        2623
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1655": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6D1"
    },
    "1658": {
      "branch": 62,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1659": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1661": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1670": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1675": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1676": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "ADD",
      "path": "8"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A207472616E7366657246726F6D282920"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH6",
      "value": "0x19985A5B1959"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1735": {
      "op": "DUP3"
    },
    "1736": {
      "op": "ADD"
    },
    "1737": {
      "op": "MSTORE"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1744": {
      "op": "JUMP"
    },
    "1745": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2539,
        2687
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "op": "SUB"
    },
    "1754": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1755": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "AND",
      "path": "8"
    },
    "1756": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1758": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1759": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1760": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1761": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2716
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1763": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1765": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1766": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1767": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1768": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1770": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1771": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1772": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2724
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1773": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2725,
        2735
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1774": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1775": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1776": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1777": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1778": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1779": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1780": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1781": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2702,
        2736
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1782": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2698,
        2835
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x725"
    },
    "1785": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2698,
        2835
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1786": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2809,
        2819
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 11
    },
    "1787": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1789": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1790": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1791": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1792": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2808
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1794": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1796": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1797": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1799": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1800": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1801": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2820
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1802": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x714"
    },
    "1805": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2824
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1806": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2823,
        2824
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1808": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1739"
    },
    "1811": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2790,
        2824
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1812": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2790,
        2824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1813": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2776,
        2786
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1814": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1816": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1817": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1818": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1819": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1821": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1823": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1824": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1826": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1827": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2787
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1828": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2757,
        2824
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1829": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2698,
        2835
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 12
    },
    "1839": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "AND",
      "path": "8"
    },
    "1840": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1842": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1843": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1844": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1845": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2908
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1847": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1849": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1850": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1851": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1852": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1854": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1855": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1856": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2916
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1857": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2917,
        2927
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1858": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1859": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1860": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1861": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1862": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1863": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1864": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1865": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2928
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1866": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2950
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x754"
    },
    "1869": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2950
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1870": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2943,
        2950
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1871": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2943,
        2950
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1872": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2950
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1739"
    },
    "1875": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2894,
        2950
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1876": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2894,
        2950
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1886": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "AND",
      "path": "8"
    },
    "1887": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1889": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1890": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1891": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1892": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2859
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1894": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1896": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1897": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1898": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1899": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1901": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1902": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1903": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2867
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1904": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2868,
        2878
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1905": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1906": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1907": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1908": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1909": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1910": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1911": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2879
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1912": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2950
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1913": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2950
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1914": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2950
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1915": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2950
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1916": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3037,
        3055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1918": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3037,
        3067
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1919": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3037,
        3067
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1920": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3037,
        3067
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1921": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3037,
        3067
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1922": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3071,
        3072
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1924": {
      "branch": 63,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3037,
        3072
      ],
      "op": "EQ",
      "path": "8"
    },
    "1925": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3033,
        3123
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1926": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3033,
        3123
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7CC"
    },
    "1929": {
      "branch": 63,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3033,
        3123
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1930": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3095
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0x2"
    },
    "1932": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1933": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1934": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1936": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1937": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "ADD",
      "path": "8"
    },
    "1938": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1939": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1942": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1943": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1944": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1945": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1946": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1979": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "ADD",
      "path": "8"
    },
    "1980": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1981": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "op": "NOT"
    },
    "1991": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "AND",
      "path": "8"
    },
    "1992": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3101,
        3111
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1993": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "OR",
      "path": "8"
    },
    "1994": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1995": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3088,
        3112
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1996": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3033,
        3123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1997": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3186
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 14,
      "value": "0xA"
    },
    "1999": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3186
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2000": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2002": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2003": {
      "op": "PUSH4",
      "value": "0x3D14D1B7"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2012": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "op": "SUB"
    },
    "2021": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3186
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2022": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3186
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2023": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3186
      ],
      "op": "AND",
      "path": "8"
    },
    "2024": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3186
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2025": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3194
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF45346DC"
    },
    "2030": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3194
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2031": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x800"
    },
    "2034": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2035": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3195,
        3201
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2036": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3195,
        3201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2037": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3203,
        3210
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2038": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3203,
        3210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2039": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3220,
        3224
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2040": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3220,
        3224
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2041": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2043": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "ADD",
      "path": "8"
    },
    "2044": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1751"
    },
    "2047": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        3171,
        3226
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2048": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2049": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2051": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2053": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2054": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2055": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2056": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "SUB",
      "path": "8"
    },
    "2057": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2058": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2060": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2061": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2062": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2063": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2064": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2065": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2066": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x81A"
    },
    "2069": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2070": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2072": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2073": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2074": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2075": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "POP",
      "path": "8"
    },
    "2076": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "GAS",
      "path": "8"
    },
    "2077": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "CALL",
      "path": "8"
    },
    "2078": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2079": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2080": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2081": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x82E"
    },
    "2084": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2085": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2086": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2088": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2089": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2090": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2091": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2093": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2094": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3171,
        3226
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 15,
      "value": "0x40"
    },
    "2099": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2100": {
      "op": "DUP5"
    },
    "2101": {
      "op": "DUP2"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3261,
        3271
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2104": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3261,
        3271
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2115": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "AND",
      "path": "8"
    },
    "2116": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x17A90BF25D618E67DE9BC66DE5762D97787B11707D112164AB54C37111467F2B"
    },
    "2151": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2156": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2158": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2159": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2160": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2161": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "SUB",
      "path": "8"
    },
    "2162": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2163": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3241,
        3281
      ],
      "op": "LOG3",
      "path": "8"
    },
    "2164": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "POP",
      "path": "8"
    },
    "2165": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2117,
        3288
      ],
      "op": "POP",
      "path": "8"
    },
    "2166": {
      "fn": "StakingContract.stakeTokens",
      "jump": "o",
      "offset": [
        2117,
        3288
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2167": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2168": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6221,
        6228
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2170": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6245,
        6258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2171": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6260,
        6276
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2173": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6280,
        6301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x885"
    },
    "2176": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6294,
        6300
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2177": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6280,
        6293
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1115"
    },
    "2180": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6280,
        6301
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2181": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6280,
        6301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2182": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6244,
        6301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2183": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6244,
        6301
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6244,
        6301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6326,
        6344
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2189": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6403,
        6415
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x897"
    },
    "2192": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6244,
        6301
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2193": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6403,
        6405
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "2195": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6403,
        6415
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1858"
    },
    "2198": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6403,
        6415
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2199": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6403,
        6415
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2209": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2210": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "AND",
      "path": "8"
    },
    "2211": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2213": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2214": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2215": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2216": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6363
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2218": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2220": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2221": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2222": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2223": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2225": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2226": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2227": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6371
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2228": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2229": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "DUP12",
      "path": "8"
    },
    "2230": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "AND",
      "path": "8"
    },
    "2231": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2232": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2233": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2234": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2235": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2236": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2237": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6378
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2238": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6386
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8C8"
    },
    "2241": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6386
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2242": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6381,
        6386
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2243": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6381,
        6386
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2244": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6386
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1864"
    },
    "2247": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6349,
        6386
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2248": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6349,
        6386
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2249": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6348,
        6416
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8D2"
    },
    "2252": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6348,
        6416
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2253": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6348,
        6416
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2254": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6348,
        6416
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1883"
    },
    "2257": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6348,
        6416
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2258": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6348,
        6416
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2259": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6326,
        6417
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "op": "POP"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2265": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2266": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2267": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "POP",
      "path": "8"
    },
    "2268": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6112,
        6596
      ],
      "op": "POP",
      "path": "8"
    },
    "2269": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        6112,
        6596
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2270": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2271": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2273": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "op": "SUB"
    },
    "2282": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2283": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2284": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2285": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x908"
    },
    "2288": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2289": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2291": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2300": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2301": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2303": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2304": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "2307": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2308": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "2311": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2312": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2313": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9257,
        9272
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "2315": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9257,
        9272
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2316": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9257,
        9272
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 16
    },
    "2326": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2327": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "AND",
      "path": "8"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "op": "NOT"
    },
    "2337": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2338": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "AND",
      "path": "8"
    },
    "2339": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "OR",
      "path": "8"
    },
    "2340": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2341": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2342": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9283,
        9338
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2343": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9257,
        9272
      ],
      "op": "AND",
      "path": "8"
    },
    "2344": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9227,
        9246
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2346": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2347": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9372,
        9385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2349": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9372,
        9392
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2350": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9368,
        9392
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2351": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9368,
        9392
      ],
      "op": "LT",
      "path": "8"
    },
    "2352": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2353": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9F6"
    },
    "2356": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2357": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9458
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0x3"
    },
    "2359": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9459,
        9460
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2360": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2361": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2362": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2363": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "LT",
      "path": "8"
    },
    "2364": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x947"
    },
    "2367": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2368": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x947"
    },
    "2371": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "2374": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9445,
        9461
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2375": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2376": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2378": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2379": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2380": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2381": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2383": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2384": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2385": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2386": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "ADD",
      "path": "8"
    },
    "2387": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2388": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2390": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2391": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2400": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "op": "DUP6"
    },
    "2410": {
      "op": "DUP2"
    },
    "2411": {
      "op": "AND"
    },
    "2412": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2414": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2415": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "ADD",
      "path": "8"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2419": {
      "op": "NOT"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2422": {
      "op": "DUP4"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2426": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2427": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "AND",
      "path": "8"
    },
    "2428": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9445,
        9461
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2429": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9470
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "2434": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9470
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2440": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2442": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2443": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2444": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2445": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "SUB",
      "path": "8"
    },
    "2446": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2447": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2449": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2450": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "GAS",
      "path": "8"
    },
    "2451": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "CALL",
      "path": "8"
    },
    "2452": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2453": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2454": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2455": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9A4"
    },
    "2458": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2459": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2460": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2462": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2463": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2464": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2465": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2467": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2468": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2469": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "POP",
      "path": "8"
    },
    "2470": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "POP",
      "path": "8"
    },
    "2471": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "POP",
      "path": "8"
    },
    "2472": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "POP",
      "path": "8"
    },
    "2473": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2475": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2476": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2477": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2479": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "NOT",
      "path": "8"
    },
    "2480": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2482": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2483": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "ADD",
      "path": "8"
    },
    "2484": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "AND",
      "path": "8"
    },
    "2485": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2486": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "ADD",
      "path": "8"
    },
    "2487": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2488": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2490": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2491": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "POP",
      "path": "8"
    },
    "2492": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2493": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "ADD",
      "path": "8"
    },
    "2494": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2495": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9C8"
    },
    "2498": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2499": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2500": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C0"
    },
    "2503": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9438,
        9568
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2504": {
      "branch": 64,
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9438,
        9568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2505": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9E4"
    },
    "2508": {
      "branch": 64,
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2509": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2511": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2520": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2521": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2523": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "ADD",
      "path": "8"
    },
    "2524": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "2527": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2528": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16E2"
    },
    "2531": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9413,
        9635
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2532": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        9635
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2533": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 18
    },
    "2534": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9EE"
    },
    "2537": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2538": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "2541": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9394,
        9397
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2542": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2543": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2544": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "POP",
      "path": "8"
    },
    "2545": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9394,
        9397
      ],
      "op": "POP",
      "path": "8"
    },
    "2546": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x92A"
    },
    "2549": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2550": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2551": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9348,
        9646
      ],
      "op": "POP",
      "path": "8"
    },
    "2552": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9693,
        9702
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2554": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2555": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9712,
        9725
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2557": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9712,
        9732
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2558": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9708,
        9732
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2559": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9708,
        9732
      ],
      "op": "LT",
      "path": "8"
    },
    "2560": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2561": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB94"
    },
    "2564": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2565": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9753,
        9766
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2567": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2569": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9783,
        9784
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2570": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2571": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2572": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2573": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "LT",
      "path": "8"
    },
    "2574": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA19"
    },
    "2577": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2578": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA19"
    },
    "2581": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "2584": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9769,
        9785
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2585": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2586": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2588": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2589": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2590": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2591": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2593": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2594": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2595": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "ADD",
      "path": "8"
    },
    "2596": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "op": "SUB"
    },
    "2605": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "AND",
      "path": "8"
    },
    "2606": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9769,
        9785
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2609": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2610": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9860,
        9867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2612": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9860,
        9874
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2613": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9856,
        9874
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2614": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9856,
        9874
      ],
      "op": "LT",
      "path": "8"
    },
    "2615": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2616": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAA4"
    },
    "2619": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2620": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9899,
        9913
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2622": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2624": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9924,
        9925
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2625": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2626": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2627": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2628": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "LT",
      "path": "8"
    },
    "2629": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA50"
    },
    "2632": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2633": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA50"
    },
    "2636": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "2639": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9916,
        9926
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2640": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2641": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2643": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2644": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2645": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2646": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2648": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2649": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2650": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2651": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2652": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2653": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "ADD",
      "path": "8"
    },
    "2654": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 19
    },
    "2664": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2665": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "AND",
      "path": "8"
    },
    "2666": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2667": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2668": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9973
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2670": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2671": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2672": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2674": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2675": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2676": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9980
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2677": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2678": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2679": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2680": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "AND",
      "path": "8"
    },
    "2681": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2682": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2683": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2684": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2685": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2686": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2687": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2688": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2689": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9959,
        9988
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2690": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2691": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9916,
        9926
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA8E"
    },
    "2696": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2697": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2698": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1739"
    },
    "2701": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9944,
        9988
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2702": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2703": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2704": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9944,
        9988
      ],
      "op": "POP",
      "path": "8"
    },
    "2705": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9881,
        10010
      ],
      "op": "POP",
      "path": "8"
    },
    "2706": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 20
    },
    "2707": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2708": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9C"
    },
    "2711": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2712": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "2715": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9876,
        9879
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2716": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2717": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2718": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "POP",
      "path": "8"
    },
    "2719": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9876,
        9879
      ],
      "op": "POP",
      "path": "8"
    },
    "2720": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA31"
    },
    "2723": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2724": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9836,
        10010
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2725": {
      "op": "POP"
    },
    "2726": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 21,
      "value": "0x40"
    },
    "2728": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2729": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2738": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10061
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2748": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10061
      ],
      "op": "AND",
      "path": "8"
    },
    "2749": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10061
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2750": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10061
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x69328DEC"
    },
    "2755": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10061
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2756": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAD5"
    },
    "2759": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2760": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10079,
        10084
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2761": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10079,
        10084
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2762": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10102,
        10113
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2763": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10102,
        10113
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2764": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10139,
        10143
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2765": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10139,
        10143
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2766": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2768": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "ADD",
      "path": "8"
    },
    "2769": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1751"
    },
    "2772": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10023,
        10158
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2773": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2774": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2776": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2778": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2779": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2780": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2781": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "SUB",
      "path": "8"
    },
    "2782": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2783": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2785": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2786": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "GAS",
      "path": "8"
    },
    "2787": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "CALL",
      "path": "8"
    },
    "2788": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2789": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2790": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2791": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAF4"
    },
    "2794": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2795": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2796": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2798": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2799": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2800": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2801": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2803": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2804": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2805": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "POP",
      "path": "8"
    },
    "2806": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "POP",
      "path": "8"
    },
    "2807": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "POP",
      "path": "8"
    },
    "2808": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "POP",
      "path": "8"
    },
    "2809": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2811": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2812": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2813": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2815": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "NOT",
      "path": "8"
    },
    "2816": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2818": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2819": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "ADD",
      "path": "8"
    },
    "2820": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "AND",
      "path": "8"
    },
    "2821": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2822": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "ADD",
      "path": "8"
    },
    "2823": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2824": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2826": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2827": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "POP",
      "path": "8"
    },
    "2828": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2829": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "ADD",
      "path": "8"
    },
    "2830": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2831": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB18"
    },
    "2834": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2835": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2836": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18D6"
    },
    "2839": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10023,
        10158
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2840": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10023,
        10158
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10187
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 22,
      "value": "0xA"
    },
    "2844": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10187
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2845": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2847": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2848": {
      "op": "PUSH4",
      "value": "0x3D14D1B7"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2857": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2864": {
      "op": "SHL"
    },
    "2865": {
      "op": "SUB"
    },
    "2866": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10187
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2867": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10187
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2868": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10187
      ],
      "op": "AND",
      "path": "8"
    },
    "2869": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10187
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2870": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10195
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF45346DC"
    },
    "2875": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10195
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2876": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB4D"
    },
    "2879": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2880": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10196,
        10201
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2881": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10196,
        10201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2882": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10203,
        10214
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2883": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10203,
        10214
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2884": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10224,
        10228
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2885": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10224,
        10228
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2886": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2888": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "ADD",
      "path": "8"
    },
    "2889": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1751"
    },
    "2892": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10172,
        10230
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2893": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2894": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2896": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2898": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2899": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2900": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2901": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "SUB",
      "path": "8"
    },
    "2902": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2903": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2905": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2906": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2907": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2908": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2909": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2910": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2911": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB67"
    },
    "2914": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2915": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2917": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2918": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2919": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2920": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "POP",
      "path": "8"
    },
    "2921": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "GAS",
      "path": "8"
    },
    "2922": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "CALL",
      "path": "8"
    },
    "2923": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2924": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2925": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2926": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB7B"
    },
    "2929": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2930": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2931": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2933": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2934": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2935": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2936": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2938": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2939": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2940": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "POP",
      "path": "8"
    },
    "2941": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "POP",
      "path": "8"
    },
    "2942": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "POP",
      "path": "8"
    },
    "2943": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10172,
        10230
      ],
      "op": "POP",
      "path": "8"
    },
    "2944": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9739,
        10241
      ],
      "op": "POP",
      "path": "8"
    },
    "2945": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9739,
        10241
      ],
      "op": "POP",
      "path": "8"
    },
    "2946": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 23
    },
    "2947": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2948": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB8C"
    },
    "2951": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2952": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "2955": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9734,
        9737
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2956": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2957": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2958": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "POP",
      "path": "8"
    },
    "2959": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9734,
        9737
      ],
      "op": "POP",
      "path": "8"
    },
    "2960": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9FA"
    },
    "2963": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2964": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9688,
        10241
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 24,
      "value": "0x40"
    },
    "2968": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2969": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "op": "DUP1"
    },
    "2979": {
      "op": "DUP6"
    },
    "2980": {
      "op": "AND"
    },
    "2981": {
      "op": "DUP3"
    },
    "2982": {
      "op": "MSTORE"
    },
    "2983": {
      "op": "DUP4"
    },
    "2984": {
      "op": "AND"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2987": {
      "op": "DUP3"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "MSTORE"
    },
    "2990": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x7B3BD21A9C66CB98F4889DA8283172936ABD92A905D81830738B651EEE374D35"
    },
    "3023": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3027": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3028": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3029": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3030": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "SUB",
      "path": "8"
    },
    "3031": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3032": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10255,
        10311
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3033": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9217,
        10318
      ],
      "op": "POP",
      "path": "8"
    },
    "3034": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9118,
        10318
      ],
      "op": "POP",
      "path": "8"
    },
    "3035": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "o",
      "offset": [
        9118,
        10318
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3036": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3383,
        4470
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3046": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "AND",
      "path": "8"
    },
    "3047": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3474,
        3489
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3049": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3050": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3051": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3052": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3506
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3054": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3056": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3057": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3058": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3059": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3061": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3062": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3063": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3514
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3064": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3515,
        3525
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3065": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3066": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3067": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3068": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3069": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3070": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3071": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3072": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3492,
        3526
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3073": {
      "branch": 65,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3544,
        3555
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 25
    },
    "3074": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC61"
    },
    "3077": {
      "branch": 65,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3078": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3080": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3087": {
      "op": "SHL"
    },
    "3088": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3089": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3092": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3094": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3095": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "ADD",
      "path": "8"
    },
    "3096": {
      "op": "MSTORE"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "op": "ADD"
    },
    "3103": {
      "op": "MSTORE"
    },
    "3104": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A205374616B696E672062616C616E6365"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3139": {
      "op": "DUP3"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "op": "MSTORE"
    },
    "3142": {
      "op": "PUSH11",
      "value": "0x20616C7265616479203021"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3156": {
      "op": "SHL"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "3168": {
      "op": "JUMP"
    },
    "3169": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3536,
        3603
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3170": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3645,
        3687
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 26,
      "value": "0xC6B"
    },
    "3173": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3668,
        3678
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3174": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3680,
        3686
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3175": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3645,
        3667
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13AF"
    },
    "3178": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3645,
        3687
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3179": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3645,
        3687
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "op": "SUB"
    },
    "3188": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 27
    },
    "3189": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "AND",
      "path": "8"
    },
    "3190": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3766,
        3767
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3192": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3193": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3194": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3195": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3743
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3197": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3199": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3200": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3201": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3202": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3204": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3205": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3206": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3751
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3207": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3752,
        3762
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3208": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3209": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3210": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3211": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3212": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3213": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3214": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3763
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3215": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3767
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3216": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3767
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3217": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3729,
        3767
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3218": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3828
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 28,
      "value": "0x5"
    },
    "3220": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3840
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3221": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3840
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3222": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3840
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3223": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3840
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3224": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3840
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3225": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3840
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3226": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3844
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCA5"
    },
    "3229": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3844
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3230": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3843,
        3844
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3232": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3843,
        3844
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3233": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3844
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18EF"
    },
    "3236": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3810,
        3844
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3237": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3810,
        3844
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3238": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3796,
        3806
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3239": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3241": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3242": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3243": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3244": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3795
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3246": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3248": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3249": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3251": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3252": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3807
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3253": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3844
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3254": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3844
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3255": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3777,
        3844
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3256": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3854,
        4169
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC6"
    },
    "3259": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3854,
        4169
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3260": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3914,
        3923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3262": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3263": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3933,
        3940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3265": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3933,
        3947
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3266": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3929,
        3947
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3267": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3929,
        3947
      ],
      "op": "LT",
      "path": "8"
    },
    "3268": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3269": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC4"
    },
    "3272": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3273": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3990,
        4000
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3280": {
      "op": "SHL"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        4000
      ],
      "op": "AND",
      "path": "8"
    },
    "3283": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3983
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3285": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3984,
        3985
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3286": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3287": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3288": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3289": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "LT",
      "path": "8"
    },
    "3290": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCE5"
    },
    "3293": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3294": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCE5"
    },
    "3297": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "3300": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3976,
        3986
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3301": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3302": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3304": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3305": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3306": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3307": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3309": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3310": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3311": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3312": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "ADD",
      "path": "8"
    },
    "3313": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "SUB"
    },
    "3322": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        3986
      ],
      "op": "AND",
      "path": "8"
    },
    "3323": {
      "branch": 66,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3976,
        4000
      ],
      "op": "EQ",
      "path": "8"
    },
    "3324": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3972,
        4145
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3325": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3972,
        4145
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDB2"
    },
    "3328": {
      "branch": 66,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3972,
        4145
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3329": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4044
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 29,
      "value": "0x2"
    },
    "3331": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4059
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3332": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4059
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3333": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4063
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD10"
    },
    "3336": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4063
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3337": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4062,
        4063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3339": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4062,
        4063
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3340": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4063
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18EF"
    },
    "3343": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4045,
        4063
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3344": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4063
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3345": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3346": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3347": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3348": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "LT",
      "path": "8"
    },
    "3349": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD20"
    },
    "3352": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3353": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD20"
    },
    "3356": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "3359": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4037,
        4064
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3360": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3361": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3363": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3364": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3365": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3366": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3368": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3369": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3370": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3371": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "ADD",
      "path": "8"
    },
    "3372": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3373": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4031
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3375": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3376": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3386": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3387": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "AND",
      "path": "8"
    },
    "3388": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4037,
        4064
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3389": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4032,
        4033
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3390": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4032,
        4033
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3391": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3392": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "LT",
      "path": "8"
    },
    "3393": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD4C"
    },
    "3396": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3397": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD4C"
    },
    "3400": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "3403": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4024,
        4034
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3404": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3405": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3406": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3408": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3409": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3411": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3413": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3414": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "ADD",
      "path": "8"
    },
    "3415": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4034
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3417": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3420": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "EXP",
      "path": "8"
    },
    "3421": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3422": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3423": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "MUL",
      "path": "8"
    },
    "3433": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "NOT",
      "path": "8"
    },
    "3434": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "AND",
      "path": "8"
    },
    "3435": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3436": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "SUB"
    },
    "3445": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "AND",
      "path": "8"
    },
    "3446": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "MUL",
      "path": "8"
    },
    "3447": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "OR",
      "path": "8"
    },
    "3448": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3449": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3450": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4024,
        4064
      ],
      "op": "POP",
      "path": "8"
    },
    "3451": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4093
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 30,
      "value": "0x2"
    },
    "3453": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3454": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3455": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3456": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD8B"
    },
    "3459": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3460": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD8B"
    },
    "3463": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1906"
    },
    "3466": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4086,
        4099
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3467": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3468": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3470": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3471": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3472": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3473": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3475": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3476": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3477": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3478": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "ADD",
      "path": "8"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3481": {
      "op": "NOT"
    },
    "3482": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3483": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3484": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "ADD",
      "path": "8"
    },
    "3485": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3486": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3493": {
      "op": "SHL"
    },
    "3494": {
      "op": "SUB"
    },
    "3495": {
      "op": "NOT"
    },
    "3496": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "AND",
      "path": "8"
    },
    "3497": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3498": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3499": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "ADD",
      "path": "8"
    },
    "3500": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3501": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4086,
        4099
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3502": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4121,
        4126
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 31,
      "value": "0xDC4"
    },
    "3505": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4121,
        4126
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3506": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3972,
        4145
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3507": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 32
    },
    "3508": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDBC"
    },
    "3511": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3512": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "3515": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3949,
        3952
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3516": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3517": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3518": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "POP",
      "path": "8"
    },
    "3519": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3949,
        3952
      ],
      "op": "POP",
      "path": "8"
    },
    "3520": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCBE"
    },
    "3523": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3524": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3525": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3909,
        4159
      ],
      "op": "POP",
      "path": "8"
    },
    "3526": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3854,
        4169
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3527": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4307
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 33,
      "value": "0xA"
    },
    "3529": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4307
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3530": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3532": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3533": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3540": {
      "op": "SHL"
    },
    "3541": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3542": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3543": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4348,
        4349
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3545": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4348,
        4349
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "op": "SUB"
    },
    "3554": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4307
      ],
      "op": "AND",
      "path": "8"
    },
    "3555": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4307
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3556": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4316
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x69328DEC"
    },
    "3561": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3562": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDFB"
    },
    "3565": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3566": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4317,
        4323
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3567": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4317,
        4323
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3568": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4325,
        4332
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3569": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4325,
        4332
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3570": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4334,
        4344
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3571": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4334,
        4344
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3572": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3574": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "ADD",
      "path": "8"
    },
    "3575": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1751"
    },
    "3578": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4292,
        4345
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3579": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3580": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3582": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3584": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3585": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3586": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3587": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "SUB",
      "path": "8"
    },
    "3588": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3589": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3591": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3592": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "GAS",
      "path": "8"
    },
    "3593": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "CALL",
      "path": "8"
    },
    "3594": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3595": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3596": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3597": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE1A"
    },
    "3600": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3601": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3602": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3604": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3605": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3606": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3607": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3609": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3610": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3611": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "POP",
      "path": "8"
    },
    "3612": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "POP",
      "path": "8"
    },
    "3613": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "POP",
      "path": "8"
    },
    "3614": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "POP",
      "path": "8"
    },
    "3615": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3617": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3618": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3619": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3621": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "NOT",
      "path": "8"
    },
    "3622": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3624": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3625": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "ADD",
      "path": "8"
    },
    "3626": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "AND",
      "path": "8"
    },
    "3627": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3628": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "ADD",
      "path": "8"
    },
    "3629": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3630": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3632": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3633": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "POP",
      "path": "8"
    },
    "3634": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3635": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "ADD",
      "path": "8"
    },
    "3636": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3637": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE3E"
    },
    "3640": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3641": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3642": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18D6"
    },
    "3645": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4292,
        4345
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3646": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4345
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3647": {
      "branch": 67,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4292,
        4349
      ],
      "op": "GT",
      "path": "8"
    },
    "3648": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE8B"
    },
    "3651": {
      "branch": 67,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3652": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3654": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3661": {
      "op": "SHL"
    },
    "3662": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3663": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3666": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3668": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3669": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "ADD",
      "path": "8"
    },
    "3670": {
      "op": "MSTORE"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3675": {
      "op": "DUP3"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "MSTORE"
    },
    "3678": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A207769746864726177206572726F7200"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "MSTORE"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "3722": {
      "op": "JUMP"
    },
    "3723": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4271,
        4406
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3724": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 34,
      "value": "0x40"
    },
    "3726": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3727": {
      "op": "DUP2"
    },
    "3728": {
      "op": "DUP2"
    },
    "3729": {
      "op": "MSTORE"
    },
    "3730": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4443,
        4453
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3731": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4443,
        4453
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "op": "SUB"
    },
    "3740": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3741": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "AND",
      "path": "8"
    },
    "3742": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3743": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x4C5A68DF1E54DD796657DC5832C88515A36DC92548AF9951A0EF38DD61A3322E"
    },
    "3776": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "ADD"
    },
    "3780": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4421,
        4463
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x86B"
    },
    "3783": {
      "op": "JUMP"
    },
    "3784": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4527,
        4840
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3785": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4653,
        4684
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 35,
      "value": "0xED1"
    },
    "3788": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4673,
        4683
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3789": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4653,
        4672
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1480"
    },
    "3792": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        4653,
        4684
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3793": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4653,
        4684
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3794": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4724,
        4734
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3795": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4694,
        4708
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3797": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3798": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3799": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3800": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4723
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3802": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3804": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3805": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3807": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3808": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3809": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3810": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3811": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3812": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4745,
        4773
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 36
    },
    "3813": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4745,
        4773
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3814": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4745,
        4773
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4803
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 37
    },
    "3818": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3819": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3820": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3827": {
      "op": "SHL"
    },
    "3828": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3829": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3830": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3832": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3833": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "ADD",
      "path": "8"
    },
    "3834": {
      "op": "SWAP4"
    },
    "3835": {
      "op": "SWAP1"
    },
    "3836": {
      "op": "SWAP4"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3840": {
      "op": "DUP4"
    },
    "3841": {
      "op": "ADD"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "SWAP1"
    },
    "3844": {
      "op": "MSTORE"
    },
    "3845": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3846": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4711,
        4735
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3853": {
      "op": "SHL"
    },
    "3854": {
      "op": "SUB"
    },
    "3855": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4803
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3856": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4803
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3857": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4803
      ],
      "op": "AND",
      "path": "8"
    },
    "3858": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4803
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3859": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4812
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "3864": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4812
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3870": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3872": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3873": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3874": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3875": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "SUB",
      "path": "8"
    },
    "3876": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3877": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3879": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3880": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "GAS",
      "path": "8"
    },
    "3881": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "CALL",
      "path": "8"
    },
    "3882": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3883": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3884": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3885": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF3A"
    },
    "3888": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3889": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3890": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3892": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3893": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3894": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3895": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3897": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3898": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3899": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "POP",
      "path": "8"
    },
    "3900": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "POP",
      "path": "8"
    },
    "3901": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "POP",
      "path": "8"
    },
    "3902": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "POP",
      "path": "8"
    },
    "3903": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3905": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3906": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3907": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3909": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "NOT",
      "path": "8"
    },
    "3910": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3912": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3913": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "ADD",
      "path": "8"
    },
    "3914": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "AND",
      "path": "8"
    },
    "3915": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3916": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "ADD",
      "path": "8"
    },
    "3917": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3918": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3920": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3921": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "POP",
      "path": "8"
    },
    "3922": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3923": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "ADD",
      "path": "8"
    },
    "3924": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3925": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF5E"
    },
    "3928": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3929": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3930": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C0"
    },
    "3933": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        4791,
        4832
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3934": {
      "branch": 68,
      "fn": "StakingContract.claimToken",
      "offset": [
        4791,
        4832
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3935": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4783,
        4833
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF67"
    },
    "3938": {
      "branch": 68,
      "fn": "StakingContract.claimToken",
      "offset": [
        4783,
        4833
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3939": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4783,
        4833
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3941": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4783,
        4833
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3942": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4783,
        4833
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3943": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4783,
        4833
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3944": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4558,
        4840
      ],
      "op": "POP",
      "path": "8"
    },
    "3945": {
      "fn": "StakingContract.claimToken",
      "jump": "o",
      "offset": [
        4527,
        4840
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3946": {
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3947": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3949": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3950": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3951": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3952": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3953": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "LT",
      "path": "8"
    },
    "3954": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF7A"
    },
    "3957": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3958": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3960": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3961": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3962": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3963": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3965": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3966": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3967": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3968": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3970": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3971": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3972": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3973": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "ADD",
      "path": "8"
    },
    "3974": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3981": {
      "op": "SHL"
    },
    "3982": {
      "op": "SUB"
    },
    "3983": {
      "offset": [
        395,
        425
      ],
      "op": "AND",
      "path": "8"
    },
    "3984": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3985": {
      "op": "POP"
    },
    "3986": {
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3987": {
      "fn": "StakingContract.claimToken",
      "jump": "o",
      "offset": [
        395,
        425
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3988": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3989": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3991": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "SUB"
    },
    "4000": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4001": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4002": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4003": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFBE"
    },
    "4006": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4007": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4009": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4019": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4021": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4022": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4025": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4026": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "4029": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4030": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4031": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xFC8"
    },
    "4034": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4036": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1528"
    },
    "4039": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4040": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4041": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4042": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7517,
        7679
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4043": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4045": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4055": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4056": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4057": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF4"
    },
    "4060": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4061": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4063": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4072": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4073": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4075": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4076": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4079": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4080": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "4083": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4084": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4091": {
      "op": "SHL"
    },
    "4092": {
      "op": "SUB"
    },
    "4093": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 39
    },
    "4094": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4095": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "AND",
      "path": "8"
    },
    "4096": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4098": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4099": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4100": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4101": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4103": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4105": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4106": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4108": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4109": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7659
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4110": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4111": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "op": "SUB"
    },
    "4120": {
      "op": "NOT"
    },
    "4121": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "AND",
      "path": "8"
    },
    "4122": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4123": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4124": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4125": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "AND",
      "path": "8"
    },
    "4126": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "OR",
      "path": "8"
    },
    "4127": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4128": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7630,
        7672
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4129": {
      "fn": "StakingContract.setPriceFeedContract",
      "jump": "o",
      "offset": [
        7517,
        7679
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4130": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "SUB"
    },
    "4139": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4140": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "AND",
      "path": "8"
    },
    "4141": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5537,
        5544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4143": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4144": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4145": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4146": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5578
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "4148": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4150": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4151": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4153": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4154": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4155": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5560,
        5585
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4156": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5556,
        5625
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1047"
    },
    "4159": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5556,
        5625
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4160": {
      "op": "POP"
    },
    "4161": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        5614
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x0"
    },
    "4163": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        5614
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4164": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4165": {
      "op": "POP"
    },
    "4166": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "o",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4167": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5556,
        5625
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4168": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5634,
        5652
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4170": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5704,
        5713
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4171": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4172": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5723,
        5736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4174": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5723,
        5743
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4175": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5719,
        5743
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4176": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5719,
        5743
      ],
      "op": "LT",
      "path": "8"
    },
    "4177": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4178": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10A4"
    },
    "4181": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4182": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5778,
        5826
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 41,
      "value": "0x1086"
    },
    "4185": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5802,
        5807
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4186": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5822
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4188": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5823,
        5824
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4189": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4190": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4191": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4192": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "LT",
      "path": "8"
    },
    "4193": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x106C"
    },
    "4196": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4197": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x106C"
    },
    "4200": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "4203": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5809,
        5825
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4204": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4205": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4207": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4208": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4209": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4210": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4212": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4213": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4214": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4215": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "ADD",
      "path": "8"
    },
    "4216": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "op": "SUB"
    },
    "4225": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5809,
        5825
      ],
      "op": "AND",
      "path": "8"
    },
    "4226": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5778,
        5801
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "4229": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5778,
        5826
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4230": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5778,
        5826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4231": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5764,
        5826
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1090"
    },
    "4234": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5764,
        5826
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4235": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5764,
        5826
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4236": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5764,
        5826
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1739"
    },
    "4239": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5764,
        5826
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4240": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5764,
        5826
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4241": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5764,
        5826
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4242": {
      "op": "POP"
    },
    "4243": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 42
    },
    "4244": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x109C"
    },
    "4247": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4248": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "4251": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5745,
        5748
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4252": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4253": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4254": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "POP",
      "path": "8"
    },
    "4255": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5745,
        5748
      ],
      "op": "POP",
      "path": "8"
    },
    "4256": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x104B"
    },
    "4259": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4260": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5837
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4261": {
      "op": "POP"
    },
    "4262": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5853,
        5863
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 43
    },
    "4263": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5474,
        5870
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "op": "POP"
    },
    "4266": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "o",
      "offset": [
        5474,
        5870
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4267": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4268": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5077,
        5081
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4270": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5077,
        5081
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4271": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4272": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5117,
        5130
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4274": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5117,
        5137
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4275": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5113,
        5137
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4276": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5113,
        5137
      ],
      "op": "LT",
      "path": "8"
    },
    "4277": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4278": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x110C"
    },
    "4281": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4282": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5182,
        5188
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "op": "SUB"
    },
    "4291": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5188
      ],
      "op": "AND",
      "path": "8"
    },
    "4292": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5175
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4294": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5176,
        5177
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4295": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4296": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4297": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4298": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "LT",
      "path": "8"
    },
    "4299": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D6"
    },
    "4302": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4303": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D6"
    },
    "4306": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "4309": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5162,
        5178
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4310": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4311": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4313": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4314": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4315": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4316": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4318": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4319": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4320": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4321": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "ADD",
      "path": "8"
    },
    "4322": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "SUB"
    },
    "4331": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5178
      ],
      "op": "AND",
      "path": "8"
    },
    "4332": {
      "branch": 69,
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5162,
        5188
      ],
      "op": "EQ",
      "path": "8"
    },
    "4333": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5158,
        5234
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4334": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5158,
        5234
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10FA"
    },
    "4337": {
      "branch": 69,
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5158,
        5234
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5215,
        5219
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x1"
    },
    "4341": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5215,
        5219
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4342": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "op": "POP"
    },
    "4345": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4346": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5158,
        5234
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4347": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 45
    },
    "4348": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1104"
    },
    "4351": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4352": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "4355": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5139,
        5142
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4356": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4357": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4358": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "POP",
      "path": "8"
    },
    "4359": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5139,
        5142
      ],
      "op": "POP",
      "path": "8"
    },
    "4360": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AF"
    },
    "4363": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4364": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5093,
        5244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5260,
        5265
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 46,
      "value": "0x0"
    },
    "4368": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5260,
        5265
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4369": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5016,
        5272
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4370": {
      "op": "POP"
    },
    "4371": {
      "op": "POP"
    },
    "4372": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5016,
        5272
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4373": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "op": "SUB"
    },
    "4382": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4383": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4384": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "AND",
      "path": "8"
    },
    "4385": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4387": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4388": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4389": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4390": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6987
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4392": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4394": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4395": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4397": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4398": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4399": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4400": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4401": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4402": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4403": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4410": {
      "op": "SHL"
    },
    "4411": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4412": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4413": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4414": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4415": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4416": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4417": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4418": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4419": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4420": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "AND",
      "path": "8"
    },
    "4421": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4422": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4423": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4424": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4425": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6907,
        6914
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4426": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4427": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4428": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7160
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFEAF968C"
    },
    "4433": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7160
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4434": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4436": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4437": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4438": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ADD",
      "path": "8"
    },
    "4439": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4440": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "4442": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4443": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4444": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4445": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4446": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4447": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4448": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SUB",
      "path": "8"
    },
    "4449": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ADD",
      "path": "8"
    },
    "4450": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4451": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6966,
        6995
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4452": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "GAS",
      "path": "8"
    },
    "4453": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4454": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4455": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4456": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4457": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1176"
    },
    "4460": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4461": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4462": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4464": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4465": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4466": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4467": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4469": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4470": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4471": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4472": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4473": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4474": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4475": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4477": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4478": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4479": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4481": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "NOT",
      "path": "8"
    },
    "4482": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4484": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4485": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ADD",
      "path": "8"
    },
    "4486": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "AND",
      "path": "8"
    },
    "4487": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4488": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ADD",
      "path": "8"
    },
    "4489": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4490": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4492": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4493": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4494": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4495": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "ADD",
      "path": "8"
    },
    "4496": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4497": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x119A"
    },
    "4500": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4501": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4502": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1936"
    },
    "4505": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        7135,
        7162
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4506": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7135,
        7162
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4507": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7110,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4508": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7110,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4509": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7110,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4510": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7110,
        7162
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4511": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7110,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4512": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7110,
        7162
      ],
      "op": "POP",
      "path": "8"
    },
    "4513": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7172,
        7188
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4515": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7208
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4522": {
      "op": "SHL"
    },
    "4523": {
      "op": "SUB"
    },
    "4524": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7217
      ],
      "op": "AND",
      "path": "8"
    },
    "4525": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7217
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x313CE567"
    },
    "4530": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4532": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4533": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4534": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "4539": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "AND",
      "path": "8"
    },
    "4540": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "4542": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "SHL",
      "path": "8"
    },
    "4543": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4544": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4545": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4547": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "ADD",
      "path": "8"
    },
    "4548": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4550": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4552": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4553": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4554": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4555": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "SUB",
      "path": "8"
    },
    "4556": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4557": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4558": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "GAS",
      "path": "8"
    },
    "4559": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4560": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4561": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4562": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4563": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11E0"
    },
    "4566": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4567": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4568": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4570": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4571": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4572": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4573": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4575": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4576": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4577": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "POP",
      "path": "8"
    },
    "4578": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "POP",
      "path": "8"
    },
    "4579": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "POP",
      "path": "8"
    },
    "4580": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "POP",
      "path": "8"
    },
    "4581": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4583": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4584": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4585": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4587": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "NOT",
      "path": "8"
    },
    "4588": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4590": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4591": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "ADD",
      "path": "8"
    },
    "4592": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "AND",
      "path": "8"
    },
    "4593": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4594": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "ADD",
      "path": "8"
    },
    "4595": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4596": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4598": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4599": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "POP",
      "path": "8"
    },
    "4600": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4601": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "ADD",
      "path": "8"
    },
    "4602": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4603": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1204"
    },
    "4606": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4607": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4608": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1986"
    },
    "4611": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        7199,
        7219
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4612": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7199,
        7219
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4613": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7246,
        7251
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 47
    },
    "4614": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7246,
        7251
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "4615": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7191,
        7220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "4617": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7191,
        7220
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4618": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7191,
        7220
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4619": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7191,
        7220
      ],
      "op": "AND",
      "path": "8"
    },
    "4620": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7191,
        7220
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "4621": {
      "op": "POP"
    },
    "4622": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7246,
        7251
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4623": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7246,
        7251
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "op": "POP"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "fn": "StakingContract.getTokenValue",
      "jump": "o",
      "offset": [
        6823,
        7270
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4631": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4633": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4640": {
      "op": "SHL"
    },
    "4641": {
      "op": "SUB"
    },
    "4642": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4643": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4644": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4645": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1240"
    },
    "4648": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4649": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4651": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4660": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4661": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4663": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4664": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4667": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4668": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "4671": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4672": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "op": "SUB"
    },
    "4681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 48
    },
    "4682": {
      "branch": 72,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A5"
    },
    "4686": {
      "branch": 72,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4696": {
      "op": "SHL"
    },
    "4697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4705": {
      "op": "MSTORE"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4710": {
      "op": "DUP3"
    },
    "4711": {
      "op": "ADD"
    },
    "4712": {
      "op": "MSTORE"
    },
    "4713": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4748": {
      "op": "DUP3"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "MSTORE"
    },
    "4751": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4760": {
      "op": "SHL"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4763": {
      "op": "DUP3"
    },
    "4764": {
      "op": "ADD"
    },
    "4765": {
      "op": "MSTORE"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4768": {
      "op": "ADD"
    },
    "4769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4772": {
      "op": "JUMP"
    },
    "4773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0xF67"
    },
    "4777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4778": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1528"
    },
    "4781": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4782": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8462,
        8984
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4783": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4785": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4792": {
      "op": "SHL"
    },
    "4793": {
      "op": "SUB"
    },
    "4794": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4795": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4796": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4797": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D8"
    },
    "4800": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4801": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4803": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4810": {
      "op": "SHL"
    },
    "4811": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4812": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4813": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4815": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4816": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4819": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4820": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "4823": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4824": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4825": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8722,
        8731
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4827": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4828": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8741,
        8748
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4830": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8741,
        8755
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4831": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8737,
        8755
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4832": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8737,
        8755
      ],
      "op": "LT",
      "path": "8"
    },
    "4833": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4834": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1382"
    },
    "4837": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4844": {
      "op": "SHL"
    },
    "4845": {
      "op": "SUB"
    },
    "4846": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4847": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "AND",
      "path": "8"
    },
    "4848": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8817,
        8818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4850": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4851": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4852": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4853": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8794
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4855": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4857": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4858": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4860": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4861": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8802
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4862": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8810
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4864": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4865": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4866": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8817,
        8818
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4867": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8817,
        8818
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4868": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8810
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4869": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8811,
        8812
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4870": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8811,
        8812
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4871": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4872": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "LT",
      "path": "8"
    },
    "4873": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1314"
    },
    "4876": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4877": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1314"
    },
    "4880": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "4883": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8803,
        8813
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4884": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4885": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4887": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4888": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4889": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4890": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4892": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4893": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4894": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4895": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4896": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4897": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "ADD",
      "path": "8"
    },
    "4898": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4905": {
      "op": "SHL"
    },
    "4906": {
      "op": "SUB"
    },
    "4907": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8803,
        8813
      ],
      "op": "AND",
      "path": "8"
    },
    "4908": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4909": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4910": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4911": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "ADD",
      "path": "8"
    },
    "4912": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4913": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4914": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4915": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4916": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4918": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "ADD",
      "path": "8"
    },
    "4919": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4920": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4921": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8814
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4922": {
      "branch": 70,
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8780,
        8818
      ],
      "op": "GT",
      "path": "8"
    },
    "4923": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8776,
        8895
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4924": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8776,
        8895
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1370"
    },
    "4927": {
      "branch": 70,
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8776,
        8895
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4928": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8838,
        8880
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 50,
      "value": "0x1370"
    },
    "4931": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4933": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8869,
        8870
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4934": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4935": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4936": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4937": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "LT",
      "path": "8"
    },
    "4938": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1355"
    },
    "4941": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4942": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1355"
    },
    "4945": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "4948": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8861,
        8871
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4949": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4950": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4952": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4953": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4954": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4955": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4957": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4958": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4959": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4960": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "ADD",
      "path": "8"
    },
    "4961": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4968": {
      "op": "SHL"
    },
    "4969": {
      "op": "SUB"
    },
    "4970": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8861,
        8871
      ],
      "op": "AND",
      "path": "8"
    },
    "4971": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8873,
        8879
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4972": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8838,
        8860
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13AF"
    },
    "4975": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8838,
        8880
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4976": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8838,
        8880
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4977": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 51
    },
    "4978": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x137A"
    },
    "4981": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4982": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "4985": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8757,
        8760
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4986": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4987": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4988": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "POP",
      "path": "8"
    },
    "4989": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8757,
        8760
      ],
      "op": "POP",
      "path": "8"
    },
    "4990": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12DB"
    },
    "4993": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4994": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8717,
        8905
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5002": {
      "op": "SHL"
    },
    "5003": {
      "op": "SUB"
    },
    "5004": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 52
    },
    "5005": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5006": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "AND",
      "path": "8"
    },
    "5007": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5009": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5010": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5011": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5012": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8953
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5014": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5016": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5017": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5019": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5020": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8961
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5021": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8937,
        8977
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5022": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "o",
      "offset": [
        8462,
        8984
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5023": {
      "offset": [
        365,
        389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5024": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5026": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5027": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5028": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5029": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5030": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "LT",
      "path": "8"
    },
    "5031": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF7A"
    },
    "5034": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5035": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5037": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5038": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5039": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        10948,
        11582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5046": {
      "op": "SHL"
    },
    "5047": {
      "op": "SUB"
    },
    "5048": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5049": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5050": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "AND",
      "path": "8"
    },
    "5051": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11030,
        11057
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5053": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5054": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5055": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5056": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11092
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "5058": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5060": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5061": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5062": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5063": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5065": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5066": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5067": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5068": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5069": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5070": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "AND",
      "path": "8"
    },
    "5071": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5072": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5073": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5074": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5075": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5076": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5077": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5078": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5079": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5080": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5081": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11189,
        11204
      ],
      "op": "TIMESTAMP",
      "path": "8",
      "statement": 53
    },
    "5082": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11139,
        11204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5083": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11139,
        11204
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5084": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11139,
        11204
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5085": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5086": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11237,
        11275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13E7"
    },
    "5089": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11099
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5090": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11060,
        11129
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5091": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11237,
        11260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "5094": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11237,
        11275
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5095": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11237,
        11275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5096": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11215,
        11275
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11285,
        11297
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5100": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11300,
        11337
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13F5"
    },
    "5103": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11318,
        11337
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5104": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11300,
        11315
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "5105": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11300,
        11337
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18EF"
    },
    "5108": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11300,
        11337
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5109": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11300,
        11337
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5116": {
      "op": "SHL"
    },
    "5117": {
      "op": "SUB"
    },
    "5118": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5119": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "AND",
      "path": "8"
    },
    "5120": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11347,
        11358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5122": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5123": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5124": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5125": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11418
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5127": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5129": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5130": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5132": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5133": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5134": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5135": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11285,
        11337
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5136": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11285,
        11337
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5137": {
      "op": "POP"
    },
    "5138": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11361,
        11367
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15180"
    },
    "5142": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11361,
        11367
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5143": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5144": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11361,
        11367
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5145": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11515,
        11519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E8"
    },
    "5148": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11402,
        11426
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5149": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11482
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1426"
    },
    "5152": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11285,
        11337
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5153": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11475
      ],
      "op": "DUP10",
      "path": "8"
    },
    "5154": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11482
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1864"
    },
    "5157": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11464,
        11482
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5158": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11482
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5159": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11499
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1430"
    },
    "5162": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5163": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5164": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11499
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1864"
    },
    "5167": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11464,
        11499
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5168": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11464,
        11499
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5169": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11463,
        11519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x143A"
    },
    "5172": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11463,
        11519
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5173": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11463,
        11519
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5174": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11463,
        11519
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1883"
    },
    "5177": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11463,
        11519
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5178": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11463,
        11519
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5179": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11462,
        11526
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1444"
    },
    "5182": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11462,
        11526
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5183": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11462,
        11526
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5184": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11462,
        11526
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1883"
    },
    "5187": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11462,
        11526
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5188": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11462,
        11526
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5195": {
      "op": "SHL"
    },
    "5196": {
      "op": "SUB"
    },
    "5197": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "DUP10",
      "path": "8",
      "statement": 54
    },
    "5198": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "AND",
      "path": "8"
    },
    "5199": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5201": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5202": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5203": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5204": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11549
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "5206": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5208": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5209": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5211": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5212": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5213": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5214": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5215": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11436,
        11526
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5216": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11436,
        11526
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5217": {
      "op": "POP"
    },
    "5218": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11436,
        11526
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5219": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11436,
        11526
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5220": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5221": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5222": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11556
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5223": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1471"
    },
    "5226": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5227": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11436,
        11526
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5228": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11436,
        11526
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5229": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1739"
    },
    "5232": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11537,
        11575
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5233": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5234": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5235": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5236": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11537,
        11575
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "op": "POP"
    },
    "5239": {
      "op": "POP"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "op": "POP"
    },
    "5244": {
      "op": "POP"
    },
    "5245": {
      "op": "POP"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "o",
      "offset": [
        10948,
        11582
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5248": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10475,
        10781
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5249": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10576,
        10585
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5251": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5252": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10595,
        10608
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5254": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10595,
        10615
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5255": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10591,
        10615
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5256": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10591,
        10615
      ],
      "op": "LT",
      "path": "8"
    },
    "5257": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5258": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1524"
    },
    "5261": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5262": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10682,
        10683
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5264": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10654
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5266": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5268": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10668
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5270": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10669,
        10670
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5271": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5272": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5273": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5274": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "LT",
      "path": "8"
    },
    "5275": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14A6"
    },
    "5278": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5279": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14A6"
    },
    "5282": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "5285": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10655,
        10671
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5286": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5287": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5289": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5290": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5291": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5292": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5294": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5295": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5296": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5297": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5298": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5299": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "ADD",
      "path": "8"
    },
    "5300": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5307": {
      "op": "SHL"
    },
    "5308": {
      "op": "SUB"
    },
    "5309": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5310": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5311": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10655,
        10671
      ],
      "op": "AND",
      "path": "8"
    },
    "5312": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5313": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5314": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5315": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5316": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "ADD",
      "path": "8"
    },
    "5317": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5318": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5319": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5320": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5321": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5323": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5324": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5325": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "ADD",
      "path": "8"
    },
    "5326": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5327": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10672
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5328": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5329": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5330": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "AND",
      "path": "8"
    },
    "5331": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5332": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5333": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5334": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5335": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5336": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5337": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5338": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5339": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10679
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5340": {
      "branch": 71,
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10640,
        10683
      ],
      "op": "GT",
      "path": "8"
    },
    "5341": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10636,
        10765
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5342": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10636,
        10765
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1512"
    },
    "5345": {
      "branch": 71,
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10636,
        10765
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5346": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10703,
        10750
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 55,
      "value": "0x1512"
    },
    "5349": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10726,
        10731
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5350": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10746
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5352": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10747,
        10748
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5353": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5354": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5355": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5356": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "LT",
      "path": "8"
    },
    "5357": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F8"
    },
    "5360": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5361": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F8"
    },
    "5364": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A5"
    },
    "5367": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10733,
        10749
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5368": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5369": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5371": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5372": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5373": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5374": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5376": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5377": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5378": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5379": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "ADD",
      "path": "8"
    },
    "5380": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5387": {
      "op": "SHL"
    },
    "5388": {
      "op": "SUB"
    },
    "5389": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10733,
        10749
      ],
      "op": "AND",
      "path": "8"
    },
    "5390": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10703,
        10725
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13AF"
    },
    "5393": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10703,
        10750
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5394": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10703,
        10750
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5395": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 56
    },
    "5396": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x151C"
    },
    "5399": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5400": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BB"
    },
    "5403": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10617,
        10620
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5404": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5405": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5406": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "POP",
      "path": "8"
    },
    "5407": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10617,
        10620
      ],
      "op": "POP",
      "path": "8"
    },
    "5408": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1483"
    },
    "5411": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5412": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5413": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10571,
        10775
      ],
      "op": "POP",
      "path": "8"
    },
    "5414": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10475,
        10781
      ],
      "op": "POP",
      "path": "8"
    },
    "5415": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "o",
      "offset": [
        10475,
        10781
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5416": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5417": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5419": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5420": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "op": "SUB"
    },
    "5429": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 57
    },
    "5430": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5431": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5438": {
      "op": "SHL"
    },
    "5439": {
      "op": "SUB"
    },
    "5440": {
      "op": "NOT"
    },
    "5441": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5442": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "5443": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5444": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "5445": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5446": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5447": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x40"
    },
    "5449": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5450": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5451": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5452": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5453": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "5454": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5455": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5456": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5457": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5490": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5491": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5492": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5493": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "5494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "5495": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5496": {
      "op": "JUMPDEST"
    },
    "5497": {
      "op": "DUP1"
    },
    "5498": {
      "op": "CALLDATALOAD"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "op": "SUB"
    },
    "5507": {
      "op": "DUP2"
    },
    "5508": {
      "op": "AND"
    },
    "5509": {
      "op": "DUP2"
    },
    "5510": {
      "op": "EQ"
    },
    "5511": {
      "op": "PUSH2",
      "value": "0x158F"
    },
    "5514": {
      "op": "JUMPI"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5517": {
      "op": "DUP1"
    },
    "5518": {
      "op": "REVERT"
    },
    "5519": {
      "op": "JUMPDEST"
    },
    "5520": {
      "op": "SWAP2"
    },
    "5521": {
      "op": "SWAP1"
    },
    "5522": {
      "op": "POP"
    },
    "5523": {
      "jump": "o",
      "op": "JUMP"
    },
    "5524": {
      "op": "JUMPDEST"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5527": {
      "op": "DUP1"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5532": {
      "op": "DUP5"
    },
    "5533": {
      "op": "DUP7"
    },
    "5534": {
      "op": "SUB"
    },
    "5535": {
      "op": "SLT"
    },
    "5536": {
      "op": "ISZERO"
    },
    "5537": {
      "op": "PUSH2",
      "value": "0x15A9"
    },
    "5540": {
      "op": "JUMPI"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5543": {
      "op": "DUP1"
    },
    "5544": {
      "op": "REVERT"
    },
    "5545": {
      "op": "JUMPDEST"
    },
    "5546": {
      "op": "PUSH2",
      "value": "0x15B2"
    },
    "5549": {
      "op": "DUP5"
    },
    "5550": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5553": {
      "jump": "i",
      "op": "JUMP"
    },
    "5554": {
      "op": "JUMPDEST"
    },
    "5555": {
      "op": "SWAP3"
    },
    "5556": {
      "op": "POP"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0x15C0"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5562": {
      "op": "DUP6"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5567": {
      "jump": "i",
      "op": "JUMP"
    },
    "5568": {
      "op": "JUMPDEST"
    },
    "5569": {
      "op": "SWAP2"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5573": {
      "op": "DUP5"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "op": "CALLDATALOAD"
    },
    "5576": {
      "op": "SWAP1"
    },
    "5577": {
      "op": "POP"
    },
    "5578": {
      "op": "SWAP3"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "SWAP3"
    },
    "5581": {
      "op": "POP"
    },
    "5582": {
      "op": "SWAP3"
    },
    "5583": {
      "jump": "o",
      "op": "JUMP"
    },
    "5584": {
      "op": "JUMPDEST"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5587": {
      "op": "DUP1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5590": {
      "op": "DUP4"
    },
    "5591": {
      "op": "DUP6"
    },
    "5592": {
      "op": "SUB"
    },
    "5593": {
      "op": "SLT"
    },
    "5594": {
      "op": "ISZERO"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x15E3"
    },
    "5598": {
      "op": "JUMPI"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "DUP1"
    },
    "5602": {
      "op": "REVERT"
    },
    "5603": {
      "op": "JUMPDEST"
    },
    "5604": {
      "op": "DUP3"
    },
    "5605": {
      "op": "CALLDATALOAD"
    },
    "5606": {
      "op": "SWAP2"
    },
    "5607": {
      "op": "POP"
    },
    "5608": {
      "op": "PUSH2",
      "value": "0x15F3"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5613": {
      "op": "DUP5"
    },
    "5614": {
      "op": "ADD"
    },
    "5615": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5618": {
      "jump": "i",
      "op": "JUMP"
    },
    "5619": {
      "op": "JUMPDEST"
    },
    "5620": {
      "op": "SWAP1"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "op": "SWAP3"
    },
    "5623": {
      "op": "POP"
    },
    "5624": {
      "op": "SWAP3"
    },
    "5625": {
      "op": "SWAP1"
    },
    "5626": {
      "op": "POP"
    },
    "5627": {
      "jump": "o",
      "op": "JUMP"
    },
    "5628": {
      "op": "JUMPDEST"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5631": {
      "op": "DUP1"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5634": {
      "op": "DUP4"
    },
    "5635": {
      "op": "DUP6"
    },
    "5636": {
      "op": "SUB"
    },
    "5637": {
      "op": "SLT"
    },
    "5638": {
      "op": "ISZERO"
    },
    "5639": {
      "op": "PUSH2",
      "value": "0x160F"
    },
    "5642": {
      "op": "JUMPI"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5645": {
      "op": "DUP1"
    },
    "5646": {
      "op": "REVERT"
    },
    "5647": {
      "op": "JUMPDEST"
    },
    "5648": {
      "op": "PUSH2",
      "value": "0x1618"
    },
    "5651": {
      "op": "DUP4"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5655": {
      "jump": "i",
      "op": "JUMP"
    },
    "5656": {
      "op": "JUMPDEST"
    },
    "5657": {
      "op": "SWAP2"
    },
    "5658": {
      "op": "POP"
    },
    "5659": {
      "op": "PUSH2",
      "value": "0x15F3"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5664": {
      "op": "DUP5"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5669": {
      "jump": "i",
      "op": "JUMP"
    },
    "5670": {
      "op": "JUMPDEST"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5675": {
      "op": "DUP3"
    },
    "5676": {
      "op": "DUP5"
    },
    "5677": {
      "op": "SUB"
    },
    "5678": {
      "op": "SLT"
    },
    "5679": {
      "op": "ISZERO"
    },
    "5680": {
      "op": "PUSH2",
      "value": "0x1638"
    },
    "5683": {
      "op": "JUMPI"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5686": {
      "op": "DUP1"
    },
    "5687": {
      "op": "REVERT"
    },
    "5688": {
      "op": "JUMPDEST"
    },
    "5689": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "5692": {
      "op": "DUP3"
    },
    "5693": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5696": {
      "jump": "i",
      "op": "JUMP"
    },
    "5697": {
      "op": "JUMPDEST"
    },
    "5698": {
      "op": "SWAP4"
    },
    "5699": {
      "op": "SWAP3"
    },
    "5700": {
      "op": "POP"
    },
    "5701": {
      "op": "POP"
    },
    "5702": {
      "op": "POP"
    },
    "5703": {
      "jump": "o",
      "op": "JUMP"
    },
    "5704": {
      "op": "JUMPDEST"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5709": {
      "op": "DUP3"
    },
    "5710": {
      "op": "DUP5"
    },
    "5711": {
      "op": "SUB"
    },
    "5712": {
      "op": "SLT"
    },
    "5713": {
      "op": "ISZERO"
    },
    "5714": {
      "op": "PUSH2",
      "value": "0x165A"
    },
    "5717": {
      "op": "JUMPI"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5720": {
      "op": "DUP1"
    },
    "5721": {
      "op": "REVERT"
    },
    "5722": {
      "op": "JUMPDEST"
    },
    "5723": {
      "op": "POP"
    },
    "5724": {
      "op": "CALLDATALOAD"
    },
    "5725": {
      "op": "SWAP2"
    },
    "5726": {
      "op": "SWAP1"
    },
    "5727": {
      "op": "POP"
    },
    "5728": {
      "jump": "o",
      "op": "JUMP"
    },
    "5729": {
      "op": "JUMPDEST"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5732": {
      "op": "DUP1"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5735": {
      "op": "DUP4"
    },
    "5736": {
      "op": "DUP6"
    },
    "5737": {
      "op": "SUB"
    },
    "5738": {
      "op": "SLT"
    },
    "5739": {
      "op": "ISZERO"
    },
    "5740": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "5743": {
      "op": "JUMPI"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5746": {
      "op": "DUP1"
    },
    "5747": {
      "op": "REVERT"
    },
    "5748": {
      "op": "JUMPDEST"
    },
    "5749": {
      "op": "PUSH2",
      "value": "0x167D"
    },
    "5752": {
      "op": "DUP4"
    },
    "5753": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "5756": {
      "jump": "i",
      "op": "JUMP"
    },
    "5757": {
      "op": "JUMPDEST"
    },
    "5758": {
      "op": "SWAP5"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5761": {
      "op": "SWAP4"
    },
    "5762": {
      "op": "SWAP1"
    },
    "5763": {
      "op": "SWAP4"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "CALLDATALOAD"
    },
    "5766": {
      "op": "SWAP4"
    },
    "5767": {
      "op": "POP"
    },
    "5768": {
      "op": "POP"
    },
    "5769": {
      "op": "POP"
    },
    "5770": {
      "jump": "o",
      "op": "JUMP"
    },
    "5771": {
      "op": "JUMPDEST"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5774": {
      "op": "DUP1"
    },
    "5775": {
      "op": "DUP3"
    },
    "5776": {
      "op": "MSTORE"
    },
    "5777": {
      "op": "DUP2"
    },
    "5778": {
      "op": "DUP2"
    },
    "5779": {
      "op": "ADD"
    },
    "5780": {
      "op": "MSTORE"
    },
    "5781": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5816": {
      "op": "DUP3"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5821": {
      "op": "ADD"
    },
    "5822": {
      "op": "SWAP1"
    },
    "5823": {
      "jump": "o",
      "op": "JUMP"
    },
    "5824": {
      "op": "JUMPDEST"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5829": {
      "op": "DUP3"
    },
    "5830": {
      "op": "DUP5"
    },
    "5831": {
      "op": "SUB"
    },
    "5832": {
      "op": "SLT"
    },
    "5833": {
      "op": "ISZERO"
    },
    "5834": {
      "op": "PUSH2",
      "value": "0x16D2"
    },
    "5837": {
      "op": "JUMPI"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5840": {
      "op": "DUP1"
    },
    "5841": {
      "op": "REVERT"
    },
    "5842": {
      "op": "JUMPDEST"
    },
    "5843": {
      "op": "DUP2"
    },
    "5844": {
      "op": "MLOAD"
    },
    "5845": {
      "op": "DUP1"
    },
    "5846": {
      "op": "ISZERO"
    },
    "5847": {
      "op": "ISZERO"
    },
    "5848": {
      "op": "DUP2"
    },
    "5849": {
      "op": "EQ"
    },
    "5850": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "5853": {
      "op": "JUMPI"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5856": {
      "op": "DUP1"
    },
    "5857": {
      "op": "REVERT"
    },
    "5858": {
      "op": "JUMPDEST"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5861": {
      "op": "DUP1"
    },
    "5862": {
      "op": "DUP3"
    },
    "5863": {
      "op": "MSTORE"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5866": {
      "op": "SWAP1"
    },
    "5867": {
      "op": "DUP3"
    },
    "5868": {
      "op": "ADD"
    },
    "5869": {
      "op": "MSTORE"
    },
    "5870": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A20617070726F76652829206661696C65"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5905": {
      "op": "DUP3"
    },
    "5906": {
      "op": "ADD"
    },
    "5907": {
      "op": "MSTORE"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "5912": {
      "op": "SHL"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5915": {
      "op": "DUP3"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "MSTORE"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5920": {
      "op": "ADD"
    },
    "5921": {
      "op": "SWAP1"
    },
    "5922": {
      "jump": "o",
      "op": "JUMP"
    },
    "5923": {
      "op": "JUMPDEST"
    },
    "5924": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5931": {
      "op": "SHL"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5934": {
      "op": "MSTORE"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5939": {
      "op": "MSTORE"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5944": {
      "op": "REVERT"
    },
    "5945": {
      "op": "JUMPDEST"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5948": {
      "op": "DUP3"
    },
    "5949": {
      "op": "NOT"
    },
    "5950": {
      "op": "DUP3"
    },
    "5951": {
      "op": "GT"
    },
    "5952": {
      "op": "ISZERO"
    },
    "5953": {
      "op": "PUSH2",
      "value": "0x174C"
    },
    "5956": {
      "op": "JUMPI"
    },
    "5957": {
      "op": "PUSH2",
      "value": "0x174C"
    },
    "5960": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "5963": {
      "jump": "i",
      "op": "JUMP"
    },
    "5964": {
      "op": "JUMPDEST"
    },
    "5965": {
      "op": "POP"
    },
    "5966": {
      "op": "ADD"
    },
    "5967": {
      "op": "SWAP1"
    },
    "5968": {
      "jump": "o",
      "op": "JUMP"
    },
    "5969": {
      "op": "JUMPDEST"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5976": {
      "op": "SHL"
    },
    "5977": {
      "op": "SUB"
    },
    "5978": {
      "op": "SWAP4"
    },
    "5979": {
      "op": "DUP5"
    },
    "5980": {
      "op": "AND"
    },
    "5981": {
      "op": "DUP2"
    },
    "5982": {
      "op": "MSTORE"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5985": {
      "op": "DUP2"
    },
    "5986": {
      "op": "ADD"
    },
    "5987": {
      "op": "SWAP3"
    },
    "5988": {
      "op": "SWAP1"
    },
    "5989": {
      "op": "SWAP3"
    },
    "5990": {
      "op": "MSTORE"
    },
    "5991": {
      "op": "SWAP1"
    },
    "5992": {
      "op": "SWAP2"
    },
    "5993": {
      "op": "AND"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5996": {
      "op": "DUP3"
    },
    "5997": {
      "op": "ADD"
    },
    "5998": {
      "op": "MSTORE"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "SWAP1"
    },
    "6003": {
      "jump": "o",
      "op": "JUMP"
    },
    "6004": {
      "op": "JUMPDEST"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6007": {
      "op": "DUP2"
    },
    "6008": {
      "op": "DUP2"
    },
    "6009": {
      "op": "JUMPDEST"
    },
    "6010": {
      "op": "DUP1"
    },
    "6011": {
      "op": "DUP6"
    },
    "6012": {
      "op": "GT"
    },
    "6013": {
      "op": "ISZERO"
    },
    "6014": {
      "op": "PUSH2",
      "value": "0x17AF"
    },
    "6017": {
      "op": "JUMPI"
    },
    "6018": {
      "op": "DUP2"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6021": {
      "op": "NOT"
    },
    "6022": {
      "op": "DIV"
    },
    "6023": {
      "op": "DUP3"
    },
    "6024": {
      "op": "GT"
    },
    "6025": {
      "op": "ISZERO"
    },
    "6026": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6029": {
      "op": "JUMPI"
    },
    "6030": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6033": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6036": {
      "jump": "i",
      "op": "JUMP"
    },
    "6037": {
      "op": "JUMPDEST"
    },
    "6038": {
      "op": "DUP1"
    },
    "6039": {
      "op": "DUP6"
    },
    "6040": {
      "op": "AND"
    },
    "6041": {
      "op": "ISZERO"
    },
    "6042": {
      "op": "PUSH2",
      "value": "0x17A2"
    },
    "6045": {
      "op": "JUMPI"
    },
    "6046": {
      "op": "SWAP2"
    },
    "6047": {
      "op": "DUP2"
    },
    "6048": {
      "op": "MUL"
    },
    "6049": {
      "op": "SWAP2"
    },
    "6050": {
      "op": "JUMPDEST"
    },
    "6051": {
      "op": "SWAP4"
    },
    "6052": {
      "op": "DUP5"
    },
    "6053": {
      "op": "SHR"
    },
    "6054": {
      "op": "SWAP4"
    },
    "6055": {
      "op": "SWAP1"
    },
    "6056": {
      "op": "DUP1"
    },
    "6057": {
      "op": "MUL"
    },
    "6058": {
      "op": "SWAP1"
    },
    "6059": {
      "op": "PUSH2",
      "value": "0x1779"
    },
    "6062": {
      "op": "JUMP"
    },
    "6063": {
      "op": "JUMPDEST"
    },
    "6064": {
      "op": "POP"
    },
    "6065": {
      "op": "SWAP3"
    },
    "6066": {
      "op": "POP"
    },
    "6067": {
      "op": "SWAP3"
    },
    "6068": {
      "op": "SWAP1"
    },
    "6069": {
      "op": "POP"
    },
    "6070": {
      "jump": "o",
      "op": "JUMP"
    },
    "6071": {
      "op": "JUMPDEST"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6074": {
      "op": "DUP3"
    },
    "6075": {
      "op": "PUSH2",
      "value": "0x17C6"
    },
    "6078": {
      "op": "JUMPI"
    },
    "6079": {
      "op": "POP"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6082": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6085": {
      "op": "JUMP"
    },
    "6086": {
      "op": "JUMPDEST"
    },
    "6087": {
      "op": "DUP2"
    },
    "6088": {
      "op": "PUSH2",
      "value": "0x17D3"
    },
    "6091": {
      "op": "JUMPI"
    },
    "6092": {
      "op": "POP"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6095": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6098": {
      "op": "JUMP"
    },
    "6099": {
      "op": "JUMPDEST"
    },
    "6100": {
      "op": "DUP2"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6103": {
      "op": "DUP2"
    },
    "6104": {
      "op": "EQ"
    },
    "6105": {
      "op": "PUSH2",
      "value": "0x17E9"
    },
    "6108": {
      "op": "JUMPI"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6111": {
      "op": "DUP2"
    },
    "6112": {
      "op": "EQ"
    },
    "6113": {
      "op": "PUSH2",
      "value": "0x17F3"
    },
    "6116": {
      "op": "JUMPI"
    },
    "6117": {
      "op": "PUSH2",
      "value": "0x180F"
    },
    "6120": {
      "op": "JUMP"
    },
    "6121": {
      "op": "JUMPDEST"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "SWAP2"
    },
    "6125": {
      "op": "POP"
    },
    "6126": {
      "op": "POP"
    },
    "6127": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6130": {
      "op": "JUMP"
    },
    "6131": {
      "op": "JUMPDEST"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6134": {
      "op": "DUP5"
    },
    "6135": {
      "op": "GT"
    },
    "6136": {
      "op": "ISZERO"
    },
    "6137": {
      "op": "PUSH2",
      "value": "0x1804"
    },
    "6140": {
      "op": "JUMPI"
    },
    "6141": {
      "op": "PUSH2",
      "value": "0x1804"
    },
    "6144": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6147": {
      "jump": "i",
      "op": "JUMP"
    },
    "6148": {
      "op": "JUMPDEST"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "op": "POP"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6153": {
      "op": "DUP3"
    },
    "6154": {
      "op": "SHL"
    },
    "6155": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6158": {
      "op": "JUMP"
    },
    "6159": {
      "op": "JUMPDEST"
    },
    "6160": {
      "op": "POP"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6163": {
      "op": "DUP4"
    },
    "6164": {
      "op": "LT"
    },
    "6165": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "6168": {
      "op": "DUP4"
    },
    "6169": {
      "op": "LT"
    },
    "6170": {
      "op": "AND"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "6173": {
      "op": "DUP5"
    },
    "6174": {
      "op": "LT"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6177": {
      "op": "DUP5"
    },
    "6178": {
      "op": "LT"
    },
    "6179": {
      "op": "AND"
    },
    "6180": {
      "op": "OR"
    },
    "6181": {
      "op": "ISZERO"
    },
    "6182": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6185": {
      "op": "JUMPI"
    },
    "6186": {
      "op": "POP"
    },
    "6187": {
      "op": "DUP2"
    },
    "6188": {
      "op": "DUP2"
    },
    "6189": {
      "op": "EXP"
    },
    "6190": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6193": {
      "op": "JUMP"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "PUSH2",
      "value": "0x183C"
    },
    "6198": {
      "op": "DUP4"
    },
    "6199": {
      "op": "DUP4"
    },
    "6200": {
      "op": "PUSH2",
      "value": "0x1774"
    },
    "6203": {
      "jump": "i",
      "op": "JUMP"
    },
    "6204": {
      "op": "JUMPDEST"
    },
    "6205": {
      "op": "DUP1"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6208": {
      "op": "NOT"
    },
    "6209": {
      "op": "DIV"
    },
    "6210": {
      "op": "DUP3"
    },
    "6211": {
      "op": "GT"
    },
    "6212": {
      "op": "ISZERO"
    },
    "6213": {
      "op": "PUSH2",
      "value": "0x1850"
    },
    "6216": {
      "op": "JUMPI"
    },
    "6217": {
      "op": "PUSH2",
      "value": "0x1850"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6223": {
      "jump": "i",
      "op": "JUMP"
    },
    "6224": {
      "op": "JUMPDEST"
    },
    "6225": {
      "op": "MUL"
    },
    "6226": {
      "op": "SWAP4"
    },
    "6227": {
      "op": "SWAP3"
    },
    "6228": {
      "op": "POP"
    },
    "6229": {
      "op": "POP"
    },
    "6230": {
      "op": "POP"
    },
    "6231": {
      "jump": "o",
      "op": "JUMP"
    },
    "6232": {
      "op": "JUMPDEST"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6235": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "6238": {
      "op": "DUP4"
    },
    "6239": {
      "op": "DUP4"
    },
    "6240": {
      "op": "PUSH2",
      "value": "0x17B7"
    },
    "6243": {
      "jump": "i",
      "op": "JUMP"
    },
    "6244": {
      "op": "JUMPDEST"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6247": {
      "op": "DUP2"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6250": {
      "op": "NOT"
    },
    "6251": {
      "op": "DIV"
    },
    "6252": {
      "op": "DUP4"
    },
    "6253": {
      "op": "GT"
    },
    "6254": {
      "op": "DUP3"
    },
    "6255": {
      "op": "ISZERO"
    },
    "6256": {
      "op": "ISZERO"
    },
    "6257": {
      "op": "AND"
    },
    "6258": {
      "op": "ISZERO"
    },
    "6259": {
      "op": "PUSH2",
      "value": "0x187E"
    },
    "6262": {
      "op": "JUMPI"
    },
    "6263": {
      "op": "PUSH2",
      "value": "0x187E"
    },
    "6266": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6269": {
      "jump": "i",
      "op": "JUMP"
    },
    "6270": {
      "op": "JUMPDEST"
    },
    "6271": {
      "op": "POP"
    },
    "6272": {
      "op": "MUL"
    },
    "6273": {
      "op": "SWAP1"
    },
    "6274": {
      "jump": "o",
      "op": "JUMP"
    },
    "6275": {
      "op": "JUMPDEST"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6278": {
      "op": "DUP3"
    },
    "6279": {
      "op": "PUSH2",
      "value": "0x18A0"
    },
    "6282": {
      "op": "JUMPI"
    },
    "6283": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6290": {
      "op": "SHL"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6293": {
      "op": "MSTORE"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6298": {
      "op": "MSTORE"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6303": {
      "op": "REVERT"
    },
    "6304": {
      "op": "JUMPDEST"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "op": "DIV"
    },
    "6307": {
      "op": "SWAP1"
    },
    "6308": {
      "jump": "o",
      "op": "JUMP"
    },
    "6309": {
      "op": "JUMPDEST"
    },
    "6310": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6317": {
      "op": "SHL"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6320": {
      "op": "MSTORE"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6325": {
      "op": "MSTORE"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6330": {
      "op": "REVERT"
    },
    "6331": {
      "op": "JUMPDEST"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6336": {
      "op": "NOT"
    },
    "6337": {
      "op": "DUP3"
    },
    "6338": {
      "op": "EQ"
    },
    "6339": {
      "op": "ISZERO"
    },
    "6340": {
      "op": "PUSH2",
      "value": "0x18CF"
    },
    "6343": {
      "op": "JUMPI"
    },
    "6344": {
      "op": "PUSH2",
      "value": "0x18CF"
    },
    "6347": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6350": {
      "jump": "i",
      "op": "JUMP"
    },
    "6351": {
      "op": "JUMPDEST"
    },
    "6352": {
      "op": "POP"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6355": {
      "op": "ADD"
    },
    "6356": {
      "op": "SWAP1"
    },
    "6357": {
      "jump": "o",
      "op": "JUMP"
    },
    "6358": {
      "op": "JUMPDEST"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6363": {
      "op": "DUP3"
    },
    "6364": {
      "op": "DUP5"
    },
    "6365": {
      "op": "SUB"
    },
    "6366": {
      "op": "SLT"
    },
    "6367": {
      "op": "ISZERO"
    },
    "6368": {
      "op": "PUSH2",
      "value": "0x18E8"
    },
    "6371": {
      "op": "JUMPI"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6374": {
      "op": "DUP1"
    },
    "6375": {
      "op": "REVERT"
    },
    "6376": {
      "op": "JUMPDEST"
    },
    "6377": {
      "op": "POP"
    },
    "6378": {
      "op": "MLOAD"
    },
    "6379": {
      "op": "SWAP2"
    },
    "6380": {
      "op": "SWAP1"
    },
    "6381": {
      "op": "POP"
    },
    "6382": {
      "jump": "o",
      "op": "JUMP"
    },
    "6383": {
      "op": "JUMPDEST"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6386": {
      "op": "DUP3"
    },
    "6387": {
      "op": "DUP3"
    },
    "6388": {
      "op": "LT"
    },
    "6389": {
      "op": "ISZERO"
    },
    "6390": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6393": {
      "op": "JUMPI"
    },
    "6394": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6397": {
      "op": "PUSH2",
      "value": "0x1723"
    },
    "6400": {
      "jump": "i",
      "op": "JUMP"
    },
    "6401": {
      "op": "JUMPDEST"
    },
    "6402": {
      "op": "POP"
    },
    "6403": {
      "op": "SUB"
    },
    "6404": {
      "op": "SWAP1"
    },
    "6405": {
      "jump": "o",
      "op": "JUMP"
    },
    "6406": {
      "op": "JUMPDEST"
    },
    "6407": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6417": {
      "op": "MSTORE"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6422": {
      "op": "MSTORE"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6427": {
      "op": "REVERT"
    },
    "6428": {
      "op": "JUMPDEST"
    },
    "6429": {
      "op": "DUP1"
    },
    "6430": {
      "op": "MLOAD"
    },
    "6431": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "6442": {
      "op": "DUP2"
    },
    "6443": {
      "op": "AND"
    },
    "6444": {
      "op": "DUP2"
    },
    "6445": {
      "op": "EQ"
    },
    "6446": {
      "op": "PUSH2",
      "value": "0x158F"
    },
    "6449": {
      "op": "JUMPI"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6452": {
      "op": "DUP1"
    },
    "6453": {
      "op": "REVERT"
    },
    "6454": {
      "op": "JUMPDEST"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6457": {
      "op": "DUP1"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6460": {
      "op": "DUP1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6465": {
      "op": "DUP7"
    },
    "6466": {
      "op": "DUP9"
    },
    "6467": {
      "op": "SUB"
    },
    "6468": {
      "op": "SLT"
    },
    "6469": {
      "op": "ISZERO"
    },
    "6470": {
      "op": "PUSH2",
      "value": "0x194E"
    },
    "6473": {
      "op": "JUMPI"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6476": {
      "op": "DUP1"
    },
    "6477": {
      "op": "REVERT"
    },
    "6478": {
      "op": "JUMPDEST"
    },
    "6479": {
      "op": "PUSH2",
      "value": "0x1957"
    },
    "6482": {
      "op": "DUP7"
    },
    "6483": {
      "op": "PUSH2",
      "value": "0x191C"
    },
    "6486": {
      "jump": "i",
      "op": "JUMP"
    },
    "6487": {
      "op": "JUMPDEST"
    },
    "6488": {
      "op": "SWAP5"
    },
    "6489": {
      "op": "POP"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6492": {
      "op": "DUP7"
    },
    "6493": {
      "op": "ADD"
    },
    "6494": {
      "op": "MLOAD"
    },
    "6495": {
      "op": "SWAP4"
    },
    "6496": {
      "op": "POP"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6499": {
      "op": "DUP7"
    },
    "6500": {
      "op": "ADD"
    },
    "6501": {
      "op": "MLOAD"
    },
    "6502": {
      "op": "SWAP3"
    },
    "6503": {
      "op": "POP"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6506": {
      "op": "DUP7"
    },
    "6507": {
      "op": "ADD"
    },
    "6508": {
      "op": "MLOAD"
    },
    "6509": {
      "op": "SWAP2"
    },
    "6510": {
      "op": "POP"
    },
    "6511": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6516": {
      "op": "DUP8"
    },
    "6517": {
      "op": "ADD"
    },
    "6518": {
      "op": "PUSH2",
      "value": "0x191C"
    },
    "6521": {
      "jump": "i",
      "op": "JUMP"
    },
    "6522": {
      "op": "JUMPDEST"
    },
    "6523": {
      "op": "SWAP1"
    },
    "6524": {
      "op": "POP"
    },
    "6525": {
      "op": "SWAP3"
    },
    "6526": {
      "op": "SWAP6"
    },
    "6527": {
      "op": "POP"
    },
    "6528": {
      "op": "SWAP3"
    },
    "6529": {
      "op": "SWAP6"
    },
    "6530": {
      "op": "SWAP1"
    },
    "6531": {
      "op": "SWAP4"
    },
    "6532": {
      "op": "POP"
    },
    "6533": {
      "jump": "o",
      "op": "JUMP"
    },
    "6534": {
      "op": "JUMPDEST"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6539": {
      "op": "DUP3"
    },
    "6540": {
      "op": "DUP5"
    },
    "6541": {
      "op": "SUB"
    },
    "6542": {
      "op": "SLT"
    },
    "6543": {
      "op": "ISZERO"
    },
    "6544": {
      "op": "PUSH2",
      "value": "0x1998"
    },
    "6547": {
      "op": "JUMPI"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6550": {
      "op": "DUP1"
    },
    "6551": {
      "op": "REVERT"
    },
    "6552": {
      "op": "JUMPDEST"
    },
    "6553": {
      "op": "DUP2"
    },
    "6554": {
      "op": "MLOAD"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6557": {
      "op": "DUP2"
    },
    "6558": {
      "op": "AND"
    },
    "6559": {
      "op": "DUP2"
    },
    "6560": {
      "op": "EQ"
    },
    "6561": {
      "op": "PUSH2",
      "value": "0x1641"
    },
    "6564": {
      "op": "JUMPI"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6567": {
      "op": "DUP1"
    },
    "6568": {
      "op": "REVERT"
    }
  },
  "sha1": "6083cb2916e60cd082397cc59522a78b2a34d8e6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nimport \"../interfaces/ILendingProtocol.sol\";\n\ncontract StakingContract is Ownable {\n    IERC20 public projectToken;\n    address[] public stakers;\n    address[] public allowedTokens;\n    //ERC20 -> user -> amount stakes\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n    //how many different erc20 token the user has currently staked\n    mapping(address => uint256) public uniqueTokensStaked;\n    // ERC20 -> price feed address\n    mapping(address => address) public tokenPriceFeedMapping;\n    // user -> amount of projectToken they can claimed\n    mapping(address => uint256) public tokenToClaim;\n    // how much token user can earn per amount of time\n    // token earn = total value [USD] * yield/1000 * time period[timestamp] / second_in_days\n    // for a yieldRate of 10, user gain 1% of total value [USD] per day\n    // token -> yieldRate\n    mapping(address => uint256) public tokenToYieldRate;\n    // user => token => time of last update\n    mapping(address => mapping(address => uint256))\n        public userToTokenToUnrealisedYieldTime;\n\n    ILendingProtocol public lendingProtocol;\n\n    // EVENTS\n    event TokenAdded(address indexed token_address);\n    event TokenStaked(\n        address indexed token,\n        address indexed staker,\n        uint256 amount\n    );\n    event TokenUnstaked(\n        address indexed token,\n        address indexed staker,\n        uint256 amount\n    );\n    event LendingProtocolChanged(address newProtocol, address oldProtocol);\n\n    // CONSTRUCTOR\n    constructor(address _projectTokenAddress, address _lendingProtocol) {\n        projectToken = IERC20(_projectTokenAddress);\n        lendingProtocol = ILendingProtocol(_lendingProtocol);\n    }\n\n    // PUBLIC FUNCTIONS\n\n    /// @notice Stake _amount of _token\n    /// @param _amount The amount ot stake\n    /// @param _token The address of the token\n    function stakeTokens(uint256 _amount, address _token) external {\n        // check parameters\n        require(_amount > 0, \"StakingContract: Amount must be greater than 0\");\n        require(\n            tokenIsAllowed(_token),\n            \"StakingContract: Token is currently no allowed\"\n        );\n        //update token to claim (if some amount already staked)\n        _updateOneTokenToClaim(msg.sender, _token);\n        require(\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount),\n            \"StakingContract: transferFrom() failed\"\n        );\n\n        if (stakingBalance[_token][msg.sender] == 0) {\n            uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] + 1;\n        }\n\n        stakingBalance[_token][msg.sender] =\n            stakingBalance[_token][msg.sender] +\n            _amount;\n\n        // add user to stakers list pnly if this is their first staking\n        if (uniqueTokensStaked[msg.sender] == 1) {\n            stakers.push(msg.sender);\n        }\n\n        //deposit on lending protocol\n        lendingProtocol.deposit(_token, _amount, address(this));\n        emit TokenStaked(_token, msg.sender, _amount);\n    }\n\n    /// @notice Unstake all _token staked\n    /// @param _token The address of the token\n    function unstakeTokens(address _token) external {\n        //check token to unstake\n        uint256 balance = stakingBalance[_token][msg.sender];\n        require(balance > 0, \"StakingContract: Staking balance already 0!\");\n        //update token to claim\n        _updateOneTokenToClaim(msg.sender, _token);\n        // update contract data\n        stakingBalance[_token][msg.sender] = 0;\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\n        if (uniqueTokensStaked[msg.sender] == 0) {\n            for (uint256 i = 0; i < stakers.length; i++) {\n                if (stakers[i] == msg.sender) {\n                    stakers[i] = stakers[stakers.length - 1];\n                    stakers.pop();\n                    break;\n                }\n            }\n        }\n\n        //withdraw from lending protocol and send to user\n        //and send tokens to user\n        require(\n            lendingProtocol.withdraw(_token, balance, msg.sender) > 0,\n            \"StakingContract: withdraw error\"\n        );\n        emit TokenUnstaked(_token, msg.sender, balance);\n    }\n\n    /// @notice Send Earned \"ProjectToken\" to user\n    function claimToken() external {\n        //Todo update yield per token in stake/unstake and here do it for each token\n        _updateTokenToClaim(msg.sender);\n        uint256 amount = tokenToClaim[msg.sender];\n        tokenToClaim[msg.sender] = 0;\n        require(projectToken.transfer(msg.sender, amount));\n    }\n\n    /// @notice Check wheter a token is stakable on this contract\n    /// @param _token The address of the token\n    /// @return bool Wheter the token is stakable or not\n    function tokenIsAllowed(address _token) public view returns (bool) {\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == _token) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /// @notice Get the total value (in USD) staked by _user\n    /// @param _user The address of the user\n    /// @return totalValue The total value  of the tokens staked on the contract by _user\n    function getUserTotalValue(address _user) public view returns (uint256) {\n        if (uniqueTokensStaked[_user] == 0) {\n            return 0;\n        }\n        uint256 totalValue = 0;\n        //for any stakable token\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            totalValue += getUserSingleTokenValue(_user, allowedTokens[i]);\n        }\n        return totalValue;\n    }\n\n    /// @notice Get the value (in USD) of _token staked by _user\n    /// @param _user The address of the user\n    /// @param _token The address of the token\n    /// @return tokenValue The value of _token staked on the contract by _user\n    function getUserSingleTokenValue(address _user, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        //TODO\n        uint256 tokenValue = ((stakingBalance[_token][_user] * price) /\n            (10**decimals));\n        return tokenValue;\n        //          amt staked                  * price  / 10**8\n        // E.G.     10 WETH                      * 3'000(usd/weth)/ 100_000_000\n    }\n\n    /// @notice Get the value (in USD) of a _token and its decimals()\n    /// @param _token The address of the token\n    /// @return price The value of _token\n    /// @return decimals The number of decimals of the _token\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    // ONLYOWNER\n\n    /// @notice Set the price feed address for an ERC20 token\n    /// @dev Gets call automatically when adding new token\n    /// @param _token The address of the token\n    /// @param _priceFeed The address of the pricefeed\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }\n\n    /// @notice Add a new _token to the list of stakable token\n    /// @param _token The address of the token\n    /// @param _pricefeed The address for the price feed of _token\n    function addAllowedTokens(\n        address _token,\n        address _pricefeed,\n        uint256 _yield\n    ) external onlyOwner {\n        allowedTokens.push(_token);\n        require(\n            IERC20(_token).approve(address(lendingProtocol), type(uint256).max),\n            \"StakingContract: approve() failed\"\n        );\n        setPriceFeedContract(_token, _pricefeed);\n        updateYieldRate(_token, _yield);\n        emit TokenAdded(_token);\n    }\n\n    // @notice Update the yield rate for _token\n    /// @param _token The address of the token\n    /// @param _newYieldRate The new yield rate\n    function updateYieldRate(address _token, uint256 _newYieldRate)\n        public\n        onlyOwner\n    {\n        //for all staker who staked _token, we calculate the amount they can claim with the previous yield\n        //before updateing the yield\n        for (uint256 i = 0; i < stakers.length; i++) {\n            if (stakingBalance[_token][stakers[i]] > 0) {\n                _updateOneTokenToClaim(stakers[i], _token);\n            }\n        }\n        //update yield\n        tokenToYieldRate[_token] = _newYieldRate;\n    }\n\n    /// @notice Change the lending protocol\n    /// @param _newLendingProtocol The address of the new lending protocol contract\n    function changeLendingProtocol(address _newLendingProtocol)\n        external\n        onlyOwner\n    {\n        address oldProtocol = address(lendingProtocol);\n        lendingProtocol = ILendingProtocol(_newLendingProtocol);\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            require(\n                IERC20(allowedTokens[i]).approve(\n                    _newLendingProtocol,\n                    type(uint256).max\n                ),\n                \"StakingContract: approve() failed\"\n            );\n        }\n        //withdraw and redeposit\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            address token = allowedTokens[i];\n            uint256 totalStaked = 0;\n            for (uint256 j = 0; j < stakers.length; j++) {\n                address staker = stakers[j];\n                totalStaked += stakingBalance[token][staker]; //TODO\n            }\n            ILendingProtocol(oldProtocol).withdraw(\n                token,\n                totalStaked,\n                address(this)\n            );\n            lendingProtocol.deposit(token, totalStaked, address(this));\n        }\n        emit LendingProtocolChanged(_newLendingProtocol, oldProtocol);\n    }\n\n    //  INTERNAL FUNCTION\n\n    /// @notice Update the tokenToClaim variable of _user for all token staked\n    /// @param _user The address of the user\n    function _updateTokenToClaim(address _user) internal {\n        //loop through all token\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (stakingBalance[allowedTokens[i]][_user] > 0) {\n                _updateOneTokenToClaim(_user, allowedTokens[i]);\n            }\n        }\n    }\n\n    /// @notice Update the tokenToClaim variable of _user for _token\n    /// @param _user The address of the user\n    /// @param _token The address of the token\n    function _updateOneTokenToClaim(address _user, address _token) internal {\n        uint256 unrealisedYieldTime = userToTokenToUnrealisedYieldTime[_user][\n            _token\n        ];\n        userToTokenToUnrealisedYieldTime[_user][_token] = block.timestamp;\n\n        uint256 valueStaked = getUserSingleTokenValue(_user, _token);\n        uint256 time = block.timestamp - unrealisedYieldTime;\n        uint256 day = 1 days;\n        uint256 tokenYieldRate = tokenToYieldRate[_token];\n        uint256 additionalYield = ((valueStaked * time * tokenYieldRate) /\n            1000) / day;\n\n        tokenToClaim[_user] += additionalYield;\n    }\n}\n",
  "sourceMap": "291:11293:8:-:0;;;1766:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:4;867:9:0;:23::i;:::-;1844:12:8;:43;;-1:-1:-1;;;;;1844:43:8;;;-1:-1:-1;;;;;;1844:43:8;;;;;;;1897:15;:52;;;;;;;;;;;291:11293;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;291:11293:8;;;;;;",
  "sourcePath": "contracts/StakingContract.sol",
  "type": "contract"
}
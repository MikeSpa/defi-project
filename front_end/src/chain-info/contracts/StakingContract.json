{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_projectTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lendingProtocol",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newProtocol",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldProtocol",
          "type": "address"
        }
      ],
      "name": "LendingProtocolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token_address",
          "type": "address"
        }
      ],
      "name": "TokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newYield",
          "type": "uint256"
        }
      ],
      "name": "YieldRateChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pricefeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_yield",
          "type": "uint256"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newLendingProtocol",
          "type": "address"
        }
      ],
      "name": "changeLendingProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUserSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingProtocol",
      "outputs": [
        {
          "internalType": "contract ILendingProtocol",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToYieldRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newYieldRate",
          "type": "uint256"
        }
      ],
      "name": "updateYieldRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToTokenToUnrealisedYieldTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "4": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "5": "/home/mike/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "8": "contracts/StakingContract.sol",
    "9": "interfaces/ILendingProtocol.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakingContract.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1998
      ],
      "Context": [
        2019
      ],
      "IERC20": [
        1917
      ],
      "ILendingProtocol": [
        1952
      ],
      "Ownable": [
        1615
      ],
      "StakingContract": [
        1511
      ]
    },
    "id": 1512,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 624,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 625,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 1616,
        "src": "57:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mike/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 1918,
        "src": "110:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mike/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 627,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 1999,
        "src": "167:76:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingProtocol.sol",
        "file": "../interfaces/ILendingProtocol.sol",
        "id": 628,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 1953,
        "src": "245:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 629,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1615,
              "src": "319:7:8"
            },
            "id": 630,
            "nodeType": "InheritanceSpecifier",
            "src": "319:7:8"
          }
        ],
        "canonicalName": "StakingContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1511,
        "linearizedBaseContracts": [
          1511,
          1615,
          2019
        ],
        "name": "StakingContract",
        "nameLocation": "300:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4b60ce77",
            "id": 633,
            "mutability": "mutable",
            "name": "projectToken",
            "nameLocation": "347:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "333:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1917",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 631,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1917,
                "src": "333:6:8"
              },
              "referencedDeclaration": 1917,
              "src": "333:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1917",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 636,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "382:7:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "365:24:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 634,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "365:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 635,
              "nodeType": "ArrayTypeName",
              "src": "365:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 639,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "412:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "395:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 637,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "395:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 638,
              "nodeType": "ArrayTypeName",
              "src": "395:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 645,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "523:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "468:69:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 644,
              "keyType": {
                "id": 640,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "476:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "468:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 643,
                "keyType": {
                  "id": 641,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "495:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "487:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 642,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b83e0234",
            "id": 649,
            "mutability": "mutable",
            "name": "uniqueTokensStaked",
            "nameLocation": "645:18:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "610:53:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 648,
              "keyType": {
                "id": 646,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "618:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "610:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 647,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "629:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 653,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "739:21:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "704:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 652,
              "keyType": {
                "id": 650,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "712:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "704:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 651,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "723:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2fb345a",
            "id": 657,
            "mutability": "mutable",
            "name": "tokenToClaim",
            "nameLocation": "856:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "821:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 656,
              "keyType": {
                "id": 654,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "821:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 655,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5583e5",
            "id": 661,
            "mutability": "mutable",
            "name": "tokenToYieldRate",
            "nameLocation": "1155:16:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "1120:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 660,
              "keyType": {
                "id": 658,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1128:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1120:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 659,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1139:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da0f0604",
            "id": 667,
            "mutability": "mutable",
            "name": "userToTokenToUnrealisedYieldTime",
            "nameLocation": "1284:32:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "1221:95:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 666,
              "keyType": {
                "id": 662,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1229:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1221:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 665,
                "keyType": {
                  "id": 663,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1248:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1240:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 664,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "84436d3e",
            "id": 670,
            "mutability": "mutable",
            "name": "lendingProtocol",
            "nameLocation": "1347:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "1323:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
              "typeString": "contract ILendingProtocol"
            },
            "typeName": {
              "id": 669,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 668,
                "name": "ILendingProtocol",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1952,
                "src": "1323:16:8"
              },
              "referencedDeclaration": 1952,
              "src": "1323:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                "typeString": "contract ILendingProtocol"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 674,
            "name": "TokenAdded",
            "nameLocation": "1389:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token_address",
                  "nameLocation": "1416:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1400:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1399:31:8"
            },
            "src": "1383:48:8"
          },
          {
            "anonymous": false,
            "id": 682,
            "name": "TokenStaked",
            "nameLocation": "1442:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1479:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "1463:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "1510:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "1494:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1534:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "1526:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1453:93:8"
            },
            "src": "1436:111:8"
          },
          {
            "anonymous": false,
            "id": 690,
            "name": "TokenUnstaked",
            "nameLocation": "1558:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1597:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "1581:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "1628:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "1612:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1652:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "1644:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:93:8"
            },
            "src": "1552:113:8"
          },
          {
            "anonymous": false,
            "id": 696,
            "name": "LendingProtocolChanged",
            "nameLocation": "1676:22:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newProtocol",
                  "nameLocation": "1707:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "1699:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldProtocol",
                  "nameLocation": "1728:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "1720:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:42:8"
            },
            "src": "1670:71:8"
          },
          {
            "anonymous": false,
            "id": 702,
            "name": "YieldRateChange",
            "nameLocation": "1753:15:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1785:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "1769:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newYield",
                  "nameLocation": "1800:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "1792:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:41:8"
            },
            "src": "1747:63:8"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "1903:122:8",
              "statements": [
                {
                  "expression": {
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 709,
                      "name": "projectToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1913:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1917",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 711,
                          "name": "_projectTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "1935:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 710,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1917,
                        "src": "1928:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1917_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1928:28:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1917",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1913:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1917",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:43:8"
                },
                {
                  "expression": {
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 715,
                      "name": "lendingProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "1966:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 717,
                          "name": "_lendingProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 706,
                          "src": "2001:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 716,
                        "name": "ILendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "1984:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingProtocol_$1952_$",
                          "typeString": "type(contract ILendingProtocol)"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1984:34:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "src": "1966:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                      "typeString": "contract ILendingProtocol"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:52:8"
                }
              ]
            },
            "id": 722,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "_projectTokenAddress",
                  "nameLocation": "1855:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "1847:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "_lendingProtocol",
                  "nameLocation": "1885:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "1877:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1846:56:8"
            },
            "returnParameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1903:0:8"
            },
            "scope": 1511,
            "src": "1835:190:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "2249:1108:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 731,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "2295:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2305:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2295:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2308:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b46d844d1d779fcc9362909bf290c401952fdbc746fd9855a767428269cd6506",
                          "typeString": "literal_string \"StakingContract: Amount must be greater than 0\""
                        },
                        "value": "StakingContract: Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b46d844d1d779fcc9362909bf290c401952fdbc746fd9855a767428269cd6506",
                          "typeString": "literal_string \"StakingContract: Amount must be greater than 0\""
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2287:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:70:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 739,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "2403:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 738,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1021,
                          "src": "2388:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2388:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a20546f6b656e2069732063757272656e746c79206e6f20616c6c6f776564",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2424:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dba74bb48761de9dcf3e7e37b9b1f10ac3648a19d765ace628674bda6c10f886",
                          "typeString": "literal_string \"StakingContract: Token is currently no allowed\""
                        },
                        "value": "StakingContract: Token is currently no allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dba74bb48761de9dcf3e7e37b9b1f10ac3648a19d765ace628674bda6c10f886",
                          "typeString": "literal_string \"StakingContract: Token is currently no allowed\""
                        }
                      ],
                      "id": 737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2367:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:115:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:115:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2579:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2579:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 747,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "2591:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 744,
                      "name": "_updateOneTokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1510,
                      "src": "2556:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:42:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 755,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2657:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2657:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 759,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2677:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingContract_$1511",
                                  "typeString": "contract StakingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingContract_$1511",
                                  "typeString": "contract StakingContract"
                                }
                              ],
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2669:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 757,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2669:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2669:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 761,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2684:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 752,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 727,
                                "src": "2636:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 751,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1917,
                              "src": "2629:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1917_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2629:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1917",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1898,
                          "src": "2629:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2629:63:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a207472616e7366657246726f6d2829206661696c6564",
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2706:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8b6f5d9cf331e22190ddf231caeeccd6c18fca4bd6ccef5ff540ba48495fa16",
                          "typeString": "literal_string \"StakingContract: transferFrom() failed\""
                        },
                        "value": "StakingContract: transferFrom() failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8b6f5d9cf331e22190ddf231caeeccd6c18fca4bd6ccef5ff540ba48495fa16",
                          "typeString": "literal_string \"StakingContract: transferFrom() failed\""
                        }
                      ],
                      "id": 750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2608:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "2608:148:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 766,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "2771:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 768,
                        "indexExpression": {
                          "id": 767,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "2786:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2771:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 771,
                      "indexExpression": {
                        "expression": {
                          "id": 769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2794:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2794:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2771:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2809:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2771:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 787,
                  "nodeType": "IfStatement",
                  "src": "2767:137:8",
                  "trueBody": {
                    "id": 786,
                    "nodeType": "Block",
                    "src": "2812:92:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 774,
                              "name": "uniqueTokensStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 649,
                              "src": "2826:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 777,
                            "indexExpression": {
                              "expression": {
                                "id": 775,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2845:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2845:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2826:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 778,
                                "name": "uniqueTokensStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "2859:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 781,
                              "indexExpression": {
                                "expression": {
                                  "id": 779,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2878:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2878:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2859:30:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2892:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2859:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2826:67:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "2826:67:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 788,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "2914:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 792,
                        "indexExpression": {
                          "id": 789,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "2929:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2914:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 793,
                      "indexExpression": {
                        "expression": {
                          "id": 790,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2937:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2937:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2914:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 794,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "2963:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 796,
                          "indexExpression": {
                            "id": 795,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "2978:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2963:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 799,
                        "indexExpression": {
                          "expression": {
                            "id": 797,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2986:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2986:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2963:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 800,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "3012:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2963:56:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2914:105:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:105:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 804,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3106:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 807,
                      "indexExpression": {
                        "expression": {
                          "id": 805,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3125:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3125:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3106:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3140:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3106:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 818,
                  "nodeType": "IfStatement",
                  "src": "3102:90:8",
                  "trueBody": {
                    "id": 817,
                    "nodeType": "Block",
                    "src": "3143:49:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 813,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3170:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3170:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 810,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "3157:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3157:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3157:24:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "3157:24:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 822,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3264:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 823,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "3272:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 826,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3289:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingContract_$1511",
                              "typeString": "contract StakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingContract_$1511",
                              "typeString": "contract StakingContract"
                            }
                          ],
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3281:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 824,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3281:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3281:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 819,
                        "name": "lendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "3240:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                          "typeString": "contract ILendingProtocol"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1933,
                      "src": "3240:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address) external"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3240:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "3240:55:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 831,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3322:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 832,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3330:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3330:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "3342:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 830,
                      "name": "TokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "3310:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3310:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "EmitStatement",
                  "src": "3305:45:8"
                }
              ]
            },
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "2056:125:8",
              "text": "@notice Stake _amount of _token\n @param _amount The amount ot stake\n @param _token The address of the token"
            },
            "functionSelector": "0bea440d",
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "2195:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2215:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2207:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2232:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2224:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:33:8"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2249:0:8"
            },
            "scope": 1511,
            "src": "2186:1171:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 953,
              "nodeType": "Block",
              "src": "3500:1039:8",
              "statements": [
                {
                  "assignments": [
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3551:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 953,
                      "src": "3543:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 844,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 852,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 846,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "3561:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 848,
                      "indexExpression": {
                        "id": 847,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "3576:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3561:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 851,
                    "indexExpression": {
                      "expression": {
                        "id": 849,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3584:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3584:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3561:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:52:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 854,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "3613:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3623:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3613:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a205374616b696e672062616c616e636520616c7265616479203021",
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3626:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_91283f15539e460280c4d505106087e8e4f7f6b2a2dfe726d5ffdc184dd7c165",
                          "typeString": "literal_string \"StakingContract: Staking balance already 0!\""
                        },
                        "value": "StakingContract: Staking balance already 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_91283f15539e460280c4d505106087e8e4f7f6b2a2dfe726d5ffdc184dd7c165",
                          "typeString": "literal_string \"StakingContract: Staking balance already 0!\""
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3605:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3605:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "3605:67:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 861,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3737:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3737:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 863,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "3749:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 860,
                      "name": "_updateOneTokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1510,
                      "src": "3714:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3714:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:42:8"
                },
                {
                  "expression": {
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 866,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "3798:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 870,
                        "indexExpression": {
                          "id": 867,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "3813:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3798:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 871,
                      "indexExpression": {
                        "expression": {
                          "id": 868,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3821:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3821:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3798:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3835:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3798:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:38:8"
                },
                {
                  "expression": {
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 875,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3846:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 878,
                      "indexExpression": {
                        "expression": {
                          "id": 876,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3865:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3865:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3846:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 879,
                          "name": "uniqueTokensStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "3879:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 882,
                        "indexExpression": {
                          "expression": {
                            "id": 880,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3898:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3898:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3879:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3912:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3879:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3846:67:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:67:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 887,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3927:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 890,
                      "indexExpression": {
                        "expression": {
                          "id": 888,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3946:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3946:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3927:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3961:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3927:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "IfStatement",
                  "src": "3923:315:8",
                  "trueBody": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "3964:274:8",
                    "statements": [
                      {
                        "body": {
                          "id": 929,
                          "nodeType": "Block",
                          "src": "4023:205:8",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 904,
                                    "name": "stakers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "4045:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 906,
                                  "indexExpression": {
                                    "id": 905,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 894,
                                    "src": "4053:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4045:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 907,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4059:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 908,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4059:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4045:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 928,
                              "nodeType": "IfStatement",
                              "src": "4041:173:8",
                              "trueBody": {
                                "id": 927,
                                "nodeType": "Block",
                                "src": "4071:143:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 919,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 910,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "4093:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 912,
                                        "indexExpression": {
                                          "id": 911,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 894,
                                          "src": "4101:1:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4093:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 913,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "4106:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 918,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 917,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 914,
                                              "name": "stakers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 636,
                                              "src": "4114:7:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 915,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "4114:14:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 916,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4131:1:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "4114:18:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4106:27:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4093:40:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 920,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4093:40:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 921,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 636,
                                          "src": "4155:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 923,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "4155:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer)"
                                        }
                                      },
                                      "id": 924,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4155:13:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 925,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4155:13:8"
                                  },
                                  {
                                    "id": 926,
                                    "nodeType": "Break",
                                    "src": "4190:5:8"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 897,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "3998:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 898,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "4002:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4002:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3998:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 930,
                        "initializationExpression": {
                          "assignments": [
                            894
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 894,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3991:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 930,
                              "src": "3983:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 893,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3983:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 896,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3995:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3983:13:8"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4018:3:8",
                            "subExpression": {
                              "id": 901,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "4018:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 903,
                          "nodeType": "ExpressionStatement",
                          "src": "4018:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "3978:250:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 936,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "4386:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 937,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "4394:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 938,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4403:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4403:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 934,
                              "name": "lendingProtocol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "4361:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                                "typeString": "contract ILendingProtocol"
                              }
                            },
                            "id": 935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1945,
                            "src": "4361:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4361:53:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4417:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4361:57:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a207769746864726177206572726f72",
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4fee1f72ce4b003b63152f10d6a4d1c6641114516ccb63493a7cdcbd6ba5aa",
                          "typeString": "literal_string \"StakingContract: withdraw error\""
                        },
                        "value": "StakingContract: withdraw error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4fee1f72ce4b003b63152f10d6a4d1c6641114516ccb63493a7cdcbd6ba5aa",
                          "typeString": "literal_string \"StakingContract: withdraw error\""
                        }
                      ],
                      "id": 933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4340:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:135:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:135:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "4504:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 948,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4512:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4512:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 950,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "4524:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 946,
                      "name": "TokenUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "4490:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4490:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 952,
                  "nodeType": "EmitStatement",
                  "src": "4485:47:8"
                }
              ]
            },
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "3363:84:8",
              "text": "@notice Unstake all _token staked\n @param _token The address of the token"
            },
            "functionSelector": "2d1ad8b8",
            "id": 954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "3461:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3483:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "3475:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3474:16:8"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3500:0:8"
            },
            "scope": 1511,
            "src": "3452:1087:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "4627:352:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4742:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4742:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 958,
                      "name": "_updateTokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "4722:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4722:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "4722:31:8"
                },
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4771:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 987,
                      "src": "4763:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4763:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 969,
                  "initialValue": {
                    "baseExpression": {
                      "id": 965,
                      "name": "tokenToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "4780:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 968,
                    "indexExpression": {
                      "expression": {
                        "id": 966,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4793:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4793:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4780:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4763:41:8"
                },
                {
                  "expression": {
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 970,
                        "name": "tokenToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "4814:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 973,
                      "indexExpression": {
                        "expression": {
                          "id": 971,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4827:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4827:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4814:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4841:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4814:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "4814:28:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 980,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4895:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4895:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 982,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "4907:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 978,
                            "name": "projectToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "4873:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1917",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1866,
                          "src": "4873:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4873:41:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a207472616e73666572206661696c6564",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4928:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5400709f4b0d6d41d4c4fa4d631919afbffecded95a48670ebd60f5f74a3ae3d",
                          "typeString": "literal_string \"StakingContract: transfer failed\""
                        },
                        "value": "StakingContract: transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5400709f4b0d6d41d4c4fa4d631919afbffecded95a48670ebd60f5f74a3ae3d",
                          "typeString": "literal_string \"StakingContract: transfer failed\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4852:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:120:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:120:8"
                }
              ]
            },
            "documentation": {
              "id": 955,
              "nodeType": "StructuredDocumentation",
              "src": "4545:46:8",
              "text": "@notice Send Earned \"ProjectToken\" to user"
            },
            "functionSelector": "4451d89f",
            "id": 988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimToken",
            "nameLocation": "4605:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4615:2:8"
            },
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4627:0:8"
            },
            "scope": 1511,
            "src": "4596:383:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1020,
              "nodeType": "Block",
              "src": "5222:189:8",
              "statements": [
                {
                  "body": {
                    "id": 1016,
                    "nodeType": "Block",
                    "src": "5283:100:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1007,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 639,
                              "src": "5301:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1009,
                            "indexExpression": {
                              "id": 1008,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "5315:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5301:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1010,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "5321:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5301:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1015,
                        "nodeType": "IfStatement",
                        "src": "5297:76:8",
                        "trueBody": {
                          "id": 1014,
                          "nodeType": "Block",
                          "src": "5329:44:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5354:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 995,
                              "id": 1013,
                              "nodeType": "Return",
                              "src": "5347:11:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1000,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "5252:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1001,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "5256:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5256:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5252:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1017,
                  "initializationExpression": {
                    "assignments": [
                      997
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5245:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "5237:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5237:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 999,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5249:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5237:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5278:3:8",
                      "subExpression": {
                        "id": 1004,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "5278:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1006,
                    "nodeType": "ExpressionStatement",
                    "src": "5278:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "5232:151:8"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5399:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 995,
                  "id": 1019,
                  "nodeType": "Return",
                  "src": "5392:12:8"
                }
              ]
            },
            "documentation": {
              "id": 989,
              "nodeType": "StructuredDocumentation",
              "src": "4985:165:8",
              "text": "@notice Check wheter a token is stakable on this contract\n @param _token The address of the token\n @return bool Wheter the token is stakable or not"
            },
            "functionSelector": "dd5b8467",
            "id": 1021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "5164:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5187:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "5179:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5179:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5178:16:8"
            },
            "returnParameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "5216:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5215:6:8"
            },
            "scope": 1511,
            "src": "5155:256:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "5685:324:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1029,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "5699:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1031,
                      "indexExpression": {
                        "id": 1030,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1024,
                        "src": "5718:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5699:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5728:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5699:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1037,
                  "nodeType": "IfStatement",
                  "src": "5695:69:8",
                  "trueBody": {
                    "id": 1036,
                    "nodeType": "Block",
                    "src": "5731:33:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5752:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1028,
                        "id": 1035,
                        "nodeType": "Return",
                        "src": "5745:8:8"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1039,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "5781:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1066,
                      "src": "5773:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1038,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5773:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1041,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5794:1:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5773:22:8"
                },
                {
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "5889:87:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1053,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "5903:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1055,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1024,
                                "src": "5941:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1056,
                                  "name": "allowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "5948:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1058,
                                "indexExpression": {
                                  "id": 1057,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1043,
                                  "src": "5962:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5948:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1054,
                              "name": "getUserSingleTokenValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "5917:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5917:48:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5903:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "5903:62:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1046,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "5858:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1047,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "5862:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5862:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5858:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "initializationExpression": {
                    "assignments": [
                      1043
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5851:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "5843:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5843:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1045,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5855:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5843:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5884:3:8",
                      "subExpression": {
                        "id": 1050,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "5884:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1052,
                    "nodeType": "ExpressionStatement",
                    "src": "5884:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "5838:138:8"
                },
                {
                  "expression": {
                    "id": 1064,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1039,
                    "src": "5992:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1028,
                  "id": 1065,
                  "nodeType": "Return",
                  "src": "5985:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1022,
              "nodeType": "StructuredDocumentation",
              "src": "5417:191:8",
              "text": "@notice Get the total value (in USD) staked by _user\n @param _user The address of the user\n @return totalValue The total value  of the tokens staked on the contract by _user"
            },
            "functionSelector": "af3f5e22",
            "id": 1067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "5622:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5648:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "5640:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5640:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:15:8"
            },
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "5676:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5675:9:8"
            },
            "scope": 1511,
            "src": "5613:396:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "6373:362:8",
              "statements": [
                {
                  "assignments": [
                    1078,
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1078,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "6392:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6384:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1077,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6384:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "6407:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6399:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1079,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6399:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1084,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1082,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "6433:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1081,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "6419:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6419:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6383:57:8"
                },
                {
                  "assignments": [
                    1086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1086,
                      "mutability": "mutable",
                      "name": "tokenValue",
                      "nameLocation": "6473:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6465:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1085,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6465:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1101,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1087,
                                    "name": "stakingBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 645,
                                    "src": "6488:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 1089,
                                  "indexExpression": {
                                    "id": 1088,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "6503:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6488:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1091,
                                "indexExpression": {
                                  "id": 1090,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1070,
                                  "src": "6511:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6488:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1092,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1078,
                                "src": "6520:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6488:37:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1094,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6487:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6542:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 1096,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "6546:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6542:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1098,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6541:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6487:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1100,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6486:70:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6465:91:8"
                },
                {
                  "expression": {
                    "id": 1102,
                    "name": "tokenValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1086,
                    "src": "6573:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1076,
                  "id": 1103,
                  "nodeType": "Return",
                  "src": "6566:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1068,
              "nodeType": "StructuredDocumentation",
              "src": "6015:231:8",
              "text": "@notice Get the value (in USD) of _token staked by _user\n @param _user The address of the user\n @param _token The address of the token\n @return tokenValue The value of _token staked on the contract by _user"
            },
            "functionSelector": "276b11da",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "6260:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6292:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "6284:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6284:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6307:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "6299:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6299:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6283:31:8"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "6360:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6360:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6359:9:8"
            },
            "scope": 1511,
            "src": "6251:484:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "7068:341:8",
              "statements": [
                {
                  "assignments": [
                    1116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1116,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "7086:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "7078:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7078:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1117,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "7105:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1119,
                    "indexExpression": {
                      "id": 1118,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "7127:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7105:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7078:56:8"
                },
                {
                  "assignments": [
                    1123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1123,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "7166:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "7144:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1998",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 1122,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1121,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1998,
                          "src": "7144:21:8"
                        },
                        "referencedDeclaration": 1998,
                        "src": "7144:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1998",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1127,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1125,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1116,
                        "src": "7213:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1124,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1998,
                      "src": "7178:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1998_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7178:61:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1998",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7144:95:8"
                },
                {
                  "assignments": [
                    null,
                    1129,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1129,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "7259:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "7252:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1128,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7252:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 1133,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1130,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "7274:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1998",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1997,
                      "src": "7274:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7274:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7249:52:8"
                },
                {
                  "assignments": [
                    1135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1135,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "7319:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "7311:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7311:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1142,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1138,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "7338:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1998",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1959,
                          "src": "7338:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7338:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7330:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7330:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7311:48:8"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 1145,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1129,
                            "src": "7385:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7377:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1143,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7377:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7377:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1147,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "7393:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1148,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7376:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1114,
                  "id": 1149,
                  "nodeType": "Return",
                  "src": "7369:33:8"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "6741:216:8",
              "text": "@notice Get the value (in USD) of a _token and its decimals()\n @param _token The address of the token\n @return price The value of _token\n @return decimals The number of decimals of the _token"
            },
            "functionSelector": "f1c5d6c2",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "6971:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6993:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "6985:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6985:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6984:16:8"
            },
            "returnParameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "7046:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7046:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "7055:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7055:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7045:18:8"
            },
            "scope": 1511,
            "src": "6962:447:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1167,
              "nodeType": "Block",
              "src": "7759:59:8",
              "statements": [
                {
                  "expression": {
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1161,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "7769:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1163,
                      "indexExpression": {
                        "id": 1162,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "7791:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7769:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1164,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "7801:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7769:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "7769:42:8"
                }
              ]
            },
            "documentation": {
              "id": 1152,
              "nodeType": "StructuredDocumentation",
              "src": "7433:218:8",
              "text": "@notice Set the price feed address for an ERC20 token\n @dev Gets call automatically when adding new token\n @param _token The address of the token\n @param _priceFeed The address of the pricefeed"
            },
            "functionSelector": "877dd39d",
            "id": 1168,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1158,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1558,
                  "src": "7745:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7745:9:8"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "7665:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7694:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "7686:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7686:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "7710:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "7702:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7702:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7685:36:8"
            },
            "returnParameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7759:0:8"
            },
            "scope": 1511,
            "src": "7656:162:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1218,
              "nodeType": "Block",
              "src": "8128:324:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1183,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "8157:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1180,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "8138:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "8138:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8138:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "8138:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1193,
                                "name": "lendingProtocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "8226:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                                  "typeString": "contract ILendingProtocol"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                                  "typeString": "contract ILendingProtocol"
                                }
                              ],
                              "id": 1192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8218:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1191,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8218:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8218:24:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8249:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1196,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8249:7:8",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1195,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8244:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8244:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8244:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1188,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "8202:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1187,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1917,
                              "src": "8195:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1917_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8195:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1917",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1886,
                          "src": "8195:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8195:67:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67436f6e74726163743a20617070726f76652829206661696c6564",
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8276:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                          "typeString": "literal_string \"StakingContract: approve() failed\""
                        },
                        "value": "StakingContract: approve() failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                          "typeString": "literal_string \"StakingContract: approve() failed\""
                        }
                      ],
                      "id": 1186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8174:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "8174:147:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1205,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "8352:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1206,
                        "name": "_pricefeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "8360:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1204,
                      "name": "setPriceFeedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "8331:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8331:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1208,
                  "nodeType": "ExpressionStatement",
                  "src": "8331:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1210,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "8397:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1211,
                        "name": "_yield",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "8405:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1209,
                      "name": "updateYieldRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1272,
                      "src": "8381:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8381:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "8381:31:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1215,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "8438:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1214,
                      "name": "TokenAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "8427:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8427:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1217,
                  "nodeType": "EmitStatement",
                  "src": "8422:23:8"
                }
              ]
            },
            "documentation": {
              "id": 1169,
              "nodeType": "StructuredDocumentation",
              "src": "7824:172:8",
              "text": "@notice Add a new _token to the list of stakable token\n @param _token The address of the token\n @param _pricefeed The address for the price feed of _token"
            },
            "functionSelector": "00367622",
            "id": 1219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1178,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1177,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1558,
                  "src": "8118:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "8118:9:8"
              }
            ],
            "name": "addAllowedTokens",
            "nameLocation": "8010:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8044:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1219,
                  "src": "8036:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8036:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "_pricefeed",
                  "nameLocation": "8068:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1219,
                  "src": "8060:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8060:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "_yield",
                  "nameLocation": "8096:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1219,
                  "src": "8088:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8088:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8026:82:8"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8128:0:8"
            },
            "scope": 1511,
            "src": "8001:451:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "8702:478:8",
              "statements": [
                {
                  "body": {
                    "id": 1258,
                    "nodeType": "Block",
                    "src": "8905:143:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1240,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 645,
                                "src": "8923:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1242,
                              "indexExpression": {
                                "id": 1241,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "8938:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8923:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1246,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1243,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 636,
                                "src": "8946:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1245,
                              "indexExpression": {
                                "id": 1244,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1230,
                                "src": "8954:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8946:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8923:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8960:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8923:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1257,
                        "nodeType": "IfStatement",
                        "src": "8919:119:8",
                        "trueBody": {
                          "id": 1256,
                          "nodeType": "Block",
                          "src": "8963:75:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1250,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 636,
                                      "src": "9004:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1252,
                                    "indexExpression": {
                                      "id": 1251,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1230,
                                      "src": "9012:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9004:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1253,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1222,
                                    "src": "9016:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1249,
                                  "name": "_updateOneTokenToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1510,
                                  "src": "8981:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address)"
                                  }
                                },
                                "id": 1254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8981:42:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1255,
                              "nodeType": "ExpressionStatement",
                              "src": "8981:42:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1233,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "8880:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1234,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "8884:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8884:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8880:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1259,
                  "initializationExpression": {
                    "assignments": [
                      1230
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8873:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1259,
                        "src": "8865:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8865:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1232,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8877:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8865:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8900:3:8",
                      "subExpression": {
                        "id": 1237,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1230,
                        "src": "8900:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1239,
                    "nodeType": "ExpressionStatement",
                    "src": "8900:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "8860:188:8"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1260,
                        "name": "tokenToYieldRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "9080:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1262,
                      "indexExpression": {
                        "id": 1261,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "9097:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9080:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1263,
                      "name": "_newYieldRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "9107:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9080:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "9080:40:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1267,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "9151:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1268,
                        "name": "_newYieldRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1224,
                        "src": "9159:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1266,
                      "name": "YieldRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "9135:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9135:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "EmitStatement",
                  "src": "9130:43:8"
                }
              ]
            },
            "documentation": {
              "id": 1220,
              "nodeType": "StructuredDocumentation",
              "src": "8506:90:8",
              "text": "@param _token The address of the token\n @param _newYieldRate The new yield rate"
            },
            "functionSelector": "f37a55e4",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1226,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1558,
                  "src": "8688:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "8688:9:8"
              }
            ],
            "name": "updateYieldRate",
            "nameLocation": "8610:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8634:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "8626:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8626:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1224,
                  "mutability": "mutable",
                  "name": "_newYieldRate",
                  "nameLocation": "8650:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "8642:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8642:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8625:39:8"
            },
            "returnParameters": {
              "id": 1228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8702:0:8"
            },
            "scope": 1511,
            "src": "8601:579:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "9413:1101:8",
              "statements": [
                {
                  "assignments": [
                    1281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "oldProtocol",
                      "nameLocation": "9431:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1401,
                      "src": "9423:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9423:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1284,
                        "name": "lendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "9453:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                          "typeString": "contract ILendingProtocol"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                          "typeString": "contract ILendingProtocol"
                        }
                      ],
                      "id": 1283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9445:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1282,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9445:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9445:24:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9423:46:8"
                },
                {
                  "expression": {
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1287,
                      "name": "lendingProtocol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "9479:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1289,
                          "name": "_newLendingProtocol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1275,
                          "src": "9514:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1288,
                        "name": "ILendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "9497:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingProtocol_$1952_$",
                          "typeString": "type(contract ILendingProtocol)"
                        }
                      },
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9497:37:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                        "typeString": "contract ILendingProtocol"
                      }
                    },
                    "src": "9479:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                      "typeString": "contract ILendingProtocol"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "9479:55:8"
                },
                {
                  "body": {
                    "id": 1321,
                    "nodeType": "Block",
                    "src": "9595:247:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1311,
                                  "name": "_newLendingProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1275,
                                  "src": "9688:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1314,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9734:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1313,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9734:7:8",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        }
                                      ],
                                      "id": 1312,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "9729:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9729:13:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint256",
                                      "typeString": "type(uint256)"
                                    }
                                  },
                                  "id": 1316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "9729:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 1306,
                                        "name": "allowedTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 639,
                                        "src": "9641:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 1308,
                                      "indexExpression": {
                                        "id": 1307,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1294,
                                        "src": "9655:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9641:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1305,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1917,
                                    "src": "9634:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$1917_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9634:24:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1917",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1886,
                                "src": "9634:32:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9634:130:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b696e67436f6e74726163743a20617070726f76652829206661696c6564",
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9782:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                                "typeString": "literal_string \"StakingContract: approve() failed\""
                              },
                              "value": "StakingContract: approve() failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_864254f94ae6eed3fa90535c395b8b7c1e900fc210ca075df622108cb68f1a7e",
                                "typeString": "literal_string \"StakingContract: approve() failed\""
                              }
                            ],
                            "id": 1304,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9609:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9609:222:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1320,
                        "nodeType": "ExpressionStatement",
                        "src": "9609:222:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1297,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "9564:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1298,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "9568:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9568:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9564:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1322,
                  "initializationExpression": {
                    "assignments": [
                      1294
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1294,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9557:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "9549:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9549:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1296,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9561:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9549:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9590:3:8",
                      "subExpression": {
                        "id": 1301,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1294,
                        "src": "9590:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1303,
                    "nodeType": "ExpressionStatement",
                    "src": "9590:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "9544:298:8"
                },
                {
                  "body": {
                    "id": 1394,
                    "nodeType": "Block",
                    "src": "9935:502:8",
                    "statements": [
                      {
                        "assignments": [
                          1335
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1335,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "9957:5:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1394,
                            "src": "9949:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1334,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9949:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1339,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1336,
                            "name": "allowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "9965:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1338,
                          "indexExpression": {
                            "id": 1337,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "9979:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9965:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9949:32:8"
                      },
                      {
                        "assignments": [
                          1341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1341,
                            "mutability": "mutable",
                            "name": "totalStaked",
                            "nameLocation": "10003:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1394,
                            "src": "9995:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1340,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9995:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1343,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10017:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9995:23:8"
                      },
                      {
                        "body": {
                          "id": 1369,
                          "nodeType": "Block",
                          "src": "10077:129:8",
                          "statements": [
                            {
                              "assignments": [
                                1356
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1356,
                                  "mutability": "mutable",
                                  "name": "staker",
                                  "nameLocation": "10103:6:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1369,
                                  "src": "10095:14:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1355,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10095:7:8",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1360,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1357,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 636,
                                  "src": "10112:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1359,
                                "indexExpression": {
                                  "id": 1358,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1345,
                                  "src": "10120:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10112:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10095:27:8"
                            },
                            {
                              "expression": {
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1361,
                                  "name": "totalStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1341,
                                  "src": "10140:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1362,
                                      "name": "stakingBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 645,
                                      "src": "10155:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1364,
                                    "indexExpression": {
                                      "id": 1363,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1335,
                                      "src": "10170:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10155:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1366,
                                  "indexExpression": {
                                    "id": 1365,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1356,
                                    "src": "10177:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10155:29:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10140:44:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1368,
                              "nodeType": "ExpressionStatement",
                              "src": "10140:44:8"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1348,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "10052:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1349,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "10056:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10056:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10052:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1370,
                        "initializationExpression": {
                          "assignments": [
                            1345
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1345,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "10045:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1370,
                              "src": "10037:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1344,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10037:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1347,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10049:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10037:13:8"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10072:3:8",
                            "subExpression": {
                              "id": 1352,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1345,
                              "src": "10072:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1354,
                          "nodeType": "ExpressionStatement",
                          "src": "10072:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "10032:174:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1375,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1335,
                              "src": "10275:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1376,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "10298:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1379,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10335:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingContract_$1511",
                                    "typeString": "contract StakingContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingContract_$1511",
                                    "typeString": "contract StakingContract"
                                  }
                                ],
                                "id": 1378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10327:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1377,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10327:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10327:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1372,
                                  "name": "oldProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "10236:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1371,
                                "name": "ILendingProtocol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1952,
                                "src": "10219:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingProtocol_$1952_$",
                                  "typeString": "type(contract ILendingProtocol)"
                                }
                              },
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10219:29:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                                "typeString": "contract ILendingProtocol"
                              }
                            },
                            "id": 1374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1945,
                            "src": "10219:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10219:135:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "10219:135:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1386,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1335,
                              "src": "10392:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1387,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "10399:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1390,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10420:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingContract_$1511",
                                    "typeString": "contract StakingContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingContract_$1511",
                                    "typeString": "contract StakingContract"
                                  }
                                ],
                                "id": 1389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10412:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1388,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10412:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10412:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1383,
                              "name": "lendingProtocol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "10368:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingProtocol_$1952",
                                "typeString": "contract ILendingProtocol"
                              }
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1933,
                            "src": "10368:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address) external"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10368:58:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1393,
                        "nodeType": "ExpressionStatement",
                        "src": "10368:58:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1327,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "9904:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1328,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "9908:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9908:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9904:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1395,
                  "initializationExpression": {
                    "assignments": [
                      1324
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1324,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9897:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "9889:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1323,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9889:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1326,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9901:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9889:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9930:3:8",
                      "subExpression": {
                        "id": 1331,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "9930:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1333,
                    "nodeType": "ExpressionStatement",
                    "src": "9930:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "9884:553:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1397,
                        "name": "_newLendingProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "10474:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1398,
                        "name": "oldProtocol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "10495:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1396,
                      "name": "LendingProtocolChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "10451:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10451:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1400,
                  "nodeType": "EmitStatement",
                  "src": "10446:61:8"
                }
              ]
            },
            "documentation": {
              "id": 1273,
              "nodeType": "StructuredDocumentation",
              "src": "9186:123:8",
              "text": "@notice Change the lending protocol\n @param _newLendingProtocol The address of the new lending protocol contract"
            },
            "functionSelector": "2b215124",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1277,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1558,
                  "src": "9399:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "9399:9:8"
              }
            ],
            "name": "changeLendingProtocol",
            "nameLocation": "9323:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "_newLendingProtocol",
                  "nameLocation": "9353:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "9345:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9345:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9344:29:8"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9413:0:8"
            },
            "scope": 1511,
            "src": "9314:1200:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1439,
              "nodeType": "Block",
              "src": "10724:253:8",
              "statements": [
                {
                  "body": {
                    "id": 1437,
                    "nodeType": "Block",
                    "src": "10818:153:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1419,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 645,
                                "src": "10836:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1423,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 1420,
                                  "name": "allowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 639,
                                  "src": "10851:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1422,
                                "indexExpression": {
                                  "id": 1421,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1409,
                                  "src": "10865:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10851:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10836:32:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1425,
                            "indexExpression": {
                              "id": 1424,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "10869:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10836:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10878:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10836:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1436,
                        "nodeType": "IfStatement",
                        "src": "10832:129:8",
                        "trueBody": {
                          "id": 1435,
                          "nodeType": "Block",
                          "src": "10881:80:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1429,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1405,
                                    "src": "10922:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1430,
                                      "name": "allowedTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 639,
                                      "src": "10929:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1432,
                                    "indexExpression": {
                                      "id": 1431,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1409,
                                      "src": "10943:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10929:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1428,
                                  "name": "_updateOneTokenToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1510,
                                  "src": "10899:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address)"
                                  }
                                },
                                "id": 1433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10899:47:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1434,
                              "nodeType": "ExpressionStatement",
                              "src": "10899:47:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1412,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "10787:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1413,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "10791:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10791:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10787:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1438,
                  "initializationExpression": {
                    "assignments": [
                      1409
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1409,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10780:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1438,
                        "src": "10772:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10772:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1411,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10784:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10772:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10813:3:8",
                      "subExpression": {
                        "id": 1416,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1409,
                        "src": "10813:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1418,
                    "nodeType": "ExpressionStatement",
                    "src": "10813:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "10767:204:8"
                }
              ]
            },
            "documentation": {
              "id": 1403,
              "nodeType": "StructuredDocumentation",
              "src": "10547:119:8",
              "text": "@notice Update the tokenToClaim variable of _user for all token staked\n @param _user The address of the user"
            },
            "id": 1440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTokenToClaim",
            "nameLocation": "10680:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "10708:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "10700:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10700:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10699:15:8"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10724:0:8"
            },
            "scope": 1511,
            "src": "10671:306:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "11216:562:8",
              "statements": [
                {
                  "assignments": [
                    1449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1449,
                      "mutability": "mutable",
                      "name": "unrealisedYieldTime",
                      "nameLocation": "11234:19:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "11226:27:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11226:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1455,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1450,
                        "name": "userToTokenToUnrealisedYieldTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "11256:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1452,
                      "indexExpression": {
                        "id": 1451,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "11289:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11256:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1454,
                    "indexExpression": {
                      "id": 1453,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "11309:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11256:69:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11226:99:8"
                },
                {
                  "expression": {
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1456,
                          "name": "userToTokenToUnrealisedYieldTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "11335:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1459,
                        "indexExpression": {
                          "id": 1457,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1443,
                          "src": "11368:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11335:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1460,
                      "indexExpression": {
                        "id": 1458,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "11375:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11335:47:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1461,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11385:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11385:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11335:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "11335:65:8"
                },
                {
                  "assignments": [
                    1466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1466,
                      "mutability": "mutable",
                      "name": "valueStaked",
                      "nameLocation": "11419:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "11411:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11411:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1471,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1468,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "11457:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1469,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "11464:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1467,
                      "name": "getUserSingleTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "11433:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11433:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11411:60:8"
                },
                {
                  "assignments": [
                    1473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1473,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "11489:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "11481:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11481:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1474,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11496:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11496:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1476,
                      "name": "unrealisedYieldTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "11514:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11496:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11481:52:8"
                },
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "mutability": "mutable",
                      "name": "day",
                      "nameLocation": "11551:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "11543:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11543:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1482,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11557:6:8",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11543:20:8"
                },
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "tokenYieldRate",
                      "nameLocation": "11581:14:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "11573:22:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11573:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1488,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1485,
                      "name": "tokenToYieldRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "11598:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1487,
                    "indexExpression": {
                      "id": 1486,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "11615:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11598:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11573:49:8"
                },
                {
                  "assignments": [
                    1490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1490,
                      "mutability": "mutable",
                      "name": "additionalYield",
                      "nameLocation": "11640:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1509,
                      "src": "11632:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11632:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1491,
                                    "name": "valueStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1466,
                                    "src": "11660:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1492,
                                    "name": "time",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1473,
                                    "src": "11674:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11660:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1494,
                                  "name": "tokenYieldRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1484,
                                  "src": "11681:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11660:35:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1496,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11659:37:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 1497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11711:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "11659:56:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1499,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11658:58:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1500,
                      "name": "day",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "11719:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11658:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11632:90:8"
                },
                {
                  "expression": {
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1503,
                        "name": "tokenToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "11733:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1505,
                      "indexExpression": {
                        "id": 1504,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "11746:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11733:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1506,
                      "name": "additionalYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "11756:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11733:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "11733:38:8"
                }
              ]
            },
            "documentation": {
              "id": 1441,
              "nodeType": "StructuredDocumentation",
              "src": "10983:156:8",
              "text": "@notice Update the tokenToClaim variable of _user for _token\n @param _user The address of the user\n @param _token The address of the token"
            },
            "id": 1510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOneTokenToClaim",
            "nameLocation": "11153:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "11184:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "11176:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11176:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "11199:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "11191:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11191:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11175:31:8"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11216:0:8"
            },
            "scope": 1511,
            "src": "11144:634:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1512,
        "src": "291:11489:8",
        "usedErrors": []
      }
    ],
    "src": "32:11749:8"
  },
  "bytecode": "",
  "bytecodeSha1": "54fde36097def9ba4b215ccb255c290a6ac7bc6f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "StakingContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "73": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "4": {},
      "5": {},
      "8": {
        "StakingContract._updateTokenToClaim": {
          "72": [
            10836,
            10879,
            false
          ]
        },
        "StakingContract.addAllowedTokens": {
          "60": [
            8195,
            8262,
            true
          ]
        },
        "StakingContract.changeLendingProtocol": {
          "65": [
            9634,
            9764,
            true
          ]
        },
        "StakingContract.claimToken": {
          "69": [
            4873,
            4914,
            true
          ]
        },
        "StakingContract.stakeTokens": {
          "61": [
            2295,
            2306,
            true
          ],
          "62": [
            2388,
            2410,
            true
          ],
          "63": [
            2629,
            2692,
            true
          ],
          "64": [
            3106,
            3141,
            false
          ]
        },
        "StakingContract.tokenIsAllowed": {
          "70": [
            5301,
            5327,
            false
          ]
        },
        "StakingContract.unstakeTokens": {
          "66": [
            3613,
            3624,
            true
          ],
          "67": [
            4045,
            4069,
            false
          ],
          "68": [
            4361,
            4418,
            true
          ]
        },
        "StakingContract.updateYieldRate": {
          "71": [
            8923,
            8961,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "58": [
            2131,
            2148
          ],
          "59": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "38": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "48": [
            1926,
            1999
          ],
          "49": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "4": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "5": {},
      "8": {
        "StakingContract._updateOneTokenToClaim": {
          "54": [
            11335,
            11400
          ],
          "55": [
            11733,
            11771
          ]
        },
        "StakingContract._updateTokenToClaim": {
          "56": [
            10899,
            10946
          ],
          "57": [
            10813,
            10816
          ]
        },
        "StakingContract.addAllowedTokens": {
          "2": [
            8138,
            8164
          ],
          "3": [
            8174,
            8321
          ],
          "4": [
            8331,
            8371
          ],
          "5": [
            8381,
            8412
          ],
          "6": [
            8422,
            8445
          ]
        },
        "StakingContract.changeLendingProtocol": {
          "16": [
            9479,
            9534
          ],
          "17": [
            9609,
            9831
          ],
          "18": [
            9590,
            9593
          ],
          "19": [
            10140,
            10184
          ],
          "20": [
            10072,
            10075
          ],
          "21": [
            10219,
            10354
          ],
          "22": [
            10368,
            10426
          ],
          "23": [
            9930,
            9933
          ],
          "24": [
            10446,
            10507
          ]
        },
        "StakingContract.claimToken": {
          "35": [
            4722,
            4753
          ],
          "36": [
            4814,
            4842
          ],
          "37": [
            4852,
            4972
          ]
        },
        "StakingContract.getTokenValue": {
          "47": [
            7369,
            7402
          ]
        },
        "StakingContract.getUserTotalValue": {
          "40": [
            5745,
            5753
          ],
          "41": [
            5903,
            5965
          ],
          "42": [
            5884,
            5887
          ],
          "43": [
            5985,
            6002
          ]
        },
        "StakingContract.setPriceFeedContract": {
          "39": [
            7769,
            7811
          ]
        },
        "StakingContract.stakeTokens": {
          "7": [
            2287,
            2357
          ],
          "8": [
            2367,
            2482
          ],
          "9": [
            2556,
            2598
          ],
          "10": [
            2608,
            2756
          ],
          "11": [
            2826,
            2893
          ],
          "12": [
            2914,
            3019
          ],
          "13": [
            3157,
            3181
          ],
          "14": [
            3240,
            3295
          ],
          "15": [
            3305,
            3350
          ]
        },
        "StakingContract.tokenIsAllowed": {
          "44": [
            5347,
            5358
          ],
          "45": [
            5278,
            5281
          ],
          "46": [
            5392,
            5404
          ]
        },
        "StakingContract.unstakeTokens": {
          "25": [
            3605,
            3672
          ],
          "26": [
            3714,
            3756
          ],
          "27": [
            3798,
            3836
          ],
          "28": [
            3846,
            3913
          ],
          "29": [
            4093,
            4133
          ],
          "30": [
            4155,
            4168
          ],
          "31": [
            4190,
            4195
          ],
          "32": [
            4018,
            4021
          ],
          "33": [
            4340,
            4475
          ],
          "34": [
            4485,
            4532
          ]
        },
        "StakingContract.updateYieldRate": {
          "50": [
            8981,
            9023
          ],
          "51": [
            8900,
            8903
          ],
          "52": [
            9080,
            9120
          ],
          "53": [
            9130,
            9173
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "ILendingProtocol",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "291:11489:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8001:451;;;;;;:::i;:::-;;:::i;:::-;;2186:1171;;;;;;:::i;:::-;;:::i;6251:484::-;;;;;;:::i;:::-;;:::i;:::-;;;1195:25:10;;;1183:2;1168:18;6251:484:8;;;;;;;;704:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;704:56:8;;;;;;-1:-1:-1;;;;;1586:32:10;;;1568:51;;1556:2;1541:18;704:56:8;1422:203:10;468:69:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9314:1200;;;;;;:::i;:::-;;:::i;3452:1087::-;;;;;;:::i;:::-;;:::i;4596:383::-;;;:::i;333:26::-;;;;;-1:-1:-1;;;;;333:26:8;;;1120:51;;;;;;:::i;:::-;;;;;;;;;;;;;;395:30;;;;;;:::i;:::-;;:::i;1605:92:0:-;;;:::i;1323:39:8:-;;;;;-1:-1:-1;;;;;1323:39:8;;;7656:162;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;5613:396:8;;;;;;:::i;:::-;;:::i;610:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;821:47;;;;;;:::i;:::-;;;;;;;;;;;;;;1221:95;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5155:256;;;;;;:::i;:::-;;:::i;:::-;;;2436:14:10;;2429:22;2411:41;;2399:2;2384:18;5155:256:8;2271:187:10;6962:447:8;;;;;;:::i;:::-;;:::i;:::-;;;;2637:25:10;;;2693:2;2678:18;;2671:34;;;;2610:18;6962:447:8;2463:248:10;1846:189:0;;;;;;:::i;:::-;;:::i;8601:579:8:-;;;;;;:::i;:::-;;:::i;365:24::-;;;;;;:::i;:::-;;:::i;8001:451::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;8138:13:8::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;8138:26:8;;;;;::::1;::::0;;-1:-1:-1;;;;;;8138:26:8::1;-1:-1:-1::0;;;;;8138:26:8;;::::1;::::0;;::::1;::::0;;;8226:15:::1;::::0;8195:67:::1;::::0;-1:-1:-1;;;8195:67:8;;8226:15;::::1;8195:67;::::0;::::1;3510:51:10::0;-1:-1:-1;;3577:18:10;;;3570:34;8138:26:8;8195:22:::1;::::0;3483:18:10;;8195:67:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8174:147;;;;-1:-1:-1::0;;;8174:147:8::1;;;;;;;:::i;:::-;8331:40;8352:6;8360:10;8331:20;:40::i;:::-;8381:31;8397:6;8405;8381:15;:31::i;:::-;8427:18;::::0;-1:-1:-1;;;;;8427:18:8;::::1;::::0;::::1;::::0;;;::::1;8001:451:::0;;;:::o;2186:1171::-;2305:1;2295:7;:11;2287:70;;;;-1:-1:-1;;;2287:70:8;;4501:2:10;2287:70:8;;;4483:21:10;4540:2;4520:18;;;4513:30;4579:34;4559:18;;;4552:62;-1:-1:-1;;;4630:18:10;;;4623:44;4684:19;;2287:70:8;4299:410:10;2287:70:8;2388:22;2403:6;2388:14;:22::i;:::-;2367:115;;;;-1:-1:-1;;;2367:115:8;;4916:2:10;2367:115:8;;;4898:21:10;4955:2;4935:18;;;4928:30;4994:34;4974:18;;;4967:62;-1:-1:-1;;;5045:18:10;;;5038:44;5099:19;;2367:115:8;4714:410:10;2367:115:8;2556:42;2579:10;2591:6;2556:22;:42::i;:::-;2629:63;;-1:-1:-1;;;2629:63:8;;2657:10;2629:63;;;5369:34:10;2677:4:8;5419:18:10;;;5412:43;5471:18;;;5464:34;;;-1:-1:-1;;;;;2629:27:8;;;;;5304:18:10;;2629:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2608:148;;;;-1:-1:-1;;;2608:148:8;;5711:2:10;2608:148:8;;;5693:21:10;5750:2;5730:18;;;5723:30;5789:34;5769:18;;;5762:62;-1:-1:-1;;;5840:18:10;;;5833:36;5886:19;;2608:148:8;5509:402:10;2608:148:8;-1:-1:-1;;;;;2771:22:8;;;;;;:14;:22;;;;;;;;2794:10;2771:34;;;;;;;;2767:137;;2878:10;2859:30;;;;:18;:30;;;;;;:34;;2892:1;2859:34;:::i;:::-;2845:10;2826:30;;;;:18;:30;;;;;:67;2767:137;-1:-1:-1;;;;;2963:22:8;;;;;;:14;:22;;;;;;;;2986:10;2963:34;;;;;;;;:56;;3012:7;;2963:56;:::i;:::-;-1:-1:-1;;;;;2914:22:8;;;;;;:14;:22;;;;;;;;2937:10;2914:34;;;;;;;:105;;;;3106:18;:30;;;;3140:1;3106:35;3102:90;;;3157:7;:24;;;;;;;-1:-1:-1;3157:24:8;;;;;;;;-1:-1:-1;;;;;;3157:24:8;3170:10;3157:24;;;3102:90;3240:15;;:55;;-1:-1:-1;;;3240:55:8;;-1:-1:-1;;;;;3240:15:8;;;;:23;;:55;;3264:6;;3272:7;;3289:4;;3240:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3310:40:8;;1195:25:10;;;3330:10:8;;-1:-1:-1;;;;;;3310:40:8;;;-1:-1:-1;3310:40:8;;1183:2:10;1168:18;3310:40:8;;;;;;;;2186:1171;;:::o;6251:484::-;6360:7;6384:13;6399:16;6419:21;6433:6;6419:13;:21::i;:::-;6383:57;;-1:-1:-1;6383:57:8;-1:-1:-1;6465:18:8;6542:12;6383:57;6542:2;:12;:::i;:::-;-1:-1:-1;;;;;6488:22:8;;;;;;;:14;:22;;;;;;;;:29;;;;;;;;;;:37;;6520:5;;6488:37;:::i;:::-;6487:68;;;;:::i;:::-;6465:91;-1:-1:-1;;;;6251:484:8;;;;;:::o;9314:1200::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;9453:15:8::1;::::0;;-1:-1:-1;;;;;9479:55:8;;::::1;-1:-1:-1::0;;;;;;9479:55:8;::::1;;::::0;;;9453:15:::1;9423:19;9544:298;9568:13;:20:::0;9564:24;::::1;9544:298;;;9641:13;9655:1;9641:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;9634:130:::1;::::0;-1:-1:-1;;;9634:130:8;;-1:-1:-1;;;;;3528:32:10;;;9634:130:8::1;::::0;::::1;3510:51:10::0;-1:-1:-1;;3577:18:10;;;3570:34;9641:16:8;;::::1;::::0;9634:32:::1;::::0;3483:18:10;;9634:130:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9609:222;;;;-1:-1:-1::0;;;9609:222:8::1;;;;;;;:::i;:::-;9590:3:::0;::::1;::::0;::::1;:::i;:::-;;;;9544:298;;;;9889:9;9884:553;9908:13;:20:::0;9904:24;::::1;9884:553;;;9949:13;9965;9979:1;9965:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;9965:16:8::1;::::0;-1:-1:-1;9965:16:8;10032:174:::1;10056:7;:14:::0;10052:18;::::1;10032:174;;;10095:14;10112:7;10120:1;10112:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;10155:21:8;;::::1;::::0;;:14:::1;:21:::0;;;;;;10112:10;;;::::1;10155:29:::0;;;;;;;;;10112:10;;-1:-1:-1;10140:44:8::1;::::0;;::::1;:::i;:::-;;;10077:129;10072:3;;;;;:::i;:::-;;;;10032:174;;;-1:-1:-1::0;10219:135:8::1;::::0;-1:-1:-1;;;10219:135:8;;-1:-1:-1;;;;;10219:38:8;::::1;::::0;::::1;::::0;:135:::1;::::0;10275:5;;10298:11;;10335:4:::1;::::0;10219:135:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10368:15:8::1;::::0;:58:::1;::::0;-1:-1:-1;;;10368:58:8;;-1:-1:-1;;;;;10368:15:8;;::::1;::::0;:23:::1;::::0;:58:::1;::::0;10392:5;;10399:11;;10420:4:::1;::::0;10368:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9935:502;;9930:3;;;;;:::i;:::-;;;;9884:553;;;-1:-1:-1::0;10451:56:8::1;::::0;;-1:-1:-1;;;;;9021:15:10;;;9003:34;;9073:15;;9068:2;9053:18;;9046:43;10451:56:8::1;::::0;8938:18:10;10451:56:8::1;;;;;;;9413:1101;9314:1200:::0;:::o;3452:1087::-;-1:-1:-1;;;;;3561:22:8;;3543:15;3561:22;;;:14;:22;;;;;;;;3584:10;3561:34;;;;;;;;3613:11;3605:67;;;;-1:-1:-1;;;3605:67:8;;9302:2:10;3605:67:8;;;9284:21:10;9341:2;9321:18;;;9314:30;9380:34;9360:18;;;9353:62;-1:-1:-1;;;9431:18:10;;;9424:41;9482:19;;3605:67:8;9100:407:10;3605:67:8;3714:42;3737:10;3749:6;3714:22;:42::i;:::-;-1:-1:-1;;;;;3798:22:8;;3835:1;3798:22;;;:14;:22;;;;;;;;3821:10;3798:34;;;;;;;:38;;;3879:18;:30;;;;;;:34;;3912:1;;3879:34;:::i;:::-;3865:10;3846:30;;;;:18;:30;;;;;:67;;;3923:315;;3983:9;3978:250;4002:7;:14;3998:18;;3978:250;;;4059:10;-1:-1:-1;;;;;4045:24:8;:7;4053:1;4045:10;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4045:10:8;:24;4041:173;;;4106:7;4114:14;;:18;;4131:1;;4114:18;:::i;:::-;4106:27;;;;;;;;:::i;:::-;;;;;;;;;;;4093:7;:10;;-1:-1:-1;;;;;4106:27:8;;;;4101:1;;4093:10;;;;;;:::i;:::-;;;;;;;;;:40;;;;;-1:-1:-1;;;;;4093:40:8;;;;;-1:-1:-1;;;;;4093:40:8;;;;;;4155:7;:13;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4155:13:8;;;;;-1:-1:-1;;;;;;4155:13:8;;;;;;4190:5;;4041:173;4018:3;;;;:::i;:::-;;;;3978:250;;;;3923:315;4361:15;;:53;;-1:-1:-1;;;4361:53:8;;4417:1;;-1:-1:-1;;;;;4361:15:8;;:24;;:53;;4386:6;;4394:7;;4403:10;;4361:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;4340:135;;;;-1:-1:-1;;;4340:135:8;;9976:2:10;4340:135:8;;;9958:21:10;10015:2;9995:18;;;9988:30;10054:33;10034:18;;;10027:61;10105:18;;4340:135:8;9774:355:10;4340:135:8;4490:42;;1195:25:10;;;4512:10:8;;-1:-1:-1;;;;;4490:42:8;;;;;1183:2:10;1168:18;4490:42:8;1049:177:10;4596:383:8;4722:31;4742:10;4722:19;:31::i;:::-;4793:10;4763:14;4780:24;;;:12;:24;;;;;;;;4814:28;;;-1:-1:-1;4873:12:8;:41;;-1:-1:-1;;;4873:41:8;;;;;3510:51:10;;;;3577:18;;;3570:34;;;4780:24:8;;-1:-1:-1;;;;;4873:12:8;;;;:21;;3483:18:10;;4873:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4852:120;;;;-1:-1:-1;;;4852:120:8;;10336:2:10;4852:120:8;;;10318:21:10;;;10355:18;;;10348:30;10414:34;10394:18;;;10387:62;10466:18;;4852:120:8;10134:356:10;4852:120:8;4627:352;4596:383::o;395:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;395:30:8;;-1:-1:-1;395:30:8;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;7656:162:8:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7769:29:8;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;7769:42:8::1;::::0;;;::::1;;::::0;;7656:162::o;5613:396::-;-1:-1:-1;;;;;5699:25:8;;5676:7;5699:25;;;:18;:25;;;;;;5695:69;;-1:-1:-1;5752:1:8;;5613:396;-1:-1:-1;5613:396:8:o;5695:69::-;5773:18;5843:9;5838:138;5862:13;:20;5858:24;;5838:138;;;5917:48;5941:5;5948:13;5962:1;5948:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5948:16:8;5917:23;:48::i;:::-;5903:62;;;;:::i;:::-;;-1:-1:-1;5884:3:8;;;;:::i;:::-;;;;5838:138;;;-1:-1:-1;5992:10:8;5613:396;-1:-1:-1;;5613:396:8:o;5155:256::-;5216:4;;5232:151;5256:13;:20;5252:24;;5232:151;;;5321:6;-1:-1:-1;;;;;5301:26:8;:13;5315:1;5301:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5301:16:8;:26;5297:76;;;-1:-1:-1;5354:4:8;;5155:256;-1:-1:-1;;5155:256:8:o;5297:76::-;5278:3;;;;:::i;:::-;;;;5232:151;;;-1:-1:-1;5399:5:8;;5155:256;-1:-1:-1;;5155:256:8:o;6962:447::-;-1:-1:-1;;;;;7105:29:8;;;7046:7;7105:29;;;:21;:29;;;;;;;7274:27;;-1:-1:-1;;;7274:27:8;;;;7046:7;;;;7105:29;;;;;7046:7;;7105:29;;7274:25;;:27;;;;;;;;;;;;;;;7105:29;7274:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7249:52;;;;;;7311:16;7338:9;-1:-1:-1;;;;;7338:18:8;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7385:5;;7330:29;;;;;-1:-1:-1;7385:5:8;;-1:-1:-1;;;;;6962:447:8:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;11637:2:10;1926:73:0::1;::::0;::::1;11619:21:10::0;11676:2;11656:18;;;11649:30;11715:34;11695:18;;;11688:62;-1:-1:-1;;;11766:18:10;;;11759:36;11812:19;;1926:73:0::1;11435:402:10::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;8601:579:8:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;8865:9:8::1;8860:188;8884:7;:14:::0;8880:18;::::1;8860:188;;;-1:-1:-1::0;;;;;8923:22:8;::::1;8960:1;8923:22:::0;;;:14:::1;:22;::::0;;;;8946:7:::1;:10:::0;;8960:1;;8946:7;8954:1;;8946:10;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;8946:10:8::1;8923:34:::0;;;::::1;::::0;;;;;;;;;:38:::1;8919:119;;;8981:42;9004:7;9012:1;9004:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;9004:10:8::1;9016:6:::0;8981:22:::1;:42::i;:::-;8900:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8860:188;;;-1:-1:-1::0;;;;;;9080:24:8;::::1;;::::0;;;:16:::1;:24;::::0;;;;;;:40;;;9135:38;::::1;::::0;::::1;::::0;9107:13;1195:25:10;;1183:2;1168:18;;1049:177;9135:38:8::1;;;;;;;;8601:579:::0;;:::o;365:24::-;;;;;;;;;;;;11144:634;-1:-1:-1;;;;;11256:39:8;;;11226:27;11256:39;;;:32;:39;;;;;;;;:69;;;;;;;;;;;;;11385:15;11335:65;;;11256:69;11433:38;11256:39;:69;11433:23;:38::i;:::-;11411:60;-1:-1:-1;11481:12:8;11496:37;11514:19;11496:15;:37;:::i;:::-;-1:-1:-1;;;;;11598:24:8;;11543:11;11598:24;;;:16;:24;;;;;;11481:52;;-1:-1:-1;11557:6:8;;11598:24;11557:6;11711:4;11598:24;11660:18;11481:52;11660:11;:18;:::i;:::-;:35;;;;:::i;:::-;11659:56;;;;:::i;:::-;11658:64;;;;:::i;:::-;-1:-1:-1;;;;;11733:19:8;;;;;;:12;:19;;;;;:38;;11632:90;;-1:-1:-1;11632:90:8;;11733:19;;;:38;;11632:90;;11733:38;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;11144:634:8:o;10671:306::-;10772:9;10767:204;10791:13;:20;10787:24;;10767:204;;;10878:1;10836:14;:32;10851:13;10865:1;10851:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10851:16:8;;;10836:32;;;;;;;;;;;;;;;:39;;;;;;;;;;;;:43;10832:129;;;10899:47;10922:5;10929:13;10943:1;10929:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;10929:16:8;10899:22;:47::i;:::-;10813:3;;;;:::i;:::-;;;;10767:204;;;;10671:306;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;525:254::-;593:6;601;654:2;642:9;633:7;629:23;625:32;622:52;;;670:1;667;660:12;622:52;706:9;693:23;683:33;;735:38;769:2;758:9;754:18;735:38;:::i;:::-;725:48;;525:254;;;;;:::o;784:260::-;852:6;860;913:2;901:9;892:7;888:23;884:32;881:52;;;929:1;926;919:12;881:52;952:29;971:9;952:29;:::i;:::-;942:39;;1000:38;1034:2;1023:9;1019:18;1000:38;:::i;1231:186::-;1290:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:52;;;1359:1;1356;1349:12;1311:52;1382:29;1401:9;1382:29;:::i;:::-;1372:39;1231:186;-1:-1:-1;;;1231:186:10:o;1853:180::-;1912:6;1965:2;1953:9;1944:7;1940:23;1936:32;1933:52;;;1981:1;1978;1971:12;1933:52;-1:-1:-1;2004:23:10;;1853:180;-1:-1:-1;1853:180:10:o;2716:254::-;2784:6;2792;2845:2;2833:9;2824:7;2820:23;2816:32;2813:52;;;2861:1;2858;2851:12;2813:52;2884:29;2903:9;2884:29;:::i;:::-;2874:39;2960:2;2945:18;;;;2932:32;;-1:-1:-1;;;2716:254:10:o;2975:356::-;3177:2;3159:21;;;3196:18;;;3189:30;3255:34;3250:2;3235:18;;3228:62;3322:2;3307:18;;2975:356::o;3615:277::-;3682:6;3735:2;3723:9;3714:7;3710:23;3706:32;3703:52;;;3751:1;3748;3741:12;3703:52;3783:9;3777:16;3836:5;3829:13;3822:21;3815:5;3812:32;3802:60;;3858:1;3855;3848:12;3897:397;4099:2;4081:21;;;4138:2;4118:18;;;4111:30;4177:34;4172:2;4157:18;;4150:62;-1:-1:-1;;;4243:2:10;4228:18;;4221:31;4284:3;4269:19;;3897:397::o;5916:127::-;5977:10;5972:3;5968:20;5965:1;5958:31;6008:4;6005:1;5998:15;6032:4;6029:1;6022:15;6048:128;6088:3;6119:1;6115:6;6112:1;6109:13;6106:39;;;6125:18;;:::i;:::-;-1:-1:-1;6161:9:10;;6048:128::o;6181:375::-;-1:-1:-1;;;;;6439:15:10;;;6421:34;;6486:2;6471:18;;6464:34;;;;6534:15;;;6529:2;6514:18;;6507:43;6371:2;6356:18;;6181:375::o;6561:422::-;6650:1;6693:5;6650:1;6707:270;6728:7;6718:8;6715:21;6707:270;;;6787:4;6783:1;6779:6;6775:17;6769:4;6766:27;6763:53;;;6796:18;;:::i;:::-;6846:7;6836:8;6832:22;6829:55;;;6866:16;;;;6829:55;6945:22;;;;6905:15;;;;6707:270;;;6711:3;6561:422;;;;;:::o;6988:806::-;7037:5;7067:8;7057:80;;-1:-1:-1;7108:1:10;7122:5;;7057:80;7156:4;7146:76;;-1:-1:-1;7193:1:10;7207:5;;7146:76;7238:4;7256:1;7251:59;;;;7324:1;7319:130;;;;7231:218;;7251:59;7281:1;7272:10;;7295:5;;;7319:130;7356:3;7346:8;7343:17;7340:43;;;7363:18;;:::i;:::-;-1:-1:-1;;7419:1:10;7405:16;;7434:5;;7231:218;;7533:2;7523:8;7520:16;7514:3;7508:4;7505:13;7501:36;7495:2;7485:8;7482:16;7477:2;7471:4;7468:12;7464:35;7461:77;7458:159;;;-1:-1:-1;7570:19:10;;;7602:5;;7458:159;7649:34;7674:8;7668:4;7649:34;:::i;:::-;7719:6;7715:1;7711:6;7707:19;7698:7;7695:32;7692:58;;;7730:18;;:::i;:::-;7768:20;;6988:806;-1:-1:-1;;;6988:806:10:o;7799:131::-;7859:5;7888:36;7915:8;7909:4;7888:36;:::i;7935:168::-;7975:7;8041:1;8037;8033:6;8029:14;8026:1;8023:21;8018:1;8011:9;8004:17;8000:45;7997:71;;;8048:18;;:::i;:::-;-1:-1:-1;8088:9:10;;7935:168::o;8108:217::-;8148:1;8174;8164:132;;8218:10;8213:3;8209:20;8206:1;8199:31;8253:4;8250:1;8243:15;8281:4;8278:1;8271:15;8164:132;-1:-1:-1;8310:9:10;;8108:217::o;8330:127::-;8391:10;8386:3;8382:20;8379:1;8372:31;8422:4;8419:1;8412:15;8446:4;8443:1;8436:15;8462:135;8501:3;-1:-1:-1;;8522:17:10;;8519:43;;;8542:18;;:::i;:::-;-1:-1:-1;8589:1:10;8578:13;;8462:135::o;8602:184::-;8672:6;8725:2;8713:9;8704:7;8700:23;8696:32;8693:52;;;8741:1;8738;8731:12;8693:52;-1:-1:-1;8764:16:10;;8602:184;-1:-1:-1;8602:184:10:o;9512:125::-;9552:4;9580:1;9577;9574:8;9571:34;;;9585:18;;:::i;:::-;-1:-1:-1;9622:9:10;;9512:125::o;9642:127::-;9703:10;9698:3;9694:20;9691:1;9684:31;9734:4;9731:1;9724:15;9758:4;9755:1;9748:15;10495:179;10573:13;;10626:22;10615:34;;10605:45;;10595:73;;10664:1;10661;10654:12;10679:473;10782:6;10790;10798;10806;10814;10867:3;10855:9;10846:7;10842:23;10838:33;10835:53;;;10884:1;10881;10874:12;10835:53;10907:39;10936:9;10907:39;:::i;:::-;10897:49;;10986:2;10975:9;10971:18;10965:25;10955:35;;11030:2;11019:9;11015:18;11009:25;10999:35;;11074:2;11063:9;11059:18;11053:25;11043:35;;11097:49;11141:3;11130:9;11126:19;11097:49;:::i;:::-;11087:59;;10679:473;;;;;;;;:::o;11157:273::-;11225:6;11278:2;11266:9;11257:7;11253:23;11249:32;11246:52;;;11294:1;11291;11284:12;11246:52;11326:9;11320:16;11376:4;11369:5;11365:16;11358:5;11355:27;11345:55;;11396:1;11393;11386:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address,address,uint256)": {
        "notice": "Add a new _token to the list of stakable token",
        "params": {
          "_pricefeed": "The address for the price feed of _token",
          "_token": "The address of the token"
        }
      },
      "changeLendingProtocol(address)": {
        "notice": "Change the lending protocol",
        "params": {
          "_newLendingProtocol": "The address of the new lending protocol contract"
        }
      },
      "claimToken()": {
        "notice": "Send Earned \"ProjectToken\" to user"
      },
      "getTokenValue(address)": {
        "notice": "Get the value (in USD) of a _token and its decimals()",
        "params": {
          "_token": "The address of the token"
        },
        "returns": {
          "_0": "price The value of _token",
          "_1": "decimals The number of decimals of the _token"
        }
      },
      "getUserSingleTokenValue(address,address)": {
        "notice": "Get the value (in USD) of _token staked by _user",
        "params": {
          "_token": "The address of the token",
          "_user": "The address of the user"
        },
        "returns": {
          "_0": "tokenValue The value of _token staked on the contract by _user"
        }
      },
      "getUserTotalValue(address)": {
        "notice": "Get the total value (in USD) staked by _user",
        "params": {
          "_user": "The address of the user"
        },
        "returns": {
          "_0": "totalValue The total value  of the tokens staked on the contract by _user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setPriceFeedContract(address,address)": {
        "details": "Gets call automatically when adding new token",
        "notice": "Set the price feed address for an ERC20 token",
        "params": {
          "_priceFeed": "The address of the pricefeed",
          "_token": "The address of the token"
        }
      },
      "stakeTokens(uint256,address)": {
        "notice": "Stake _amount of _token",
        "params": {
          "_amount": "The amount ot stake",
          "_token": "The address of the token"
        }
      },
      "tokenIsAllowed(address)": {
        "notice": "Check wheter a token is stakable on this contract",
        "params": {
          "_token": "The address of the token"
        },
        "returns": {
          "_0": "bool Wheter the token is stakable or not"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstakeTokens(address)": {
        "notice": "Unstake all _token staked",
        "params": {
          "_token": "The address of the token"
        }
      },
      "updateYieldRate(address,uint256)": {
        "params": {
          "_newYieldRate": "The new yield rate",
          "_token": "The address of the token"
        }
      }
    },
    "version": 1
  },
  "offset": [
    291,
    11780
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84436D3E GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDA0F0604 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDA0F0604 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xF37A55E4 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84436D3E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xC2FB345A EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D1AD8B8 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x4451D89F EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x4B60CE77 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x5E5583E5 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x367622 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xBEA440D EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x276B11DA EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x2B215124 EQ PUSH2 0x216 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x1614 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x16F PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0x16F PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x16F PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16C8 JUMP JUMPDEST PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH2 0x4DF DUP4 DUP4 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x4E9 DUP4 DUP3 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A20416D6F756E74206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x67726561746572207468616E203 PUSH1 0x94 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A20546F6B656E2069732063757272656E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1D1B1E481B9BC8185B1B1BDDD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x5FF CALLER DUP3 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A207472616E7366657246726F6D282920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x19985A5B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x725 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x714 SWAP1 PUSH1 0x1 PUSH2 0x17B9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x754 SWAP1 DUP4 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x7CC JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3D14D1B7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF45346DC SWAP1 PUSH2 0x800 SWAP1 DUP5 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 POP PUSH32 0x17A90BF25D618E67DE9BC66DE5762D97787B11707D112164AB54C37111467F2B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x885 DUP5 PUSH2 0x1158 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x897 DUP3 PUSH1 0xA PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP12 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x8C8 SWAP1 DUP6 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND OR SWAP1 SWAP3 SSTORE AND PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x947 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x1762 JUMP JUMPDEST DUP1 PUSH2 0x9EE DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x92A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA19 JUMPI PUSH2 0xA19 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA50 JUMPI PUSH2 0xA50 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP2 SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA8E SWAP1 DUP5 PUSH2 0x17B9 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xA9C SWAP1 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA31 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0xAD5 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x1956 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3D14D1B7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF45346DC SWAP1 PUSH2 0xB4D SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP DUP1 DUP1 PUSH2 0xB8C SWAP1 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7B3BD21A9C66CB98F4889DA8283172936ABD92A905D81830738B651EEE374D35 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A205374616B696E672062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x20616C7265616479203021 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xC6B CALLER DUP4 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xCA5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x196F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xDC6 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xDC4 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH2 0xD10 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x196F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD20 JUMPI PUSH2 0xD20 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD4C JUMPI PUSH2 0xD4C PUSH2 0x1925 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0xD8B JUMPI PUSH2 0xD8B PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xDC4 JUMP JUMPDEST DUP1 PUSH2 0xDBC DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCBE JUMP JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0xDFB SWAP1 DUP7 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x1956 JUMP JUMPDEST GT PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A207769746864726177206572726F7200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x4C5A68DF1E54DD796657DC5832C88515A36DC92548AF9951A0EF38DD61A3322E SWAP1 PUSH1 0x20 ADD PUSH2 0x86B JUMP JUMPDEST PUSH2 0xED1 CALLER PUSH2 0x1500 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A207472616E73666572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x100B PUSH1 0x0 PUSH2 0x15A8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1037 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x108A JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10C9 DUP5 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x877 JUMP JUMPDEST PUSH2 0x10D3 SWAP1 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x10DF DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x108E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x114F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1119 JUMPI PUSH2 0x1119 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x113D JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1147 DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10F2 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1247 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xFAA DUP2 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x131B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1357 JUMPI PUSH2 0x1357 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x13B3 JUMPI PUSH2 0x13B3 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1398 JUMPI PUSH2 0x1398 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x142F JUMP JUMPDEST DUP1 PUSH2 0x13BD DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x131E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x954FD12529F1A0A3258B2FD42316D6564987047F4F637F8EA9E434E3F5F5DEA0 SWAP1 PUSH2 0x1413 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD TIMESTAMP SWAP1 SWAP2 SSTORE SWAP1 PUSH2 0x1467 DUP5 DUP5 PUSH2 0x877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1475 DUP4 TIMESTAMP PUSH2 0x196F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH3 0x15180 SWAP2 SWAP1 DUP3 PUSH2 0x3E8 DUP4 PUSH2 0x14A6 DUP8 DUP10 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x14BA SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x1903 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x14F1 SWAP1 DUP5 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x15A4 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1526 JUMPI PUSH2 0x1526 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP8 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1592 JUMPI PUSH2 0x1592 DUP3 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1578 JUMPI PUSH2 0x1578 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x142F JUMP JUMPDEST DUP1 PUSH2 0x159C DUP2 PUSH2 0x193B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1503 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x160F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1632 DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x1640 PUSH1 0x20 DUP6 ADD PUSH2 0x15F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1673 PUSH1 0x20 DUP5 ADD PUSH2 0x15F8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x168F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1698 DUP4 PUSH2 0x15F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1673 PUSH1 0x20 DUP5 ADD PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C1 DUP3 PUSH2 0x15F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16FD DUP4 PUSH2 0x15F8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67436F6E74726163743A20617070726F76652829206661696C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CC PUSH2 0x17A3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x182F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1815 PUSH2 0x17A3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1822 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x17F9 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1846 JUMPI POP PUSH1 0x1 PUSH2 0x8D8 JUMP JUMPDEST DUP2 PUSH2 0x1853 JUMPI POP PUSH1 0x0 PUSH2 0x8D8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1869 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1873 JUMPI PUSH2 0x188F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1884 PUSH2 0x17A3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x8D8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x18B2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x18BC DUP4 DUP4 PUSH2 0x17F4 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x18D0 JUMPI PUSH2 0x18D0 PUSH2 0x17A3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C1 DUP4 DUP4 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FE PUSH2 0x17A3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1920 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x194F JUMPI PUSH2 0x194F PUSH2 0x17A3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1981 PUSH2 0x17A3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x160F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D7 DUP7 PUSH2 0x199C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x19FA PUSH1 0x80 DUP8 ADD PUSH2 0x199C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x16C1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP PUSH23 0xD4B6C31153B7FCA46AD0CC5A9495673BD013AB00EF29EE XOR 0x27 0xB1 SELFBALANCE DUP3 0x4C 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x157"
    },
    "25": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x84436D3E"
    },
    "38": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDA0F0604"
    },
    "49": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDA0F0604"
    },
    "60": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31C"
    },
    "64": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDD5B8467"
    },
    "71": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x347"
    },
    "75": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36A"
    },
    "86": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x392"
    },
    "97": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF37A55E4"
    },
    "104": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "105": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A5"
    },
    "108": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "109": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFD5E6DD1"
    },
    "115": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "116": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B8"
    },
    "119": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "120": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "123": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "REVERT",
      "path": "8"
    },
    "124": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x84436D3E"
    },
    "131": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x292"
    },
    "135": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x877DD39D"
    },
    "142": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A5"
    },
    "146": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "148": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "154": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B8"
    },
    "157": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "158": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xAF3F5E22"
    },
    "164": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "165": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C9"
    },
    "168": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "169": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB83E0234"
    },
    "175": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "176": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2DC"
    },
    "179": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "180": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "181": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC2FB345A"
    },
    "186": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "187": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2FC"
    },
    "190": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "191": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "194": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "REVERT",
      "path": "8"
    },
    "195": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "197": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2D1AD8B8"
    },
    "202": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "GT",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "207": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "208": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2D1AD8B8"
    },
    "213": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "214": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x229"
    },
    "217": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "218": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4451D89F"
    },
    "224": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "225": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23C"
    },
    "228": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "229": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "230": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4B60CE77"
    },
    "235": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "236": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x244"
    },
    "239": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "240": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "241": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5E5583E5"
    },
    "246": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "247": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x257"
    },
    "250": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "251": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "252": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5E5F2E26"
    },
    "257": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "258": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x277"
    },
    "261": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "263": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "268": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28A"
    },
    "272": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "273": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "276": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "REVERT",
      "path": "8"
    },
    "277": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "278": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "279": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x367622"
    },
    "283": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "284": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C"
    },
    "287": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "288": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "289": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xBEA440D"
    },
    "294": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "295": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x171"
    },
    "298": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "299": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "300": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x276B11DA"
    },
    "305": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "306": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x184"
    },
    "309": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "310": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "311": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x27927B3E"
    },
    "316": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "317": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AA"
    },
    "320": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "321": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "322": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x29161A00"
    },
    "327": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "328": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EB"
    },
    "331": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "332": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "333": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x2B215124"
    },
    "338": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "EQ",
      "path": "8"
    },
    "339": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x216"
    },
    "342": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "343": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "344": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "346": {
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "347": {
      "first_revert": true,
      "fn": null,
      "offset": [
        291,
        11780
      ],
      "op": "REVERT",
      "path": "8"
    },
    "348": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "349": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "352": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A"
    },
    "355": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "356": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "358": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1614"
    },
    "361": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMP",
      "path": "8"
    },
    "362": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "363": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3CB"
    },
    "366": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMP",
      "path": "8"
    },
    "367": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "368": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "STOP",
      "path": "8"
    },
    "369": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "370": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "373": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17F"
    },
    "376": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "377": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "379": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1650"
    },
    "382": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2186,
        3357
      ],
      "op": "JUMP",
      "path": "8"
    },
    "383": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "384": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x522"
    },
    "387": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2186,
        3357
      ],
      "op": "JUMP",
      "path": "8"
    },
    "388": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "389": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "392": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x192"
    },
    "395": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "396": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "398": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x167C"
    },
    "401": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMP",
      "path": "8"
    },
    "402": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "403": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "406": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMP",
      "path": "8"
    },
    "407": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "408": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "410": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "411": {
      "op": "SWAP1"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "418": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "420": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "421": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "DUP1",
      "path": "8"
    },
    "422": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "423": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "SUB",
      "path": "8"
    },
    "424": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "425": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "RETURN",
      "path": "8"
    },
    "426": {
      "offset": [
        704,
        760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "427": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "430": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B8"
    },
    "433": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "434": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "436": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "439": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        704,
        760
      ],
      "op": "JUMP",
      "path": "8"
    },
    "440": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "441": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "443": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "445": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "446": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "448": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "449": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "DUP2",
      "path": "8"
    },
    "450": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "451": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "453": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "454": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "455": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "SUB"
    },
    "464": {
      "offset": [
        704,
        760
      ],
      "op": "AND",
      "path": "8"
    },
    "465": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "DUP2",
      "path": "8"
    },
    "466": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "JUMP",
      "path": "8"
    },
    "467": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "468": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "470": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        704,
        760
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "op": "SWAP1"
    },
    "480": {
      "op": "SWAP2"
    },
    "481": {
      "op": "AND"
    },
    "482": {
      "op": "DUP2"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "offset": [
        704,
        760
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "490": {
      "op": "JUMP"
    },
    "491": {
      "offset": [
        468,
        537
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "492": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "495": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F9"
    },
    "498": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "499": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "501": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x167C"
    },
    "504": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        468,
        537
      ],
      "op": "JUMP",
      "path": "8"
    },
    "505": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "506": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "508": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "510": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "511": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP2",
      "path": "8"
    },
    "512": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "513": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "515": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "516": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP4",
      "path": "8"
    },
    "517": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "518": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "520": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP1",
      "path": "8"
    },
    "521": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP5",
      "path": "8"
    },
    "522": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "523": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "524": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "525": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "526": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "527": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP3",
      "path": "8"
    },
    "528": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "529": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "530": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "531": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "532": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "DUP2",
      "path": "8"
    },
    "533": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        468,
        537
      ],
      "op": "JUMP",
      "path": "8"
    },
    "534": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "535": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "538": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x224"
    },
    "541": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "542": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "544": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "547": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9314,
        10514
      ],
      "op": "JUMP",
      "path": "8"
    },
    "548": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "549": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8DE"
    },
    "552": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9314,
        10514
      ],
      "op": "JUMP",
      "path": "8"
    },
    "553": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "554": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "557": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x237"
    },
    "560": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "561": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "563": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "566": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3452,
        4539
      ],
      "op": "JUMP",
      "path": "8"
    },
    "567": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "568": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBDC"
    },
    "571": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3452,
        4539
      ],
      "op": "JUMP",
      "path": "8"
    },
    "572": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4596,
        4979
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "573": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4596,
        4979
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "576": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4596,
        4979
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEC8"
    },
    "579": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        4596,
        4979
      ],
      "op": "JUMP",
      "path": "8"
    },
    "580": {
      "offset": [
        333,
        359
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "581": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "583": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "584": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "587": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "SUB"
    },
    "596": {
      "offset": [
        333,
        359
      ],
      "op": "AND",
      "path": "8"
    },
    "597": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "DUP2",
      "path": "8"
    },
    "598": {
      "fn": "StakingContract.claimToken",
      "offset": [
        333,
        359
      ],
      "op": "JUMP",
      "path": "8"
    },
    "599": {
      "offset": [
        1120,
        1171
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "600": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "603": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x265"
    },
    "606": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "607": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "609": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "612": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        1120,
        1171
      ],
      "op": "JUMP",
      "path": "8"
    },
    "613": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "614": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "616": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "618": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "619": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "621": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "622": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "DUP2",
      "path": "8"
    },
    "623": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "624": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "626": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "627": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "628": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "629": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "DUP2",
      "path": "8"
    },
    "630": {
      "fn": "StakingContract.claimToken",
      "offset": [
        1120,
        1171
      ],
      "op": "JUMP",
      "path": "8"
    },
    "631": {
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "632": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "635": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x285"
    },
    "638": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "639": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "641": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C8"
    },
    "644": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        395,
        425
      ],
      "op": "JUMP",
      "path": "8"
    },
    "645": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "646": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFAD"
    },
    "649": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        395,
        425
      ],
      "op": "JUMP",
      "path": "8"
    },
    "650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD7"
    },
    "657": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "658": {
      "offset": [
        1323,
        1362
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "SUB"
    },
    "674": {
      "offset": [
        1323,
        1362
      ],
      "op": "AND",
      "path": "8"
    },
    "675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "DUP2",
      "path": "8"
    },
    "676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1362
      ],
      "op": "JUMP",
      "path": "8"
    },
    "677": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "678": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "681": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B3"
    },
    "684": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "685": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "687": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x167C"
    },
    "690": {
      "fn": "StakingContract.setPriceFeedContract",
      "jump": "i",
      "offset": [
        7656,
        7818
      ],
      "op": "JUMP",
      "path": "8"
    },
    "691": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "692": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100D"
    },
    "695": {
      "fn": "StakingContract.setPriceFeedContract",
      "jump": "i",
      "offset": [
        7656,
        7818
      ],
      "op": "JUMP",
      "path": "8"
    },
    "696": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "699": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "709": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "712": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "713": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "714": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "717": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D7"
    },
    "720": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "721": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "723": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "726": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMP",
      "path": "8"
    },
    "727": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "728": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1065"
    },
    "731": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMP",
      "path": "8"
    },
    "732": {
      "offset": [
        610,
        663
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "733": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "736": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2EA"
    },
    "739": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "740": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "742": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "745": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        610,
        663
      ],
      "op": "JUMP",
      "path": "8"
    },
    "746": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "747": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "749": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "751": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "752": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "754": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "755": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "DUP2",
      "path": "8"
    },
    "756": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "757": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "759": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "760": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "761": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "762": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "DUP2",
      "path": "8"
    },
    "763": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        610,
        663
      ],
      "op": "JUMP",
      "path": "8"
    },
    "764": {
      "offset": [
        821,
        868
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "765": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "768": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30A"
    },
    "771": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "772": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "774": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "777": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        821,
        868
      ],
      "op": "JUMP",
      "path": "8"
    },
    "778": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "779": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "781": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "783": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "784": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "786": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "787": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "DUP2",
      "path": "8"
    },
    "788": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "789": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "791": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "792": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "793": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "794": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "DUP2",
      "path": "8"
    },
    "795": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        821,
        868
      ],
      "op": "JUMP",
      "path": "8"
    },
    "796": {
      "offset": [
        1221,
        1316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "797": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x197"
    },
    "800": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x32A"
    },
    "803": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "804": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "806": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x167C"
    },
    "809": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        1221,
        1316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "810": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "811": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "813": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "815": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "816": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP2",
      "path": "8"
    },
    "817": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "818": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "820": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "821": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP4",
      "path": "8"
    },
    "822": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "823": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "825": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP1",
      "path": "8"
    },
    "826": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP5",
      "path": "8"
    },
    "827": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "828": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "829": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "830": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "831": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "832": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP3",
      "path": "8"
    },
    "833": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "834": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "835": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "836": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "837": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "DUP2",
      "path": "8"
    },
    "838": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        1221,
        1316
      ],
      "op": "JUMP",
      "path": "8"
    },
    "839": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "840": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35A"
    },
    "843": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x355"
    },
    "846": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "847": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "849": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "852": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMP",
      "path": "8"
    },
    "853": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "854": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10EE"
    },
    "857": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMP",
      "path": "8"
    },
    "858": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "859": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "861": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "873": {
      "op": "JUMP"
    },
    "874": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "875": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x37D"
    },
    "878": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x378"
    },
    "881": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "882": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "884": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A6"
    },
    "887": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMP",
      "path": "8"
    },
    "888": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "889": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1158"
    },
    "892": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMP",
      "path": "8"
    },
    "893": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "894": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "896": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "DUP1",
      "path": "8"
    },
    "897": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "898": {
      "op": "SWAP3"
    },
    "899": {
      "op": "DUP4"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "903": {
      "op": "DUP4"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "op": "SWAP2"
    },
    "906": {
      "op": "SWAP1"
    },
    "907": {
      "op": "SWAP2"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A1"
    },
    "913": {
      "op": "JUMP"
    },
    "914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A0"
    },
    "921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A6"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1259"
    },
    "932": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "933": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "934": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16F"
    },
    "937": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B3"
    },
    "940": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "941": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "943": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16E1"
    },
    "946": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8601,
        9180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "947": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "948": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12F1"
    },
    "951": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8601,
        9180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "952": {
      "offset": [
        365,
        389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "953": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D3"
    },
    "956": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C6"
    },
    "959": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "960": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "962": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16C8"
    },
    "965": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        365,
        389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "966": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "967": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x141F"
    },
    "970": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        365,
        389
      ],
      "op": "JUMP",
      "path": "8"
    },
    "971": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "974": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "985": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "986": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "989": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "990": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "992": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1001": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1002": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1004": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1005": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1009": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170B"
    },
    "1012": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1013": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1016": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1017": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1019": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "1020": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1021": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1022": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8151
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x3"
    },
    "1025": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1026": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1027": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1029": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1030": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "ADD",
      "path": "8"
    },
    "1031": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1032": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1035": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1036": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1037": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1038": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1039": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1072": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "ADD",
      "path": "8"
    },
    "1073": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1074": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "op": "NOT"
    },
    "1084": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "AND",
      "path": "8"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1094": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1095": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "AND",
      "path": "8"
    },
    "1096": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1097": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1098": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "OR",
      "path": "8"
    },
    "1099": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1100": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1101": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1102": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8226,
        8241
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0xA"
    },
    "1104": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8226,
        8241
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1105": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1107": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1108": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1117": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1118": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8226,
        8241
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1119": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8226,
        8241
      ],
      "op": "AND",
      "path": "8"
    },
    "1120": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1122": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1123": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "ADD",
      "path": "8"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1127": {
      "op": "NOT"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1130": {
      "op": "DUP4"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8138,
        8164
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1134": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8217
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "1139": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8217
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1145": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1147": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1148": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1149": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1150": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "SUB",
      "path": "8"
    },
    "1151": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1152": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1154": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1155": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "GAS",
      "path": "8"
    },
    "1156": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "CALL",
      "path": "8"
    },
    "1157": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1158": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1159": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1160": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x495"
    },
    "1163": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1164": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1165": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1167": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1168": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1169": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1170": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1172": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1173": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1174": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "POP",
      "path": "8"
    },
    "1175": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "POP",
      "path": "8"
    },
    "1176": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "POP",
      "path": "8"
    },
    "1177": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "POP",
      "path": "8"
    },
    "1178": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1180": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1181": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1182": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1184": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "NOT",
      "path": "8"
    },
    "1185": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1187": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1188": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "ADD",
      "path": "8"
    },
    "1189": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "AND",
      "path": "8"
    },
    "1190": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1191": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "ADD",
      "path": "8"
    },
    "1192": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1193": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1195": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1196": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "POP",
      "path": "8"
    },
    "1197": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1198": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "ADD",
      "path": "8"
    },
    "1199": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1200": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4B9"
    },
    "1203": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1204": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1205": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1740"
    },
    "1208": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8195,
        8262
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1209": {
      "branch": 60,
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8195,
        8262
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1210": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D5"
    },
    "1213": {
      "branch": 60,
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1214": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1216": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1225": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1226": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1228": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "ADD",
      "path": "8"
    },
    "1229": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1232": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1233": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1762"
    },
    "1236": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8174,
        8321
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1237": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8174,
        8321
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1238": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8331,
        8371
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 4,
      "value": "0x4DF"
    },
    "1241": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8352,
        8358
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1242": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8360,
        8370
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1243": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8331,
        8351
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100D"
    },
    "1246": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8331,
        8371
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1247": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8331,
        8371
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1248": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8381,
        8412
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 5,
      "value": "0x4E9"
    },
    "1251": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8397,
        8403
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1252": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8405,
        8411
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1253": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8381,
        8396
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12F1"
    },
    "1256": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "i",
      "offset": [
        8381,
        8412
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1257": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8381,
        8412
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1258": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x40"
    },
    "1260": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1270": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "AND",
      "path": "8"
    },
    "1271": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1272": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4"
    },
    "1305": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1306": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1308": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1309": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8427,
        8445
      ],
      "op": "LOG2",
      "path": "8"
    },
    "1310": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "POP",
      "path": "8"
    },
    "1311": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "POP",
      "path": "8"
    },
    "1312": {
      "fn": "StakingContract.addAllowedTokens",
      "offset": [
        8001,
        8452
      ],
      "op": "POP",
      "path": "8"
    },
    "1313": {
      "fn": "StakingContract.addAllowedTokens",
      "jump": "o",
      "offset": [
        8001,
        8452
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1314": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1315": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2305,
        2306
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x0"
    },
    "1317": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2295,
        2302
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1318": {
      "branch": 61,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2295,
        2306
      ],
      "op": "GT",
      "path": "8"
    },
    "1319": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x589"
    },
    "1322": {
      "branch": 61,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1323": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1325": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1334": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1337": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1339": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1340": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "ADD",
      "path": "8"
    },
    "1341": {
      "op": "MSTORE"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A20416D6F756E74206D75737420626520"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1384": {
      "op": "DUP3"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "MSTORE"
    },
    "1387": {
      "op": "PUSH14",
      "value": "0x67726561746572207468616E203"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1407": {
      "op": "DUP3"
    },
    "1408": {
      "op": "ADD"
    },
    "1409": {
      "op": "MSTORE"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1416": {
      "op": "JUMP"
    },
    "1417": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2287,
        2357
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1418": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2388,
        2410
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 8,
      "value": "0x592"
    },
    "1421": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2403,
        2409
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1422": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2388,
        2402
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10EE"
    },
    "1425": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2388,
        2410
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1426": {
      "branch": 62,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2388,
        2410
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1427": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F5"
    },
    "1430": {
      "branch": 62,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1431": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1433": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1442": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1445": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1447": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1448": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "ADD",
      "path": "8"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1454": {
      "op": "DUP3"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "op": "MSTORE"
    },
    "1457": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A20546F6B656E2069732063757272656E"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1492": {
      "op": "DUP3"
    },
    "1493": {
      "op": "ADD"
    },
    "1494": {
      "op": "MSTORE"
    },
    "1495": {
      "op": "PUSH14",
      "value": "0x1D1B1E481B9BC8185B1B1BDDD959"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1515": {
      "op": "DUP3"
    },
    "1516": {
      "op": "ADD"
    },
    "1517": {
      "op": "MSTORE"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1524": {
      "op": "JUMP"
    },
    "1525": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2367,
        2482
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1526": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2556,
        2598
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 9,
      "value": "0x5FF"
    },
    "1529": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2579,
        2589
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1530": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2591,
        2597
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1531": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2556,
        2578
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142F"
    },
    "1534": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2556,
        2598
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1535": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2556,
        2598
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1536": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x40"
    },
    "1538": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1539": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1548": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1549": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2657,
        2667
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1550": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1552": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1553": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "ADD",
      "path": "8"
    },
    "1554": {
      "op": "MSTORE"
    },
    "1555": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2677,
        2681
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "DUP4"
    },
    "1566": {
      "op": "SWAP1"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1574": {
      "op": "SHL"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2656
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1577": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2656
      ],
      "op": "AND",
      "path": "8"
    },
    "1578": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2656
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1579": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2656
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "1584": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2656
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1590": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1592": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1593": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1594": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1595": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "SUB",
      "path": "8"
    },
    "1596": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1597": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1599": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1600": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "GAS",
      "path": "8"
    },
    "1601": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "CALL",
      "path": "8"
    },
    "1602": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1603": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1604": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1605": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x652"
    },
    "1608": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1609": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1610": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1612": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1613": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1614": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1615": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1617": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1618": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1619": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "POP",
      "path": "8"
    },
    "1620": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "POP",
      "path": "8"
    },
    "1621": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "POP",
      "path": "8"
    },
    "1622": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "POP",
      "path": "8"
    },
    "1623": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1625": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1626": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1627": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1629": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "NOT",
      "path": "8"
    },
    "1630": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1632": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1633": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "ADD",
      "path": "8"
    },
    "1634": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "AND",
      "path": "8"
    },
    "1635": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1636": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "ADD",
      "path": "8"
    },
    "1637": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1638": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1640": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1641": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "POP",
      "path": "8"
    },
    "1642": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1643": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "ADD",
      "path": "8"
    },
    "1644": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1645": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x676"
    },
    "1648": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1649": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1650": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1740"
    },
    "1653": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2629,
        2692
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1654": {
      "branch": 63,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2629,
        2692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1655": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6D1"
    },
    "1658": {
      "branch": 63,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1659": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1661": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1670": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1675": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1676": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "ADD",
      "path": "8"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A207472616E7366657246726F6D282920"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH6",
      "value": "0x19985A5B1959"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1735": {
      "op": "DUP3"
    },
    "1736": {
      "op": "ADD"
    },
    "1737": {
      "op": "MSTORE"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "1744": {
      "op": "JUMP"
    },
    "1745": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2608,
        2756
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "op": "SUB"
    },
    "1754": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1755": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "AND",
      "path": "8"
    },
    "1756": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1758": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1759": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1760": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1761": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2785
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1763": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1765": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1766": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1767": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1768": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1770": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1771": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1772": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2793
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1773": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2794,
        2804
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1774": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1775": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1776": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1777": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1778": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1779": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1780": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1781": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2771,
        2805
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1782": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2767,
        2904
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x725"
    },
    "1785": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2767,
        2904
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1786": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2878,
        2888
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 11
    },
    "1787": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1789": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1790": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1791": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1792": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1794": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1796": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1797": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1799": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1800": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1801": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2889
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1802": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x714"
    },
    "1805": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2893
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1806": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2892,
        2893
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1808": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B9"
    },
    "1811": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2859,
        2893
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1812": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2859,
        2893
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1813": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2845,
        2855
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1814": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1816": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1817": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1818": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1819": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2844
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1821": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1823": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1824": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1826": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1827": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2856
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1828": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2826,
        2893
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1829": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2767,
        2904
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 12
    },
    "1839": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "AND",
      "path": "8"
    },
    "1840": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1842": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1843": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1844": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1845": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2977
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1847": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1849": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1850": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1851": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1852": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1854": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1855": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1856": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2985
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1857": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2986,
        2996
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1858": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1859": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1860": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1861": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1862": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1863": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1864": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1865": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        2997
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1866": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        3019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x754"
    },
    "1869": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        3019
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1870": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3012,
        3019
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1871": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3012,
        3019
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1872": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        3019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B9"
    },
    "1875": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        2963,
        3019
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1876": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2963,
        3019
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1886": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "AND",
      "path": "8"
    },
    "1887": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1889": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1890": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1891": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1892": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1894": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1896": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1897": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1898": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1899": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1901": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1902": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1903": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2936
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1904": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2937,
        2947
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1905": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1906": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1907": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1908": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1909": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1910": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1911": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        2948
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1912": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        3019
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1913": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        3019
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1914": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        3019
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1915": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2914,
        3019
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1916": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3106,
        3124
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1918": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3106,
        3136
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1919": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3106,
        3136
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1920": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3106,
        3136
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1921": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3106,
        3136
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1922": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3140,
        3141
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1924": {
      "branch": 64,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3106,
        3141
      ],
      "op": "EQ",
      "path": "8"
    },
    "1925": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3102,
        3192
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1926": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3102,
        3192
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7CC"
    },
    "1929": {
      "branch": 64,
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3102,
        3192
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1930": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3164
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0x2"
    },
    "1932": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1933": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1934": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1936": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1937": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "ADD",
      "path": "8"
    },
    "1938": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1939": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1942": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1943": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1944": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1945": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1946": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1979": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "ADD",
      "path": "8"
    },
    "1980": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1981": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "op": "NOT"
    },
    "1991": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "AND",
      "path": "8"
    },
    "1992": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3170,
        3180
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1993": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "OR",
      "path": "8"
    },
    "1994": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1995": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3157,
        3181
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1996": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3102,
        3192
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1997": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3255
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 14,
      "value": "0xA"
    },
    "1999": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3255
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2000": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2002": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2003": {
      "op": "PUSH4",
      "value": "0x3D14D1B7"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2012": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "op": "SUB"
    },
    "2021": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3255
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2022": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3255
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2023": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3255
      ],
      "op": "AND",
      "path": "8"
    },
    "2024": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3255
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2025": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3263
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF45346DC"
    },
    "2030": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3263
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2031": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x800"
    },
    "2034": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2035": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3264,
        3270
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2036": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3264,
        3270
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2037": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3272,
        3279
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2038": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3272,
        3279
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2039": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3289,
        3293
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2040": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3289,
        3293
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2041": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2043": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "ADD",
      "path": "8"
    },
    "2044": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D1"
    },
    "2047": {
      "fn": "StakingContract.stakeTokens",
      "jump": "i",
      "offset": [
        3240,
        3295
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2048": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2049": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2051": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2053": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2054": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2055": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2056": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "SUB",
      "path": "8"
    },
    "2057": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2058": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2060": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2061": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2062": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2063": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2064": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2065": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2066": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x81A"
    },
    "2069": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2070": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2072": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2073": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2074": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2075": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "POP",
      "path": "8"
    },
    "2076": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "GAS",
      "path": "8"
    },
    "2077": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "CALL",
      "path": "8"
    },
    "2078": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2079": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2080": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2081": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x82E"
    },
    "2084": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2085": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2086": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2088": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2089": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2090": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2091": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2093": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2094": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3240,
        3295
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 15,
      "value": "0x40"
    },
    "2099": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2100": {
      "op": "DUP5"
    },
    "2101": {
      "op": "DUP2"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3330,
        3340
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2104": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3330,
        3340
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2115": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "AND",
      "path": "8"
    },
    "2116": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x17A90BF25D618E67DE9BC66DE5762D97787B11707D112164AB54C37111467F2B"
    },
    "2151": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2156": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2158": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2159": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2160": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2161": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "SUB",
      "path": "8"
    },
    "2162": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2163": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        3310,
        3350
      ],
      "op": "LOG3",
      "path": "8"
    },
    "2164": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "POP",
      "path": "8"
    },
    "2165": {
      "fn": "StakingContract.stakeTokens",
      "offset": [
        2186,
        3357
      ],
      "op": "POP",
      "path": "8"
    },
    "2166": {
      "fn": "StakingContract.stakeTokens",
      "jump": "o",
      "offset": [
        2186,
        3357
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2167": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2168": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6360,
        6367
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2170": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2171": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6399,
        6415
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2173": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6419,
        6440
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x885"
    },
    "2176": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6433,
        6439
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2177": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6419,
        6432
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1158"
    },
    "2180": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6419,
        6440
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2181": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6419,
        6440
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2182": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6383,
        6440
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2183": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6383,
        6440
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6383,
        6440
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6465,
        6483
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2189": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6542,
        6554
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x897"
    },
    "2192": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6383,
        6440
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2193": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6542,
        6544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "2195": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6542,
        6554
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18D8"
    },
    "2198": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6542,
        6554
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2199": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6542,
        6554
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2209": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2210": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "AND",
      "path": "8"
    },
    "2211": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2213": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2214": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2215": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2216": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6502
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2218": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2220": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2221": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2222": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2223": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2225": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2226": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2227": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6510
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2228": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2229": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "DUP12",
      "path": "8"
    },
    "2230": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "AND",
      "path": "8"
    },
    "2231": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2232": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2233": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2234": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2235": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2236": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2237": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6517
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2238": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6525
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8C8"
    },
    "2241": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6525
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2242": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6520,
        6525
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2243": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6520,
        6525
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2244": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6525
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18E4"
    },
    "2247": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6488,
        6525
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2248": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6488,
        6525
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2249": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6487,
        6555
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8D2"
    },
    "2252": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6487,
        6555
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2253": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6487,
        6555
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2254": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6487,
        6555
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1903"
    },
    "2257": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        6487,
        6555
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2258": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6487,
        6555
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2259": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6465,
        6556
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "op": "POP"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2265": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2266": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2267": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "POP",
      "path": "8"
    },
    "2268": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "offset": [
        6251,
        6735
      ],
      "op": "POP",
      "path": "8"
    },
    "2269": {
      "fn": "StakingContract.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        6251,
        6735
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2270": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2271": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2273": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "op": "SUB"
    },
    "2282": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2283": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2284": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2285": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x908"
    },
    "2288": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2289": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2291": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2300": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2301": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2303": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2304": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "2307": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2308": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170B"
    },
    "2311": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2312": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2313": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9453,
        9468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "2315": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9453,
        9468
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2316": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9453,
        9468
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 16
    },
    "2326": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2327": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "AND",
      "path": "8"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "op": "NOT"
    },
    "2337": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2338": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "AND",
      "path": "8"
    },
    "2339": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "OR",
      "path": "8"
    },
    "2340": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2341": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2342": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9479,
        9534
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2343": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9453,
        9468
      ],
      "op": "AND",
      "path": "8"
    },
    "2344": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9423,
        9442
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2346": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2347": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9568,
        9581
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2349": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9568,
        9588
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2350": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9564,
        9588
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2351": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9564,
        9588
      ],
      "op": "LT",
      "path": "8"
    },
    "2352": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2353": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9F6"
    },
    "2356": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2357": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9654
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0x3"
    },
    "2359": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9655,
        9656
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2360": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2361": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2362": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2363": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "LT",
      "path": "8"
    },
    "2364": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x947"
    },
    "2367": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2368": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x947"
    },
    "2371": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "2374": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9641,
        9657
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2375": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2376": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2378": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2379": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2380": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2381": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2383": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2384": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2385": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2386": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "ADD",
      "path": "8"
    },
    "2387": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2388": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2390": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2391": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2400": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "op": "DUP6"
    },
    "2410": {
      "op": "DUP2"
    },
    "2411": {
      "op": "AND"
    },
    "2412": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2414": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2415": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "ADD",
      "path": "8"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2419": {
      "op": "NOT"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2422": {
      "op": "DUP4"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2426": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2427": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "AND",
      "path": "8"
    },
    "2428": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9641,
        9657
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2429": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9666
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x95EA7B3"
    },
    "2434": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9666
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2440": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2442": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2443": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2444": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2445": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "SUB",
      "path": "8"
    },
    "2446": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2447": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2449": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2450": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "GAS",
      "path": "8"
    },
    "2451": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "CALL",
      "path": "8"
    },
    "2452": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2453": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2454": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2455": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9A4"
    },
    "2458": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2459": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2460": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2462": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2463": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2464": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2465": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2467": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2468": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2469": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "POP",
      "path": "8"
    },
    "2470": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "POP",
      "path": "8"
    },
    "2471": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "POP",
      "path": "8"
    },
    "2472": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "POP",
      "path": "8"
    },
    "2473": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2475": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2476": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2477": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2479": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "NOT",
      "path": "8"
    },
    "2480": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2482": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2483": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "ADD",
      "path": "8"
    },
    "2484": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "AND",
      "path": "8"
    },
    "2485": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2486": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "ADD",
      "path": "8"
    },
    "2487": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2488": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2490": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2491": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "POP",
      "path": "8"
    },
    "2492": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2493": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "ADD",
      "path": "8"
    },
    "2494": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2495": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9C8"
    },
    "2498": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2499": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2500": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1740"
    },
    "2503": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9634,
        9764
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2504": {
      "branch": 65,
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9634,
        9764
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2505": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9E4"
    },
    "2508": {
      "branch": 65,
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2509": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2511": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2520": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2521": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2523": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "ADD",
      "path": "8"
    },
    "2524": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "2527": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2528": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1762"
    },
    "2531": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9609,
        9831
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2532": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9609,
        9831
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2533": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 18
    },
    "2534": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9EE"
    },
    "2537": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2538": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "2541": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9590,
        9593
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2542": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2543": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2544": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "POP",
      "path": "8"
    },
    "2545": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9590,
        9593
      ],
      "op": "POP",
      "path": "8"
    },
    "2546": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x92A"
    },
    "2549": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2550": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2551": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9544,
        9842
      ],
      "op": "POP",
      "path": "8"
    },
    "2552": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9889,
        9898
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2554": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2555": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9908,
        9921
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2557": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9908,
        9928
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2558": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9904,
        9928
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2559": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9904,
        9928
      ],
      "op": "LT",
      "path": "8"
    },
    "2560": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2561": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB94"
    },
    "2564": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2565": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9949,
        9962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2567": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9978
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2569": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9979,
        9980
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2570": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2571": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2572": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2573": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "LT",
      "path": "8"
    },
    "2574": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA19"
    },
    "2577": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2578": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA19"
    },
    "2581": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "2584": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9965,
        9981
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2585": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2586": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2588": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2589": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2590": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2591": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2593": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2594": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2595": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "ADD",
      "path": "8"
    },
    "2596": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "op": "SUB"
    },
    "2605": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "AND",
      "path": "8"
    },
    "2606": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9965,
        9981
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2609": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2610": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10056,
        10063
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2612": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10056,
        10070
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2613": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10052,
        10070
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2614": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10052,
        10070
      ],
      "op": "LT",
      "path": "8"
    },
    "2615": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2616": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAA4"
    },
    "2619": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2620": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10095,
        10109
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2622": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10119
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2624": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10120,
        10121
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2625": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2626": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2627": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2628": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "LT",
      "path": "8"
    },
    "2629": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA50"
    },
    "2632": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2633": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA50"
    },
    "2636": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "2639": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10112,
        10122
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2640": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2641": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2643": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2644": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2645": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2646": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2648": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2649": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2650": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2651": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2652": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2653": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "ADD",
      "path": "8"
    },
    "2654": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "DUP8",
      "path": "8",
      "statement": 19
    },
    "2664": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2665": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "AND",
      "path": "8"
    },
    "2666": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2667": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2668": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10169
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2670": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2671": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2672": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2674": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2675": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2676": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10176
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2677": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2678": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2679": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2680": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "AND",
      "path": "8"
    },
    "2681": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2682": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2683": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2684": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2685": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2686": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2687": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2688": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2689": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10155,
        10184
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2690": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2691": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10112,
        10122
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA8E"
    },
    "2696": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2697": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2698": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B9"
    },
    "2701": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10140,
        10184
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2702": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2703": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2704": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10140,
        10184
      ],
      "op": "POP",
      "path": "8"
    },
    "2705": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10077,
        10206
      ],
      "op": "POP",
      "path": "8"
    },
    "2706": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 20
    },
    "2707": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2708": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9C"
    },
    "2711": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2712": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "2715": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10072,
        10075
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2716": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2717": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2718": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "POP",
      "path": "8"
    },
    "2719": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10072,
        10075
      ],
      "op": "POP",
      "path": "8"
    },
    "2720": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA31"
    },
    "2723": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2724": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10032,
        10206
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2725": {
      "op": "POP"
    },
    "2726": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 21,
      "value": "0x40"
    },
    "2728": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2729": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2738": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10257
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2748": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10257
      ],
      "op": "AND",
      "path": "8"
    },
    "2749": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10257
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2750": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10257
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x69328DEC"
    },
    "2755": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10257
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2756": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAD5"
    },
    "2759": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2760": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10275,
        10280
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2761": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10275,
        10280
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2762": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10298,
        10309
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2763": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10298,
        10309
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2764": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10335,
        10339
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2765": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10335,
        10339
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2766": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2768": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "ADD",
      "path": "8"
    },
    "2769": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D1"
    },
    "2772": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10219,
        10354
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2773": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2774": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2776": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2778": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2779": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2780": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2781": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "SUB",
      "path": "8"
    },
    "2782": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2783": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2785": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2786": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "GAS",
      "path": "8"
    },
    "2787": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "CALL",
      "path": "8"
    },
    "2788": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2789": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2790": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2791": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAF4"
    },
    "2794": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2795": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2796": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2798": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2799": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2800": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2801": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2803": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2804": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2805": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "POP",
      "path": "8"
    },
    "2806": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "POP",
      "path": "8"
    },
    "2807": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "POP",
      "path": "8"
    },
    "2808": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "POP",
      "path": "8"
    },
    "2809": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2811": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2812": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2813": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2815": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "NOT",
      "path": "8"
    },
    "2816": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2818": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2819": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "ADD",
      "path": "8"
    },
    "2820": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "AND",
      "path": "8"
    },
    "2821": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2822": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "ADD",
      "path": "8"
    },
    "2823": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2824": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2826": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2827": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "POP",
      "path": "8"
    },
    "2828": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2829": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "ADD",
      "path": "8"
    },
    "2830": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2831": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB18"
    },
    "2834": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2835": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2836": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1956"
    },
    "2839": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10219,
        10354
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2840": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10219,
        10354
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10383
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 22,
      "value": "0xA"
    },
    "2844": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10383
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2845": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2847": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2848": {
      "op": "PUSH4",
      "value": "0x3D14D1B7"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2857": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2864": {
      "op": "SHL"
    },
    "2865": {
      "op": "SUB"
    },
    "2866": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10383
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2867": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10383
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2868": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10383
      ],
      "op": "AND",
      "path": "8"
    },
    "2869": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10383
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2870": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10391
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF45346DC"
    },
    "2875": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10391
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2876": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB4D"
    },
    "2879": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2880": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10392,
        10397
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2881": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10392,
        10397
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2882": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10399,
        10410
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2883": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10399,
        10410
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2884": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10420,
        10424
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "2885": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10420,
        10424
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2886": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2888": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "ADD",
      "path": "8"
    },
    "2889": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D1"
    },
    "2892": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        10368,
        10426
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2893": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2894": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2896": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2898": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2899": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2900": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2901": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "SUB",
      "path": "8"
    },
    "2902": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2903": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2905": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2906": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2907": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "2908": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2909": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2910": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2911": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB67"
    },
    "2914": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2915": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2917": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2918": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2919": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2920": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "POP",
      "path": "8"
    },
    "2921": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "GAS",
      "path": "8"
    },
    "2922": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "CALL",
      "path": "8"
    },
    "2923": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2924": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2925": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2926": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB7B"
    },
    "2929": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2930": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2931": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2933": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2934": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2935": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2936": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2938": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2939": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2940": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "POP",
      "path": "8"
    },
    "2941": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "POP",
      "path": "8"
    },
    "2942": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "POP",
      "path": "8"
    },
    "2943": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10368,
        10426
      ],
      "op": "POP",
      "path": "8"
    },
    "2944": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9935,
        10437
      ],
      "op": "POP",
      "path": "8"
    },
    "2945": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9935,
        10437
      ],
      "op": "POP",
      "path": "8"
    },
    "2946": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 23
    },
    "2947": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2948": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB8C"
    },
    "2951": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2952": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "2955": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "i",
      "offset": [
        9930,
        9933
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2956": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2957": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2958": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "POP",
      "path": "8"
    },
    "2959": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9930,
        9933
      ],
      "op": "POP",
      "path": "8"
    },
    "2960": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9FA"
    },
    "2963": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2964": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9884,
        10437
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 24,
      "value": "0x40"
    },
    "2968": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2969": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "op": "DUP1"
    },
    "2979": {
      "op": "DUP6"
    },
    "2980": {
      "op": "AND"
    },
    "2981": {
      "op": "DUP3"
    },
    "2982": {
      "op": "MSTORE"
    },
    "2983": {
      "op": "DUP4"
    },
    "2984": {
      "op": "AND"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2987": {
      "op": "DUP3"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "MSTORE"
    },
    "2990": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x7B3BD21A9C66CB98F4889DA8283172936ABD92A905D81830738B651EEE374D35"
    },
    "3023": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3027": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3028": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3029": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3030": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "SUB",
      "path": "8"
    },
    "3031": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3032": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        10451,
        10507
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3033": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9413,
        10514
      ],
      "op": "POP",
      "path": "8"
    },
    "3034": {
      "fn": "StakingContract.changeLendingProtocol",
      "offset": [
        9314,
        10514
      ],
      "op": "POP",
      "path": "8"
    },
    "3035": {
      "fn": "StakingContract.changeLendingProtocol",
      "jump": "o",
      "offset": [
        9314,
        10514
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3036": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3452,
        4539
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3046": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "AND",
      "path": "8"
    },
    "3047": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3543,
        3558
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3049": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3050": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3051": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3052": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3575
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3054": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3056": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3057": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3058": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3059": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3061": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3062": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3063": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3583
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3064": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3584,
        3594
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3065": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3066": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3067": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3068": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3069": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3070": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3071": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3072": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3561,
        3595
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3073": {
      "branch": 66,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3613,
        3624
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 25
    },
    "3074": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC61"
    },
    "3077": {
      "branch": 66,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3078": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3080": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3087": {
      "op": "SHL"
    },
    "3088": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3089": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3092": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3094": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3095": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "ADD",
      "path": "8"
    },
    "3096": {
      "op": "MSTORE"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3101": {
      "op": "DUP3"
    },
    "3102": {
      "op": "ADD"
    },
    "3103": {
      "op": "MSTORE"
    },
    "3104": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A205374616B696E672062616C616E6365"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3139": {
      "op": "DUP3"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "op": "MSTORE"
    },
    "3142": {
      "op": "PUSH11",
      "value": "0x20616C7265616479203021"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3156": {
      "op": "SHL"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3159": {
      "op": "DUP3"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "3168": {
      "op": "JUMP"
    },
    "3169": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3605,
        3672
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3170": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3714,
        3756
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 26,
      "value": "0xC6B"
    },
    "3173": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3737,
        3747
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3174": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3749,
        3755
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3175": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3714,
        3736
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142F"
    },
    "3178": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3714,
        3756
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3179": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3714,
        3756
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "op": "SUB"
    },
    "3188": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 27
    },
    "3189": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "AND",
      "path": "8"
    },
    "3190": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3835,
        3836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3192": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3193": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3194": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3195": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3812
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3197": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3199": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3200": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3201": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3202": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3204": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3205": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3206": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3820
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3207": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3821,
        3831
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3208": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3209": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3210": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3211": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3212": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3213": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3214": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3832
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3215": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3836
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3216": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3836
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3217": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3798,
        3836
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3218": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3897
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 28,
      "value": "0x5"
    },
    "3220": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3909
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3221": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3909
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3222": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3909
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3223": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3909
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3224": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3909
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3225": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3909
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3226": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3913
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCA5"
    },
    "3229": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3913
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3230": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3912,
        3913
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3232": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3912,
        3913
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3233": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3913
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x196F"
    },
    "3236": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        3879,
        3913
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3237": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3879,
        3913
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3238": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3865,
        3875
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3239": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3241": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3242": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3243": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3244": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3864
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "3246": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3248": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3249": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3251": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3252": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3876
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3253": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3913
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3254": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3913
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3255": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3846,
        3913
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3256": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3923,
        4238
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC6"
    },
    "3259": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3923,
        4238
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3260": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3983,
        3992
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3262": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3263": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4002,
        4009
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3265": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4002,
        4016
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3266": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3998,
        4016
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3267": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3998,
        4016
      ],
      "op": "LT",
      "path": "8"
    },
    "3268": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3269": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDC4"
    },
    "3272": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3273": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4059,
        4069
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3280": {
      "op": "SHL"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4069
      ],
      "op": "AND",
      "path": "8"
    },
    "3283": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4052
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3285": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4053,
        4054
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3286": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3287": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3288": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3289": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "LT",
      "path": "8"
    },
    "3290": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCE5"
    },
    "3293": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3294": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCE5"
    },
    "3297": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "3300": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4045,
        4055
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3301": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3302": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3304": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3305": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3306": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3307": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3309": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3310": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3311": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3312": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "ADD",
      "path": "8"
    },
    "3313": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "SUB"
    },
    "3322": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4055
      ],
      "op": "AND",
      "path": "8"
    },
    "3323": {
      "branch": 67,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4045,
        4069
      ],
      "op": "EQ",
      "path": "8"
    },
    "3324": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4041,
        4214
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3325": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4041,
        4214
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDB2"
    },
    "3328": {
      "branch": 67,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4041,
        4214
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3329": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4113
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 29,
      "value": "0x2"
    },
    "3331": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4114,
        4128
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3332": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4114,
        4128
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3333": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4114,
        4132
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD10"
    },
    "3336": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4114,
        4132
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3337": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4131,
        4132
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3339": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4131,
        4132
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3340": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4114,
        4132
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x196F"
    },
    "3343": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4114,
        4132
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3344": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4114,
        4132
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3345": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3346": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3347": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3348": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "LT",
      "path": "8"
    },
    "3349": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD20"
    },
    "3352": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3353": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD20"
    },
    "3356": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "3359": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4106,
        4133
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3360": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3361": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3363": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3364": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3365": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3366": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3368": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3369": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3370": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3371": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "ADD",
      "path": "8"
    },
    "3372": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3373": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4100
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3375": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3376": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3386": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3387": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "AND",
      "path": "8"
    },
    "3388": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4106,
        4133
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3389": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4101,
        4102
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3390": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4101,
        4102
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3391": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3392": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "LT",
      "path": "8"
    },
    "3393": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD4C"
    },
    "3396": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3397": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD4C"
    },
    "3400": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "3403": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4093,
        4103
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3404": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3405": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3406": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3408": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3409": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3411": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3413": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3414": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "ADD",
      "path": "8"
    },
    "3415": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3417": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "3420": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "EXP",
      "path": "8"
    },
    "3421": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3422": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3423": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "MUL",
      "path": "8"
    },
    "3433": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "NOT",
      "path": "8"
    },
    "3434": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "AND",
      "path": "8"
    },
    "3435": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3436": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3443": {
      "op": "SHL"
    },
    "3444": {
      "op": "SUB"
    },
    "3445": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "AND",
      "path": "8"
    },
    "3446": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "MUL",
      "path": "8"
    },
    "3447": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "OR",
      "path": "8"
    },
    "3448": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3449": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3450": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4093,
        4133
      ],
      "op": "POP",
      "path": "8"
    },
    "3451": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4162
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 30,
      "value": "0x2"
    },
    "3453": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3454": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3455": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3456": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD8B"
    },
    "3459": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3460": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD8B"
    },
    "3463": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1986"
    },
    "3466": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4155,
        4168
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3467": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3468": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3470": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3471": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3472": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3473": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3475": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3476": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3477": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3478": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "ADD",
      "path": "8"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3481": {
      "op": "NOT"
    },
    "3482": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3483": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3484": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "ADD",
      "path": "8"
    },
    "3485": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3486": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3493": {
      "op": "SHL"
    },
    "3494": {
      "op": "SUB"
    },
    "3495": {
      "op": "NOT"
    },
    "3496": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "AND",
      "path": "8"
    },
    "3497": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3498": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3499": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "ADD",
      "path": "8"
    },
    "3500": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3501": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4155,
        4168
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3502": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4190,
        4195
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 31,
      "value": "0xDC4"
    },
    "3505": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4190,
        4195
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3506": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4041,
        4214
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3507": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 32
    },
    "3508": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDBC"
    },
    "3511": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3512": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "3515": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4018,
        4021
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3516": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3517": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3518": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "POP",
      "path": "8"
    },
    "3519": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4018,
        4021
      ],
      "op": "POP",
      "path": "8"
    },
    "3520": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCBE"
    },
    "3523": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3524": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3525": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3978,
        4228
      ],
      "op": "POP",
      "path": "8"
    },
    "3526": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        3923,
        4238
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3527": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4376
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 33,
      "value": "0xA"
    },
    "3529": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4376
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3530": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3532": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3533": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3540": {
      "op": "SHL"
    },
    "3541": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3542": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3543": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4417,
        4418
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3545": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4417,
        4418
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "op": "SUB"
    },
    "3554": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4376
      ],
      "op": "AND",
      "path": "8"
    },
    "3555": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4376
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3556": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4385
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x69328DEC"
    },
    "3561": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4385
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3562": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDFB"
    },
    "3565": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3566": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4386,
        4392
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3567": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4386,
        4392
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3568": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4394,
        4401
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3569": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4394,
        4401
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3570": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4403,
        4413
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3571": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4403,
        4413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3572": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3574": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "ADD",
      "path": "8"
    },
    "3575": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D1"
    },
    "3578": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4361,
        4414
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3579": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3580": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3582": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3584": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3585": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3586": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3587": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "SUB",
      "path": "8"
    },
    "3588": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3589": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3591": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3592": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "GAS",
      "path": "8"
    },
    "3593": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "CALL",
      "path": "8"
    },
    "3594": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3595": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3596": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3597": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE1A"
    },
    "3600": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3601": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3602": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3604": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3605": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3606": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3607": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3609": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3610": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3611": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "POP",
      "path": "8"
    },
    "3612": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "POP",
      "path": "8"
    },
    "3613": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "POP",
      "path": "8"
    },
    "3614": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "POP",
      "path": "8"
    },
    "3615": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3617": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3618": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3619": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3621": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "NOT",
      "path": "8"
    },
    "3622": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3624": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3625": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "ADD",
      "path": "8"
    },
    "3626": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "AND",
      "path": "8"
    },
    "3627": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3628": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "ADD",
      "path": "8"
    },
    "3629": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3630": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3632": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3633": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "POP",
      "path": "8"
    },
    "3634": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3635": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "ADD",
      "path": "8"
    },
    "3636": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3637": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE3E"
    },
    "3640": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3641": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3642": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1956"
    },
    "3645": {
      "fn": "StakingContract.unstakeTokens",
      "jump": "i",
      "offset": [
        4361,
        4414
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3646": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3647": {
      "branch": 68,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4361,
        4418
      ],
      "op": "GT",
      "path": "8"
    },
    "3648": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE8B"
    },
    "3651": {
      "branch": 68,
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3652": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3654": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3661": {
      "op": "SHL"
    },
    "3662": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3663": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3666": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3668": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3669": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "ADD",
      "path": "8"
    },
    "3670": {
      "op": "MSTORE"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3675": {
      "op": "DUP3"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "MSTORE"
    },
    "3678": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A207769746864726177206572726F7200"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "MSTORE"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "3722": {
      "op": "JUMP"
    },
    "3723": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4340,
        4475
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3724": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 34,
      "value": "0x40"
    },
    "3726": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3727": {
      "op": "DUP2"
    },
    "3728": {
      "op": "DUP2"
    },
    "3729": {
      "op": "MSTORE"
    },
    "3730": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4512,
        4522
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3731": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4512,
        4522
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "op": "SUB"
    },
    "3740": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3741": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "AND",
      "path": "8"
    },
    "3742": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3743": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x4C5A68DF1E54DD796657DC5832C88515A36DC92548AF9951A0EF38DD61A3322E"
    },
    "3776": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "ADD"
    },
    "3780": {
      "fn": "StakingContract.unstakeTokens",
      "offset": [
        4490,
        4532
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x86B"
    },
    "3783": {
      "op": "JUMP"
    },
    "3784": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4596,
        4979
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3785": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4722,
        4753
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 35,
      "value": "0xED1"
    },
    "3788": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4742,
        4752
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3789": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4722,
        4741
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1500"
    },
    "3792": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        4722,
        4753
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3793": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4722,
        4753
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3794": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4793,
        4803
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3795": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4763,
        4777
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3797": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3798": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3799": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3800": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4792
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "3802": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3804": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3805": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3807": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3808": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3809": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3810": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3811": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3812": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4814,
        4842
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 36
    },
    "3813": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4814,
        4842
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3814": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4814,
        4842
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4885
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 37
    },
    "3818": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3819": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3820": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3827": {
      "op": "SHL"
    },
    "3828": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3829": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3830": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3832": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3833": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3834": {
      "op": "SWAP4"
    },
    "3835": {
      "op": "SWAP1"
    },
    "3836": {
      "op": "SWAP4"
    },
    "3837": {
      "op": "MSTORE"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3840": {
      "op": "DUP4"
    },
    "3841": {
      "op": "ADD"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "SWAP1"
    },
    "3844": {
      "op": "MSTORE"
    },
    "3845": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3846": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4780,
        4804
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3853": {
      "op": "SHL"
    },
    "3854": {
      "op": "SUB"
    },
    "3855": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4885
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3856": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4885
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3857": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4885
      ],
      "op": "AND",
      "path": "8"
    },
    "3858": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4885
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3859": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4894
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "3864": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4894
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3870": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3872": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3873": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3874": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3875": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "SUB",
      "path": "8"
    },
    "3876": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3877": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3879": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3880": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "GAS",
      "path": "8"
    },
    "3881": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "CALL",
      "path": "8"
    },
    "3882": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3883": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3884": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3885": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF3A"
    },
    "3888": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3889": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3890": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3892": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3893": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3894": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3895": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3897": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3898": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3899": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3900": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3901": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3902": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3903": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3905": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3906": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3907": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3909": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "NOT",
      "path": "8"
    },
    "3910": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3912": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3913": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3914": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "AND",
      "path": "8"
    },
    "3915": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3916": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3917": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3918": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3920": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3921": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "POP",
      "path": "8"
    },
    "3922": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3923": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "ADD",
      "path": "8"
    },
    "3924": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3925": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF5E"
    },
    "3928": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3929": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3930": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1740"
    },
    "3933": {
      "fn": "StakingContract.claimToken",
      "jump": "i",
      "offset": [
        4873,
        4914
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3934": {
      "branch": 69,
      "fn": "StakingContract.claimToken",
      "offset": [
        4873,
        4914
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3935": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFAA"
    },
    "3938": {
      "branch": 69,
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3939": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3941": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3948": {
      "op": "SHL"
    },
    "3949": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3950": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3953": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3955": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3956": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "ADD",
      "path": "8"
    },
    "3957": {
      "op": "DUP2"
    },
    "3958": {
      "op": "SWAP1"
    },
    "3959": {
      "op": "MSTORE"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3962": {
      "op": "DUP3"
    },
    "3963": {
      "op": "ADD"
    },
    "3964": {
      "op": "MSTORE"
    },
    "3965": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A207472616E73666572206661696C6564"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4000": {
      "op": "DUP3"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F5"
    },
    "4009": {
      "op": "JUMP"
    },
    "4010": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4852,
        4972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4011": {
      "fn": "StakingContract.claimToken",
      "offset": [
        4627,
        4979
      ],
      "op": "POP",
      "path": "8"
    },
    "4012": {
      "fn": "StakingContract.claimToken",
      "jump": "o",
      "offset": [
        4596,
        4979
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4013": {
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4014": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4016": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4017": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4018": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4019": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4020": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "LT",
      "path": "8"
    },
    "4021": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFBD"
    },
    "4024": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4025": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4027": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4028": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4029": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4030": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4032": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4033": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4034": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4035": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4037": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4038": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4039": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4040": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "ADD",
      "path": "8"
    },
    "4041": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "SUB"
    },
    "4050": {
      "offset": [
        395,
        425
      ],
      "op": "AND",
      "path": "8"
    },
    "4051": {
      "fn": "StakingContract.claimToken",
      "offset": [
        395,
        425
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4052": {
      "op": "POP"
    },
    "4053": {
      "offset": [
        395,
        425
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4054": {
      "fn": "StakingContract.claimToken",
      "jump": "o",
      "offset": [
        395,
        425
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4055": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4056": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4058": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "op": "SUB"
    },
    "4067": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4068": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4069": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4070": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1001"
    },
    "4073": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4074": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4076": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4083": {
      "op": "SHL"
    },
    "4084": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4085": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4086": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4088": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4089": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4092": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4093": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170B"
    },
    "4096": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4097": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4098": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x100B"
    },
    "4101": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4103": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "4106": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4107": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4108": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4109": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7656,
        7818
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4110": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4112": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4119": {
      "op": "SHL"
    },
    "4120": {
      "op": "SUB"
    },
    "4121": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4122": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4123": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4124": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1037"
    },
    "4127": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4128": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4130": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4139": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4140": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4142": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4143": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4146": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4147": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170B"
    },
    "4150": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4151": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4158": {
      "op": "SHL"
    },
    "4159": {
      "op": "SUB"
    },
    "4160": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 39
    },
    "4161": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4162": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "AND",
      "path": "8"
    },
    "4163": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4165": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4166": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4167": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4168": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7790
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4170": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4172": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4173": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4175": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4176": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7798
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4177": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4178": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4185": {
      "op": "SHL"
    },
    "4186": {
      "op": "SUB"
    },
    "4187": {
      "op": "NOT"
    },
    "4188": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "AND",
      "path": "8"
    },
    "4189": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4190": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4191": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4192": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "AND",
      "path": "8"
    },
    "4193": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "OR",
      "path": "8"
    },
    "4194": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4195": {
      "fn": "StakingContract.setPriceFeedContract",
      "offset": [
        7769,
        7811
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4196": {
      "fn": "StakingContract.setPriceFeedContract",
      "jump": "o",
      "offset": [
        7656,
        7818
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4197": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4207": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "AND",
      "path": "8"
    },
    "4208": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5676,
        5683
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4210": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4211": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4212": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4213": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5717
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "4215": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4217": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4218": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4220": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4221": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4222": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5699,
        5724
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4223": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5695,
        5764
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x108A"
    },
    "4226": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5695,
        5764
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5752,
        5753
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x0"
    },
    "4230": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5752,
        5753
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4231": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4232": {
      "op": "POP"
    },
    "4233": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "o",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4234": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5695,
        5764
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4235": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5773,
        5791
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4237": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5843,
        5852
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4238": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4239": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5862,
        5875
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4241": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5862,
        5882
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4242": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5858,
        5882
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4243": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5858,
        5882
      ],
      "op": "LT",
      "path": "8"
    },
    "4244": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4245": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10E7"
    },
    "4248": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4249": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5917,
        5965
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 41,
      "value": "0x10C9"
    },
    "4252": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5941,
        5946
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4253": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5961
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4255": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5962,
        5963
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4256": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4257": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4258": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4259": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "LT",
      "path": "8"
    },
    "4260": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AF"
    },
    "4263": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4264": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10AF"
    },
    "4267": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "4270": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5948,
        5964
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4271": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4272": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4274": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4275": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4276": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4277": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4279": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4280": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4281": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4282": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "ADD",
      "path": "8"
    },
    "4283": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "op": "SUB"
    },
    "4292": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5948,
        5964
      ],
      "op": "AND",
      "path": "8"
    },
    "4293": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5917,
        5940
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "4296": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5917,
        5965
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4297": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5917,
        5965
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4298": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5903,
        5965
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D3"
    },
    "4301": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5903,
        5965
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4302": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5903,
        5965
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4303": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5903,
        5965
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B9"
    },
    "4306": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5903,
        5965
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4307": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5903,
        5965
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4308": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5903,
        5965
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 42
    },
    "4311": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10DF"
    },
    "4314": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4315": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "4318": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "i",
      "offset": [
        5884,
        5887
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4319": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4320": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4321": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "POP",
      "path": "8"
    },
    "4322": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5884,
        5887
      ],
      "op": "POP",
      "path": "8"
    },
    "4323": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x108E"
    },
    "4326": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4327": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5838,
        5976
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4328": {
      "op": "POP"
    },
    "4329": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5992,
        6002
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 43
    },
    "4330": {
      "fn": "StakingContract.getUserTotalValue",
      "offset": [
        5613,
        6009
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4331": {
      "op": "POP"
    },
    "4332": {
      "op": "POP"
    },
    "4333": {
      "fn": "StakingContract.getUserTotalValue",
      "jump": "o",
      "offset": [
        5613,
        6009
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4334": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4335": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5216,
        5220
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4337": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5216,
        5220
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4338": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4339": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5256,
        5269
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4341": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5256,
        5276
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4342": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5252,
        5276
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4343": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5252,
        5276
      ],
      "op": "LT",
      "path": "8"
    },
    "4344": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4345": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x114F"
    },
    "4348": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4349": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5321,
        5327
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4356": {
      "op": "SHL"
    },
    "4357": {
      "op": "SUB"
    },
    "4358": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5327
      ],
      "op": "AND",
      "path": "8"
    },
    "4359": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5314
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4361": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5315,
        5316
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4362": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4363": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4364": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4365": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "LT",
      "path": "8"
    },
    "4366": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1119"
    },
    "4369": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4370": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1119"
    },
    "4373": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "4376": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5301,
        5317
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4377": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4378": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4380": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4381": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4382": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4383": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4385": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4386": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4387": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4388": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "ADD",
      "path": "8"
    },
    "4389": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4396": {
      "op": "SHL"
    },
    "4397": {
      "op": "SUB"
    },
    "4398": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5317
      ],
      "op": "AND",
      "path": "8"
    },
    "4399": {
      "branch": 70,
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5301,
        5327
      ],
      "op": "EQ",
      "path": "8"
    },
    "4400": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5297,
        5373
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4401": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5297,
        5373
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x113D"
    },
    "4404": {
      "branch": 70,
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5297,
        5373
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4405": {
      "op": "POP"
    },
    "4406": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5354,
        5358
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x1"
    },
    "4408": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5354,
        5358
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4409": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4410": {
      "op": "POP"
    },
    "4411": {
      "op": "POP"
    },
    "4412": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4413": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5297,
        5373
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4414": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 45
    },
    "4415": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1147"
    },
    "4418": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4419": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "4422": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5278,
        5281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4423": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4424": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4425": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "POP",
      "path": "8"
    },
    "4426": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5278,
        5281
      ],
      "op": "POP",
      "path": "8"
    },
    "4427": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10F2"
    },
    "4430": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4431": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5232,
        5383
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4432": {
      "op": "POP"
    },
    "4433": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5399,
        5404
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 46,
      "value": "0x0"
    },
    "4435": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5399,
        5404
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4436": {
      "fn": "StakingContract.tokenIsAllowed",
      "offset": [
        5155,
        5411
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4437": {
      "op": "POP"
    },
    "4438": {
      "op": "POP"
    },
    "4439": {
      "fn": "StakingContract.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5155,
        5411
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4440": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4447": {
      "op": "SHL"
    },
    "4448": {
      "op": "SUB"
    },
    "4449": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4450": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4451": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "AND",
      "path": "8"
    },
    "4452": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4454": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4455": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4456": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4457": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7126
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "4459": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4461": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4462": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4464": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4465": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4466": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4467": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4468": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4469": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4470": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4477": {
      "op": "SHL"
    },
    "4478": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4479": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4480": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4481": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4482": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4483": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4484": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4485": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4486": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4487": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "AND",
      "path": "8"
    },
    "4488": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4489": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4490": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4491": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4492": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7046,
        7053
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4493": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4494": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4495": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7299
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFEAF968C"
    },
    "4500": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7299
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4501": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4503": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4504": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4505": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ADD",
      "path": "8"
    },
    "4506": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4507": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA0"
    },
    "4509": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4510": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4511": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4512": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4513": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4514": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4515": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SUB",
      "path": "8"
    },
    "4516": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ADD",
      "path": "8"
    },
    "4517": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4518": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7105,
        7134
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4519": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "GAS",
      "path": "8"
    },
    "4520": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4521": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4522": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4523": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4524": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11B9"
    },
    "4527": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4528": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4529": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4531": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4532": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4533": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4534": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4536": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4537": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4538": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4539": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4540": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4541": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4542": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4544": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4545": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4546": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4548": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "NOT",
      "path": "8"
    },
    "4549": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4551": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4552": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ADD",
      "path": "8"
    },
    "4553": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "AND",
      "path": "8"
    },
    "4554": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4555": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ADD",
      "path": "8"
    },
    "4556": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4557": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4559": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4560": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4561": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4562": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "ADD",
      "path": "8"
    },
    "4563": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4564": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11DD"
    },
    "4567": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4568": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4569": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19B6"
    },
    "4572": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        7274,
        7301
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4573": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7274,
        7301
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4574": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7249,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4575": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7249,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4576": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7249,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4577": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7249,
        7301
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4578": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7249,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4579": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7249,
        7301
      ],
      "op": "POP",
      "path": "8"
    },
    "4580": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7311,
        7327
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4582": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7347
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4589": {
      "op": "SHL"
    },
    "4590": {
      "op": "SUB"
    },
    "4591": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7356
      ],
      "op": "AND",
      "path": "8"
    },
    "4592": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7356
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x313CE567"
    },
    "4597": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4599": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4600": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4601": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "4606": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "AND",
      "path": "8"
    },
    "4607": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "4609": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "SHL",
      "path": "8"
    },
    "4610": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4611": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4612": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4614": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "ADD",
      "path": "8"
    },
    "4615": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4617": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4619": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4620": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4621": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4622": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "SUB",
      "path": "8"
    },
    "4623": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4624": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4625": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "GAS",
      "path": "8"
    },
    "4626": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "4627": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4628": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4629": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4630": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1223"
    },
    "4633": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4634": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4635": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4637": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4638": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "4639": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4640": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4642": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4643": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4644": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "POP",
      "path": "8"
    },
    "4645": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "POP",
      "path": "8"
    },
    "4646": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "POP",
      "path": "8"
    },
    "4647": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "POP",
      "path": "8"
    },
    "4648": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4650": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4651": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "4652": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4654": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "NOT",
      "path": "8"
    },
    "4655": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "4657": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4658": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "ADD",
      "path": "8"
    },
    "4659": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "AND",
      "path": "8"
    },
    "4660": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4661": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "ADD",
      "path": "8"
    },
    "4662": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4663": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4665": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4666": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "POP",
      "path": "8"
    },
    "4667": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4668": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "ADD",
      "path": "8"
    },
    "4669": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4670": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1247"
    },
    "4673": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4674": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4675": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A06"
    },
    "4678": {
      "fn": "StakingContract.getTokenValue",
      "jump": "i",
      "offset": [
        7338,
        7358
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4679": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7338,
        7358
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4680": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7385,
        7390
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 47
    },
    "4681": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7385,
        7390
      ],
      "op": "SWAP8",
      "path": "8"
    },
    "4682": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7330,
        7359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "4684": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7330,
        7359
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4685": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7330,
        7359
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4686": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7330,
        7359
      ],
      "op": "AND",
      "path": "8"
    },
    "4687": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7330,
        7359
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7385,
        7390
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4690": {
      "fn": "StakingContract.getTokenValue",
      "offset": [
        7385,
        7390
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4691": {
      "op": "POP"
    },
    "4692": {
      "op": "POP"
    },
    "4693": {
      "op": "POP"
    },
    "4694": {
      "op": "POP"
    },
    "4695": {
      "op": "POP"
    },
    "4696": {
      "fn": "StakingContract.getTokenValue",
      "jump": "o",
      "offset": [
        6962,
        7409
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4698": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4700": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4707": {
      "op": "SHL"
    },
    "4708": {
      "op": "SUB"
    },
    "4709": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4710": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4711": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4712": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1283"
    },
    "4715": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4716": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4718": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4725": {
      "op": "SHL"
    },
    "4726": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4727": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4728": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4730": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4731": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4734": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4735": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170B"
    },
    "4738": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4739": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4746": {
      "op": "SHL"
    },
    "4747": {
      "op": "SUB"
    },
    "4748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 48
    },
    "4749": {
      "branch": 73,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E8"
    },
    "4753": {
      "branch": 73,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4757": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4763": {
      "op": "SHL"
    },
    "4764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4772": {
      "op": "MSTORE"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4777": {
      "op": "DUP3"
    },
    "4778": {
      "op": "ADD"
    },
    "4779": {
      "op": "MSTORE"
    },
    "4780": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4815": {
      "op": "DUP3"
    },
    "4816": {
      "op": "ADD"
    },
    "4817": {
      "op": "MSTORE"
    },
    "4818": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4827": {
      "op": "SHL"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4830": {
      "op": "DUP3"
    },
    "4831": {
      "op": "ADD"
    },
    "4832": {
      "op": "MSTORE"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4835": {
      "op": "ADD"
    },
    "4836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4839": {
      "op": "JUMP"
    },
    "4840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0xFAA"
    },
    "4844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "4848": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4849": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4850": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4852": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4859": {
      "op": "SHL"
    },
    "4860": {
      "op": "SUB"
    },
    "4861": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4862": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4863": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4864": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131B"
    },
    "4867": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4868": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4870": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4879": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4880": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4882": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4883": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F5"
    },
    "4886": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4887": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170B"
    },
    "4890": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4891": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4892": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8865,
        8874
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4894": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4895": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8884,
        8891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4897": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8884,
        8898
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4898": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8880,
        8898
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4899": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8880,
        8898
      ],
      "op": "LT",
      "path": "8"
    },
    "4900": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4901": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13C5"
    },
    "4904": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4911": {
      "op": "SHL"
    },
    "4912": {
      "op": "SUB"
    },
    "4913": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4914": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "AND",
      "path": "8"
    },
    "4915": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8960,
        8961
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4917": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4918": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4919": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4920": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8937
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4922": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4924": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4925": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4927": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4928": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8945
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4929": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8953
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4931": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4932": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4933": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8960,
        8961
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4934": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8960,
        8961
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4935": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8953
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4936": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8954,
        8955
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4937": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8954,
        8955
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4938": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4939": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "LT",
      "path": "8"
    },
    "4940": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1357"
    },
    "4943": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4944": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1357"
    },
    "4947": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "4950": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8946,
        8956
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4951": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4952": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4954": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4955": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4956": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4957": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4959": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4960": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4961": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4962": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4963": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4964": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "ADD",
      "path": "8"
    },
    "4965": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8946,
        8956
      ],
      "op": "AND",
      "path": "8"
    },
    "4975": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4976": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4977": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4978": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "ADD",
      "path": "8"
    },
    "4979": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4980": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4981": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4982": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4983": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4985": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "ADD",
      "path": "8"
    },
    "4986": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4987": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4988": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8957
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4989": {
      "branch": 71,
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8923,
        8961
      ],
      "op": "GT",
      "path": "8"
    },
    "4990": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8919,
        9038
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4991": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8919,
        9038
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13B3"
    },
    "4994": {
      "branch": 71,
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8919,
        9038
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4995": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8981,
        9023
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 50,
      "value": "0x13B3"
    },
    "4998": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9011
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5000": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9012,
        9013
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5001": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5002": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5003": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5004": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "LT",
      "path": "8"
    },
    "5005": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1398"
    },
    "5008": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5009": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1398"
    },
    "5012": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "5015": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        9004,
        9014
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5016": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5017": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5019": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5020": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5021": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5022": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5024": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5025": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5026": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5027": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "ADD",
      "path": "8"
    },
    "5028": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5035": {
      "op": "SHL"
    },
    "5036": {
      "op": "SUB"
    },
    "5037": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9004,
        9014
      ],
      "op": "AND",
      "path": "8"
    },
    "5038": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9016,
        9022
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5039": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8981,
        9003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142F"
    },
    "5042": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8981,
        9023
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5043": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8981,
        9023
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5044": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 51
    },
    "5045": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13BD"
    },
    "5048": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5049": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "5052": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "i",
      "offset": [
        8900,
        8903
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5053": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5054": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5055": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "POP",
      "path": "8"
    },
    "5056": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8900,
        8903
      ],
      "op": "POP",
      "path": "8"
    },
    "5057": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x131E"
    },
    "5060": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5061": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8860,
        9048
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5069": {
      "op": "SHL"
    },
    "5070": {
      "op": "SUB"
    },
    "5071": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 52
    },
    "5072": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "AND",
      "path": "8"
    },
    "5073": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5075": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5076": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5077": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5078": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9096
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5080": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5082": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5083": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5085": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5086": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5087": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5088": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9104
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5089": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9120
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5090": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9120
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5091": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9080,
        9120
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5092": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "MLOAD",
      "path": "8",
      "statement": 53
    },
    "5093": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x954FD12529F1A0A3258B2FD42316D6564987047F4F637F8EA9E434E3F5F5DEA0"
    },
    "5126": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5127": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1413"
    },
    "5130": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5131": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9107,
        9120
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "MSTORE"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "op": "SWAP1"
    },
    "5138": {
      "op": "JUMP"
    },
    "5139": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5140": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5142": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5143": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5144": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5145": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "SUB",
      "path": "8"
    },
    "5146": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5147": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        9135,
        9173
      ],
      "op": "LOG2",
      "path": "8"
    },
    "5148": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "POP",
      "path": "8"
    },
    "5149": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        8601,
        9180
      ],
      "op": "POP",
      "path": "8"
    },
    "5150": {
      "fn": "StakingContract.updateYieldRate",
      "jump": "o",
      "offset": [
        8601,
        9180
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5151": {
      "offset": [
        365,
        389
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5152": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5154": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5155": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5156": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5157": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5158": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "LT",
      "path": "8"
    },
    "5159": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFBD"
    },
    "5162": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5163": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5165": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5166": {
      "fn": "StakingContract.updateYieldRate",
      "offset": [
        365,
        389
      ],
      "op": "REVERT",
      "path": "8"
    },
    "5167": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11144,
        11778
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5174": {
      "op": "SHL"
    },
    "5175": {
      "op": "SUB"
    },
    "5176": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5177": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5178": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "AND",
      "path": "8"
    },
    "5179": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11226,
        11253
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5181": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5182": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5183": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5184": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11288
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "5186": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5188": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5189": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5190": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5191": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5193": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5194": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5195": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5196": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5197": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5198": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "AND",
      "path": "8"
    },
    "5199": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5200": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5201": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5202": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5203": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5204": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5205": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5206": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5207": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5208": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5209": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11385,
        11400
      ],
      "op": "TIMESTAMP",
      "path": "8",
      "statement": 54
    },
    "5210": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11335,
        11400
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5211": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11335,
        11400
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5212": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11335,
        11400
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5213": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5214": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11433,
        11471
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1467"
    },
    "5217": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11295
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5218": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11256,
        11325
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5219": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11433,
        11456
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x877"
    },
    "5222": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11433,
        11471
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5223": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11433,
        11471
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5224": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11411,
        11471
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11481,
        11493
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5228": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11496,
        11533
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1475"
    },
    "5231": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11514,
        11533
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5232": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11496,
        11511
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "5233": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11496,
        11533
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x196F"
    },
    "5236": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11496,
        11533
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5237": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11496,
        11533
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5244": {
      "op": "SHL"
    },
    "5245": {
      "op": "SUB"
    },
    "5246": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5247": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "AND",
      "path": "8"
    },
    "5248": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11543,
        11554
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5250": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5251": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5252": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5253": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11614
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "5255": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5257": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5258": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5260": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5261": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5262": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5263": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11481,
        11533
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5264": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11481,
        11533
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5265": {
      "op": "POP"
    },
    "5266": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11557,
        11563
      ],
      "op": "PUSH3",
      "path": "8",
      "value": "0x15180"
    },
    "5270": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11557,
        11563
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5271": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5272": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11557,
        11563
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5273": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11711,
        11715
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E8"
    },
    "5276": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11598,
        11622
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5277": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11678
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14A6"
    },
    "5280": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11481,
        11533
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5281": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11671
      ],
      "op": "DUP10",
      "path": "8"
    },
    "5282": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11678
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18E4"
    },
    "5285": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11660,
        11678
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5286": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11678
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5287": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11695
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14B0"
    },
    "5290": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11695
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5291": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11695
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5292": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11695
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18E4"
    },
    "5295": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11660,
        11695
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5296": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11660,
        11695
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5297": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11659,
        11715
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14BA"
    },
    "5300": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11659,
        11715
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5301": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11659,
        11715
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5302": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11659,
        11715
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1903"
    },
    "5305": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11659,
        11715
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5306": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11659,
        11715
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5307": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11658,
        11722
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14C4"
    },
    "5310": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11658,
        11722
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5311": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11658,
        11722
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5312": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11658,
        11722
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1903"
    },
    "5315": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11658,
        11722
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5316": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11658,
        11722
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5323": {
      "op": "SHL"
    },
    "5324": {
      "op": "SUB"
    },
    "5325": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "DUP10",
      "path": "8",
      "statement": 55
    },
    "5326": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "AND",
      "path": "8"
    },
    "5327": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5329": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5330": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5331": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5332": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11745
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "5334": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5336": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5337": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5339": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5340": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5341": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5342": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5343": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11632,
        11722
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5344": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11632,
        11722
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5345": {
      "op": "POP"
    },
    "5346": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11632,
        11722
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5347": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11632,
        11722
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5348": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5349": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5350": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11752
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5351": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F1"
    },
    "5354": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5355": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11632,
        11722
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5356": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11632,
        11722
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5357": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B9"
    },
    "5360": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "i",
      "offset": [
        11733,
        11771
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5361": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5362": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5363": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5364": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "offset": [
        11733,
        11771
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5365": {
      "op": "POP"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "op": "POP"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "op": "POP"
    },
    "5370": {
      "op": "POP"
    },
    "5371": {
      "op": "POP"
    },
    "5372": {
      "op": "POP"
    },
    "5373": {
      "op": "POP"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "fn": "StakingContract._updateOneTokenToClaim",
      "jump": "o",
      "offset": [
        11144,
        11778
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5376": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10671,
        10977
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5377": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10772,
        10781
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5379": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5380": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10791,
        10804
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5382": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10791,
        10811
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5383": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10787,
        10811
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5384": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10787,
        10811
      ],
      "op": "LT",
      "path": "8"
    },
    "5385": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5386": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15A4"
    },
    "5389": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5390": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10878,
        10879
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5392": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10850
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5394": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5396": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10864
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5398": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10865,
        10866
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5399": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5400": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5401": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5402": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "LT",
      "path": "8"
    },
    "5403": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1526"
    },
    "5406": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5407": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1526"
    },
    "5410": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "5413": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10851,
        10867
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5414": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5415": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5417": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5418": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5419": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5420": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5422": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5423": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5424": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5425": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5426": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5427": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "ADD",
      "path": "8"
    },
    "5428": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5435": {
      "op": "SHL"
    },
    "5436": {
      "op": "SUB"
    },
    "5437": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5438": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5439": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10851,
        10867
      ],
      "op": "AND",
      "path": "8"
    },
    "5440": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5441": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5442": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5443": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5444": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "ADD",
      "path": "8"
    },
    "5445": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5446": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5447": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "5448": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5449": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5451": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5452": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5453": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "ADD",
      "path": "8"
    },
    "5454": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5455": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10868
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5456": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5457": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "DUP8",
      "path": "8"
    },
    "5458": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "AND",
      "path": "8"
    },
    "5459": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5460": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5461": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5462": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5463": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5464": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5465": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5466": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5467": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10875
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5468": {
      "branch": 72,
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10836,
        10879
      ],
      "op": "GT",
      "path": "8"
    },
    "5469": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10832,
        10961
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5470": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10832,
        10961
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1592"
    },
    "5473": {
      "branch": 72,
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10832,
        10961
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5474": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10899,
        10946
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 56,
      "value": "0x1592"
    },
    "5477": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10922,
        10927
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5478": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10942
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5480": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10943,
        10944
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5481": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5482": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5483": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5484": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "LT",
      "path": "8"
    },
    "5485": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1578"
    },
    "5488": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5489": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1578"
    },
    "5492": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1925"
    },
    "5495": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10929,
        10945
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5496": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5497": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5499": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5500": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5501": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5502": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5504": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5505": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5506": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5507": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "ADD",
      "path": "8"
    },
    "5508": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5515": {
      "op": "SHL"
    },
    "5516": {
      "op": "SUB"
    },
    "5517": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10929,
        10945
      ],
      "op": "AND",
      "path": "8"
    },
    "5518": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10899,
        10921
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x142F"
    },
    "5521": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10899,
        10946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5522": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10899,
        10946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5523": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 57
    },
    "5524": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x159C"
    },
    "5527": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5528": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x193B"
    },
    "5531": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "i",
      "offset": [
        10813,
        10816
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5532": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5533": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5534": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "POP",
      "path": "8"
    },
    "5535": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10813,
        10816
      ],
      "op": "POP",
      "path": "8"
    },
    "5536": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1503"
    },
    "5539": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5540": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5541": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10767,
        10971
      ],
      "op": "POP",
      "path": "8"
    },
    "5542": {
      "fn": "StakingContract._updateTokenToClaim",
      "offset": [
        10671,
        10977
      ],
      "op": "POP",
      "path": "8"
    },
    "5543": {
      "fn": "StakingContract._updateTokenToClaim",
      "jump": "o",
      "offset": [
        10671,
        10977
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5544": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5545": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5547": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5548": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5555": {
      "op": "SHL"
    },
    "5556": {
      "op": "SUB"
    },
    "5557": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 58
    },
    "5558": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5559": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "op": "SUB"
    },
    "5568": {
      "op": "NOT"
    },
    "5569": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5570": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "5571": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5572": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "5573": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5574": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5575": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x40"
    },
    "5577": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5578": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5579": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5580": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5581": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "5582": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5583": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5584": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5585": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5618": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5619": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5620": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5621": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "5622": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "5623": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5624": {
      "op": "JUMPDEST"
    },
    "5625": {
      "op": "DUP1"
    },
    "5626": {
      "op": "CALLDATALOAD"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5633": {
      "op": "SHL"
    },
    "5634": {
      "op": "SUB"
    },
    "5635": {
      "op": "DUP2"
    },
    "5636": {
      "op": "AND"
    },
    "5637": {
      "op": "DUP2"
    },
    "5638": {
      "op": "EQ"
    },
    "5639": {
      "op": "PUSH2",
      "value": "0x160F"
    },
    "5642": {
      "op": "JUMPI"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5645": {
      "op": "DUP1"
    },
    "5646": {
      "op": "REVERT"
    },
    "5647": {
      "op": "JUMPDEST"
    },
    "5648": {
      "op": "SWAP2"
    },
    "5649": {
      "op": "SWAP1"
    },
    "5650": {
      "op": "POP"
    },
    "5651": {
      "jump": "o",
      "op": "JUMP"
    },
    "5652": {
      "op": "JUMPDEST"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "op": "DUP1"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5660": {
      "op": "DUP5"
    },
    "5661": {
      "op": "DUP7"
    },
    "5662": {
      "op": "SUB"
    },
    "5663": {
      "op": "SLT"
    },
    "5664": {
      "op": "ISZERO"
    },
    "5665": {
      "op": "PUSH2",
      "value": "0x1629"
    },
    "5668": {
      "op": "JUMPI"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5671": {
      "op": "DUP1"
    },
    "5672": {
      "op": "REVERT"
    },
    "5673": {
      "op": "JUMPDEST"
    },
    "5674": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "5677": {
      "op": "DUP5"
    },
    "5678": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5681": {
      "jump": "i",
      "op": "JUMP"
    },
    "5682": {
      "op": "JUMPDEST"
    },
    "5683": {
      "op": "SWAP3"
    },
    "5684": {
      "op": "POP"
    },
    "5685": {
      "op": "PUSH2",
      "value": "0x1640"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5690": {
      "op": "DUP6"
    },
    "5691": {
      "op": "ADD"
    },
    "5692": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5695": {
      "jump": "i",
      "op": "JUMP"
    },
    "5696": {
      "op": "JUMPDEST"
    },
    "5697": {
      "op": "SWAP2"
    },
    "5698": {
      "op": "POP"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5701": {
      "op": "DUP5"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "CALLDATALOAD"
    },
    "5704": {
      "op": "SWAP1"
    },
    "5705": {
      "op": "POP"
    },
    "5706": {
      "op": "SWAP3"
    },
    "5707": {
      "op": "POP"
    },
    "5708": {
      "op": "SWAP3"
    },
    "5709": {
      "op": "POP"
    },
    "5710": {
      "op": "SWAP3"
    },
    "5711": {
      "jump": "o",
      "op": "JUMP"
    },
    "5712": {
      "op": "JUMPDEST"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5715": {
      "op": "DUP1"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5718": {
      "op": "DUP4"
    },
    "5719": {
      "op": "DUP6"
    },
    "5720": {
      "op": "SUB"
    },
    "5721": {
      "op": "SLT"
    },
    "5722": {
      "op": "ISZERO"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5726": {
      "op": "JUMPI"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5729": {
      "op": "DUP1"
    },
    "5730": {
      "op": "REVERT"
    },
    "5731": {
      "op": "JUMPDEST"
    },
    "5732": {
      "op": "DUP3"
    },
    "5733": {
      "op": "CALLDATALOAD"
    },
    "5734": {
      "op": "SWAP2"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "op": "PUSH2",
      "value": "0x1673"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5741": {
      "op": "DUP5"
    },
    "5742": {
      "op": "ADD"
    },
    "5743": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5746": {
      "jump": "i",
      "op": "JUMP"
    },
    "5747": {
      "op": "JUMPDEST"
    },
    "5748": {
      "op": "SWAP1"
    },
    "5749": {
      "op": "POP"
    },
    "5750": {
      "op": "SWAP3"
    },
    "5751": {
      "op": "POP"
    },
    "5752": {
      "op": "SWAP3"
    },
    "5753": {
      "op": "SWAP1"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "jump": "o",
      "op": "JUMP"
    },
    "5756": {
      "op": "JUMPDEST"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5759": {
      "op": "DUP1"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5762": {
      "op": "DUP4"
    },
    "5763": {
      "op": "DUP6"
    },
    "5764": {
      "op": "SUB"
    },
    "5765": {
      "op": "SLT"
    },
    "5766": {
      "op": "ISZERO"
    },
    "5767": {
      "op": "PUSH2",
      "value": "0x168F"
    },
    "5770": {
      "op": "JUMPI"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5773": {
      "op": "DUP1"
    },
    "5774": {
      "op": "REVERT"
    },
    "5775": {
      "op": "JUMPDEST"
    },
    "5776": {
      "op": "PUSH2",
      "value": "0x1698"
    },
    "5779": {
      "op": "DUP4"
    },
    "5780": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5783": {
      "jump": "i",
      "op": "JUMP"
    },
    "5784": {
      "op": "JUMPDEST"
    },
    "5785": {
      "op": "SWAP2"
    },
    "5786": {
      "op": "POP"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x1673"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5792": {
      "op": "DUP5"
    },
    "5793": {
      "op": "ADD"
    },
    "5794": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5797": {
      "jump": "i",
      "op": "JUMP"
    },
    "5798": {
      "op": "JUMPDEST"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5803": {
      "op": "DUP3"
    },
    "5804": {
      "op": "DUP5"
    },
    "5805": {
      "op": "SUB"
    },
    "5806": {
      "op": "SLT"
    },
    "5807": {
      "op": "ISZERO"
    },
    "5808": {
      "op": "PUSH2",
      "value": "0x16B8"
    },
    "5811": {
      "op": "JUMPI"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5814": {
      "op": "DUP1"
    },
    "5815": {
      "op": "REVERT"
    },
    "5816": {
      "op": "JUMPDEST"
    },
    "5817": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "5820": {
      "op": "DUP3"
    },
    "5821": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5824": {
      "jump": "i",
      "op": "JUMP"
    },
    "5825": {
      "op": "JUMPDEST"
    },
    "5826": {
      "op": "SWAP4"
    },
    "5827": {
      "op": "SWAP3"
    },
    "5828": {
      "op": "POP"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "jump": "o",
      "op": "JUMP"
    },
    "5832": {
      "op": "JUMPDEST"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5837": {
      "op": "DUP3"
    },
    "5838": {
      "op": "DUP5"
    },
    "5839": {
      "op": "SUB"
    },
    "5840": {
      "op": "SLT"
    },
    "5841": {
      "op": "ISZERO"
    },
    "5842": {
      "op": "PUSH2",
      "value": "0x16DA"
    },
    "5845": {
      "op": "JUMPI"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5848": {
      "op": "DUP1"
    },
    "5849": {
      "op": "REVERT"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "op": "CALLDATALOAD"
    },
    "5853": {
      "op": "SWAP2"
    },
    "5854": {
      "op": "SWAP1"
    },
    "5855": {
      "op": "POP"
    },
    "5856": {
      "jump": "o",
      "op": "JUMP"
    },
    "5857": {
      "op": "JUMPDEST"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5860": {
      "op": "DUP1"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5863": {
      "op": "DUP4"
    },
    "5864": {
      "op": "DUP6"
    },
    "5865": {
      "op": "SUB"
    },
    "5866": {
      "op": "SLT"
    },
    "5867": {
      "op": "ISZERO"
    },
    "5868": {
      "op": "PUSH2",
      "value": "0x16F4"
    },
    "5871": {
      "op": "JUMPI"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5874": {
      "op": "DUP1"
    },
    "5875": {
      "op": "REVERT"
    },
    "5876": {
      "op": "JUMPDEST"
    },
    "5877": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5880": {
      "op": "DUP4"
    },
    "5881": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5884": {
      "jump": "i",
      "op": "JUMP"
    },
    "5885": {
      "op": "JUMPDEST"
    },
    "5886": {
      "op": "SWAP5"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5889": {
      "op": "SWAP4"
    },
    "5890": {
      "op": "SWAP1"
    },
    "5891": {
      "op": "SWAP4"
    },
    "5892": {
      "op": "ADD"
    },
    "5893": {
      "op": "CALLDATALOAD"
    },
    "5894": {
      "op": "SWAP4"
    },
    "5895": {
      "op": "POP"
    },
    "5896": {
      "op": "POP"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "jump": "o",
      "op": "JUMP"
    },
    "5899": {
      "op": "JUMPDEST"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5902": {
      "op": "DUP1"
    },
    "5903": {
      "op": "DUP3"
    },
    "5904": {
      "op": "MSTORE"
    },
    "5905": {
      "op": "DUP2"
    },
    "5906": {
      "op": "DUP2"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "MSTORE"
    },
    "5909": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5944": {
      "op": "DUP3"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "MSTORE"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "op": "SWAP1"
    },
    "5951": {
      "jump": "o",
      "op": "JUMP"
    },
    "5952": {
      "op": "JUMPDEST"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5957": {
      "op": "DUP3"
    },
    "5958": {
      "op": "DUP5"
    },
    "5959": {
      "op": "SUB"
    },
    "5960": {
      "op": "SLT"
    },
    "5961": {
      "op": "ISZERO"
    },
    "5962": {
      "op": "PUSH2",
      "value": "0x1752"
    },
    "5965": {
      "op": "JUMPI"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5968": {
      "op": "DUP1"
    },
    "5969": {
      "op": "REVERT"
    },
    "5970": {
      "op": "JUMPDEST"
    },
    "5971": {
      "op": "DUP2"
    },
    "5972": {
      "op": "MLOAD"
    },
    "5973": {
      "op": "DUP1"
    },
    "5974": {
      "op": "ISZERO"
    },
    "5975": {
      "op": "ISZERO"
    },
    "5976": {
      "op": "DUP2"
    },
    "5977": {
      "op": "EQ"
    },
    "5978": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "5981": {
      "op": "JUMPI"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5984": {
      "op": "DUP1"
    },
    "5985": {
      "op": "REVERT"
    },
    "5986": {
      "op": "JUMPDEST"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5989": {
      "op": "DUP1"
    },
    "5990": {
      "op": "DUP3"
    },
    "5991": {
      "op": "MSTORE"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5994": {
      "op": "SWAP1"
    },
    "5995": {
      "op": "DUP3"
    },
    "5996": {
      "op": "ADD"
    },
    "5997": {
      "op": "MSTORE"
    },
    "5998": {
      "op": "PUSH32",
      "value": "0x5374616B696E67436F6E74726163743A20617070726F76652829206661696C65"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6033": {
      "op": "DUP3"
    },
    "6034": {
      "op": "ADD"
    },
    "6035": {
      "op": "MSTORE"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "6040": {
      "op": "SHL"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6043": {
      "op": "DUP3"
    },
    "6044": {
      "op": "ADD"
    },
    "6045": {
      "op": "MSTORE"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6048": {
      "op": "ADD"
    },
    "6049": {
      "op": "SWAP1"
    },
    "6050": {
      "jump": "o",
      "op": "JUMP"
    },
    "6051": {
      "op": "JUMPDEST"
    },
    "6052": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6059": {
      "op": "SHL"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6062": {
      "op": "MSTORE"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6067": {
      "op": "MSTORE"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6072": {
      "op": "REVERT"
    },
    "6073": {
      "op": "JUMPDEST"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6076": {
      "op": "DUP3"
    },
    "6077": {
      "op": "NOT"
    },
    "6078": {
      "op": "DUP3"
    },
    "6079": {
      "op": "GT"
    },
    "6080": {
      "op": "ISZERO"
    },
    "6081": {
      "op": "PUSH2",
      "value": "0x17CC"
    },
    "6084": {
      "op": "JUMPI"
    },
    "6085": {
      "op": "PUSH2",
      "value": "0x17CC"
    },
    "6088": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6091": {
      "jump": "i",
      "op": "JUMP"
    },
    "6092": {
      "op": "JUMPDEST"
    },
    "6093": {
      "op": "POP"
    },
    "6094": {
      "op": "ADD"
    },
    "6095": {
      "op": "SWAP1"
    },
    "6096": {
      "jump": "o",
      "op": "JUMP"
    },
    "6097": {
      "op": "JUMPDEST"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6104": {
      "op": "SHL"
    },
    "6105": {
      "op": "SUB"
    },
    "6106": {
      "op": "SWAP4"
    },
    "6107": {
      "op": "DUP5"
    },
    "6108": {
      "op": "AND"
    },
    "6109": {
      "op": "DUP2"
    },
    "6110": {
      "op": "MSTORE"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6113": {
      "op": "DUP2"
    },
    "6114": {
      "op": "ADD"
    },
    "6115": {
      "op": "SWAP3"
    },
    "6116": {
      "op": "SWAP1"
    },
    "6117": {
      "op": "SWAP3"
    },
    "6118": {
      "op": "MSTORE"
    },
    "6119": {
      "op": "SWAP1"
    },
    "6120": {
      "op": "SWAP2"
    },
    "6121": {
      "op": "AND"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6124": {
      "op": "DUP3"
    },
    "6125": {
      "op": "ADD"
    },
    "6126": {
      "op": "MSTORE"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6129": {
      "op": "ADD"
    },
    "6130": {
      "op": "SWAP1"
    },
    "6131": {
      "jump": "o",
      "op": "JUMP"
    },
    "6132": {
      "op": "JUMPDEST"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6135": {
      "op": "DUP2"
    },
    "6136": {
      "op": "DUP2"
    },
    "6137": {
      "op": "JUMPDEST"
    },
    "6138": {
      "op": "DUP1"
    },
    "6139": {
      "op": "DUP6"
    },
    "6140": {
      "op": "GT"
    },
    "6141": {
      "op": "ISZERO"
    },
    "6142": {
      "op": "PUSH2",
      "value": "0x182F"
    },
    "6145": {
      "op": "JUMPI"
    },
    "6146": {
      "op": "DUP2"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6149": {
      "op": "NOT"
    },
    "6150": {
      "op": "DIV"
    },
    "6151": {
      "op": "DUP3"
    },
    "6152": {
      "op": "GT"
    },
    "6153": {
      "op": "ISZERO"
    },
    "6154": {
      "op": "PUSH2",
      "value": "0x1815"
    },
    "6157": {
      "op": "JUMPI"
    },
    "6158": {
      "op": "PUSH2",
      "value": "0x1815"
    },
    "6161": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6164": {
      "jump": "i",
      "op": "JUMP"
    },
    "6165": {
      "op": "JUMPDEST"
    },
    "6166": {
      "op": "DUP1"
    },
    "6167": {
      "op": "DUP6"
    },
    "6168": {
      "op": "AND"
    },
    "6169": {
      "op": "ISZERO"
    },
    "6170": {
      "op": "PUSH2",
      "value": "0x1822"
    },
    "6173": {
      "op": "JUMPI"
    },
    "6174": {
      "op": "SWAP2"
    },
    "6175": {
      "op": "DUP2"
    },
    "6176": {
      "op": "MUL"
    },
    "6177": {
      "op": "SWAP2"
    },
    "6178": {
      "op": "JUMPDEST"
    },
    "6179": {
      "op": "SWAP4"
    },
    "6180": {
      "op": "DUP5"
    },
    "6181": {
      "op": "SHR"
    },
    "6182": {
      "op": "SWAP4"
    },
    "6183": {
      "op": "SWAP1"
    },
    "6184": {
      "op": "DUP1"
    },
    "6185": {
      "op": "MUL"
    },
    "6186": {
      "op": "SWAP1"
    },
    "6187": {
      "op": "PUSH2",
      "value": "0x17F9"
    },
    "6190": {
      "op": "JUMP"
    },
    "6191": {
      "op": "JUMPDEST"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "op": "SWAP3"
    },
    "6194": {
      "op": "POP"
    },
    "6195": {
      "op": "SWAP3"
    },
    "6196": {
      "op": "SWAP1"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "jump": "o",
      "op": "JUMP"
    },
    "6199": {
      "op": "JUMPDEST"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6202": {
      "op": "DUP3"
    },
    "6203": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "6206": {
      "op": "JUMPI"
    },
    "6207": {
      "op": "POP"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6210": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6213": {
      "op": "JUMP"
    },
    "6214": {
      "op": "JUMPDEST"
    },
    "6215": {
      "op": "DUP2"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x1853"
    },
    "6219": {
      "op": "JUMPI"
    },
    "6220": {
      "op": "POP"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6223": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6226": {
      "op": "JUMP"
    },
    "6227": {
      "op": "JUMPDEST"
    },
    "6228": {
      "op": "DUP2"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6231": {
      "op": "DUP2"
    },
    "6232": {
      "op": "EQ"
    },
    "6233": {
      "op": "PUSH2",
      "value": "0x1869"
    },
    "6236": {
      "op": "JUMPI"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6239": {
      "op": "DUP2"
    },
    "6240": {
      "op": "EQ"
    },
    "6241": {
      "op": "PUSH2",
      "value": "0x1873"
    },
    "6244": {
      "op": "JUMPI"
    },
    "6245": {
      "op": "PUSH2",
      "value": "0x188F"
    },
    "6248": {
      "op": "JUMP"
    },
    "6249": {
      "op": "JUMPDEST"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6252": {
      "op": "SWAP2"
    },
    "6253": {
      "op": "POP"
    },
    "6254": {
      "op": "POP"
    },
    "6255": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6258": {
      "op": "JUMP"
    },
    "6259": {
      "op": "JUMPDEST"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6262": {
      "op": "DUP5"
    },
    "6263": {
      "op": "GT"
    },
    "6264": {
      "op": "ISZERO"
    },
    "6265": {
      "op": "PUSH2",
      "value": "0x1884"
    },
    "6268": {
      "op": "JUMPI"
    },
    "6269": {
      "op": "PUSH2",
      "value": "0x1884"
    },
    "6272": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6275": {
      "jump": "i",
      "op": "JUMP"
    },
    "6276": {
      "op": "JUMPDEST"
    },
    "6277": {
      "op": "POP"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6281": {
      "op": "DUP3"
    },
    "6282": {
      "op": "SHL"
    },
    "6283": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6286": {
      "op": "JUMP"
    },
    "6287": {
      "op": "JUMPDEST"
    },
    "6288": {
      "op": "POP"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6291": {
      "op": "DUP4"
    },
    "6292": {
      "op": "LT"
    },
    "6293": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "6296": {
      "op": "DUP4"
    },
    "6297": {
      "op": "LT"
    },
    "6298": {
      "op": "AND"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "6301": {
      "op": "DUP5"
    },
    "6302": {
      "op": "LT"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6305": {
      "op": "DUP5"
    },
    "6306": {
      "op": "LT"
    },
    "6307": {
      "op": "AND"
    },
    "6308": {
      "op": "OR"
    },
    "6309": {
      "op": "ISZERO"
    },
    "6310": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "6313": {
      "op": "JUMPI"
    },
    "6314": {
      "op": "POP"
    },
    "6315": {
      "op": "DUP2"
    },
    "6316": {
      "op": "DUP2"
    },
    "6317": {
      "op": "EXP"
    },
    "6318": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "6321": {
      "op": "JUMP"
    },
    "6322": {
      "op": "JUMPDEST"
    },
    "6323": {
      "op": "PUSH2",
      "value": "0x18BC"
    },
    "6326": {
      "op": "DUP4"
    },
    "6327": {
      "op": "DUP4"
    },
    "6328": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "6331": {
      "jump": "i",
      "op": "JUMP"
    },
    "6332": {
      "op": "JUMPDEST"
    },
    "6333": {
      "op": "DUP1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6336": {
      "op": "NOT"
    },
    "6337": {
      "op": "DIV"
    },
    "6338": {
      "op": "DUP3"
    },
    "6339": {
      "op": "GT"
    },
    "6340": {
      "op": "ISZERO"
    },
    "6341": {
      "op": "PUSH2",
      "value": "0x18D0"
    },
    "6344": {
      "op": "JUMPI"
    },
    "6345": {
      "op": "PUSH2",
      "value": "0x18D0"
    },
    "6348": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6351": {
      "jump": "i",
      "op": "JUMP"
    },
    "6352": {
      "op": "JUMPDEST"
    },
    "6353": {
      "op": "MUL"
    },
    "6354": {
      "op": "SWAP4"
    },
    "6355": {
      "op": "SWAP3"
    },
    "6356": {
      "op": "POP"
    },
    "6357": {
      "op": "POP"
    },
    "6358": {
      "op": "POP"
    },
    "6359": {
      "jump": "o",
      "op": "JUMP"
    },
    "6360": {
      "op": "JUMPDEST"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6363": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6366": {
      "op": "DUP4"
    },
    "6367": {
      "op": "DUP4"
    },
    "6368": {
      "op": "PUSH2",
      "value": "0x1837"
    },
    "6371": {
      "jump": "i",
      "op": "JUMP"
    },
    "6372": {
      "op": "JUMPDEST"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6375": {
      "op": "DUP2"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6378": {
      "op": "NOT"
    },
    "6379": {
      "op": "DIV"
    },
    "6380": {
      "op": "DUP4"
    },
    "6381": {
      "op": "GT"
    },
    "6382": {
      "op": "DUP3"
    },
    "6383": {
      "op": "ISZERO"
    },
    "6384": {
      "op": "ISZERO"
    },
    "6385": {
      "op": "AND"
    },
    "6386": {
      "op": "ISZERO"
    },
    "6387": {
      "op": "PUSH2",
      "value": "0x18FE"
    },
    "6390": {
      "op": "JUMPI"
    },
    "6391": {
      "op": "PUSH2",
      "value": "0x18FE"
    },
    "6394": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6397": {
      "jump": "i",
      "op": "JUMP"
    },
    "6398": {
      "op": "JUMPDEST"
    },
    "6399": {
      "op": "POP"
    },
    "6400": {
      "op": "MUL"
    },
    "6401": {
      "op": "SWAP1"
    },
    "6402": {
      "jump": "o",
      "op": "JUMP"
    },
    "6403": {
      "op": "JUMPDEST"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6406": {
      "op": "DUP3"
    },
    "6407": {
      "op": "PUSH2",
      "value": "0x1920"
    },
    "6410": {
      "op": "JUMPI"
    },
    "6411": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6418": {
      "op": "SHL"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6426": {
      "op": "MSTORE"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6431": {
      "op": "REVERT"
    },
    "6432": {
      "op": "JUMPDEST"
    },
    "6433": {
      "op": "POP"
    },
    "6434": {
      "op": "DIV"
    },
    "6435": {
      "op": "SWAP1"
    },
    "6436": {
      "jump": "o",
      "op": "JUMP"
    },
    "6437": {
      "op": "JUMPDEST"
    },
    "6438": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6445": {
      "op": "SHL"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6448": {
      "op": "MSTORE"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6453": {
      "op": "MSTORE"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6458": {
      "op": "REVERT"
    },
    "6459": {
      "op": "JUMPDEST"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6464": {
      "op": "NOT"
    },
    "6465": {
      "op": "DUP3"
    },
    "6466": {
      "op": "EQ"
    },
    "6467": {
      "op": "ISZERO"
    },
    "6468": {
      "op": "PUSH2",
      "value": "0x194F"
    },
    "6471": {
      "op": "JUMPI"
    },
    "6472": {
      "op": "PUSH2",
      "value": "0x194F"
    },
    "6475": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6478": {
      "jump": "i",
      "op": "JUMP"
    },
    "6479": {
      "op": "JUMPDEST"
    },
    "6480": {
      "op": "POP"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6483": {
      "op": "ADD"
    },
    "6484": {
      "op": "SWAP1"
    },
    "6485": {
      "jump": "o",
      "op": "JUMP"
    },
    "6486": {
      "op": "JUMPDEST"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6491": {
      "op": "DUP3"
    },
    "6492": {
      "op": "DUP5"
    },
    "6493": {
      "op": "SUB"
    },
    "6494": {
      "op": "SLT"
    },
    "6495": {
      "op": "ISZERO"
    },
    "6496": {
      "op": "PUSH2",
      "value": "0x1968"
    },
    "6499": {
      "op": "JUMPI"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6502": {
      "op": "DUP1"
    },
    "6503": {
      "op": "REVERT"
    },
    "6504": {
      "op": "JUMPDEST"
    },
    "6505": {
      "op": "POP"
    },
    "6506": {
      "op": "MLOAD"
    },
    "6507": {
      "op": "SWAP2"
    },
    "6508": {
      "op": "SWAP1"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "jump": "o",
      "op": "JUMP"
    },
    "6511": {
      "op": "JUMPDEST"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "DUP3"
    },
    "6516": {
      "op": "LT"
    },
    "6517": {
      "op": "ISZERO"
    },
    "6518": {
      "op": "PUSH2",
      "value": "0x1981"
    },
    "6521": {
      "op": "JUMPI"
    },
    "6522": {
      "op": "PUSH2",
      "value": "0x1981"
    },
    "6525": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6528": {
      "jump": "i",
      "op": "JUMP"
    },
    "6529": {
      "op": "JUMPDEST"
    },
    "6530": {
      "op": "POP"
    },
    "6531": {
      "op": "SUB"
    },
    "6532": {
      "op": "SWAP1"
    },
    "6533": {
      "jump": "o",
      "op": "JUMP"
    },
    "6534": {
      "op": "JUMPDEST"
    },
    "6535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6542": {
      "op": "SHL"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6545": {
      "op": "MSTORE"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6550": {
      "op": "MSTORE"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6555": {
      "op": "REVERT"
    },
    "6556": {
      "op": "JUMPDEST"
    },
    "6557": {
      "op": "DUP1"
    },
    "6558": {
      "op": "MLOAD"
    },
    "6559": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "6570": {
      "op": "DUP2"
    },
    "6571": {
      "op": "AND"
    },
    "6572": {
      "op": "DUP2"
    },
    "6573": {
      "op": "EQ"
    },
    "6574": {
      "op": "PUSH2",
      "value": "0x160F"
    },
    "6577": {
      "op": "JUMPI"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6580": {
      "op": "DUP1"
    },
    "6581": {
      "op": "REVERT"
    },
    "6582": {
      "op": "JUMPDEST"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6585": {
      "op": "DUP1"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6588": {
      "op": "DUP1"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6593": {
      "op": "DUP7"
    },
    "6594": {
      "op": "DUP9"
    },
    "6595": {
      "op": "SUB"
    },
    "6596": {
      "op": "SLT"
    },
    "6597": {
      "op": "ISZERO"
    },
    "6598": {
      "op": "PUSH2",
      "value": "0x19CE"
    },
    "6601": {
      "op": "JUMPI"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6604": {
      "op": "DUP1"
    },
    "6605": {
      "op": "REVERT"
    },
    "6606": {
      "op": "JUMPDEST"
    },
    "6607": {
      "op": "PUSH2",
      "value": "0x19D7"
    },
    "6610": {
      "op": "DUP7"
    },
    "6611": {
      "op": "PUSH2",
      "value": "0x199C"
    },
    "6614": {
      "jump": "i",
      "op": "JUMP"
    },
    "6615": {
      "op": "JUMPDEST"
    },
    "6616": {
      "op": "SWAP5"
    },
    "6617": {
      "op": "POP"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6620": {
      "op": "DUP7"
    },
    "6621": {
      "op": "ADD"
    },
    "6622": {
      "op": "MLOAD"
    },
    "6623": {
      "op": "SWAP4"
    },
    "6624": {
      "op": "POP"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6627": {
      "op": "DUP7"
    },
    "6628": {
      "op": "ADD"
    },
    "6629": {
      "op": "MLOAD"
    },
    "6630": {
      "op": "SWAP3"
    },
    "6631": {
      "op": "POP"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6634": {
      "op": "DUP7"
    },
    "6635": {
      "op": "ADD"
    },
    "6636": {
      "op": "MLOAD"
    },
    "6637": {
      "op": "SWAP2"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "op": "PUSH2",
      "value": "0x19FA"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6644": {
      "op": "DUP8"
    },
    "6645": {
      "op": "ADD"
    },
    "6646": {
      "op": "PUSH2",
      "value": "0x199C"
    },
    "6649": {
      "jump": "i",
      "op": "JUMP"
    },
    "6650": {
      "op": "JUMPDEST"
    },
    "6651": {
      "op": "SWAP1"
    },
    "6652": {
      "op": "POP"
    },
    "6653": {
      "op": "SWAP3"
    },
    "6654": {
      "op": "SWAP6"
    },
    "6655": {
      "op": "POP"
    },
    "6656": {
      "op": "SWAP3"
    },
    "6657": {
      "op": "SWAP6"
    },
    "6658": {
      "op": "SWAP1"
    },
    "6659": {
      "op": "SWAP4"
    },
    "6660": {
      "op": "POP"
    },
    "6661": {
      "jump": "o",
      "op": "JUMP"
    },
    "6662": {
      "op": "JUMPDEST"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6667": {
      "op": "DUP3"
    },
    "6668": {
      "op": "DUP5"
    },
    "6669": {
      "op": "SUB"
    },
    "6670": {
      "op": "SLT"
    },
    "6671": {
      "op": "ISZERO"
    },
    "6672": {
      "op": "PUSH2",
      "value": "0x1A18"
    },
    "6675": {
      "op": "JUMPI"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6678": {
      "op": "DUP1"
    },
    "6679": {
      "op": "REVERT"
    },
    "6680": {
      "op": "JUMPDEST"
    },
    "6681": {
      "op": "DUP2"
    },
    "6682": {
      "op": "MLOAD"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6685": {
      "op": "DUP2"
    },
    "6686": {
      "op": "AND"
    },
    "6687": {
      "op": "DUP2"
    },
    "6688": {
      "op": "EQ"
    },
    "6689": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6692": {
      "op": "JUMPI"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6695": {
      "op": "DUP1"
    },
    "6696": {
      "op": "REVERT"
    }
  },
  "sha1": "d5e0b818166b9ad90ecfd3b251bc8c1ba5c55b5a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nimport \"../interfaces/ILendingProtocol.sol\";\n\ncontract StakingContract is Ownable {\n    IERC20 public projectToken;\n    address[] public stakers;\n    address[] public allowedTokens;\n    //ERC20 -> user -> amount stakes\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n    //how many different erc20 token the user has currently staked\n    mapping(address => uint256) public uniqueTokensStaked;\n    // ERC20 -> price feed address\n    mapping(address => address) public tokenPriceFeedMapping;\n    // user -> amount of projectToken they can claimed\n    mapping(address => uint256) public tokenToClaim;\n    // how much token user can earn per amount of time\n    // token earn = total value [USD] * yield/1000 * time period[timestamp] / second_in_days\n    // for a yieldRate of 10, user gain 1% of total value [USD] per day\n    // token -> yieldRate\n    mapping(address => uint256) public tokenToYieldRate;\n    // user => token => time of last update\n    mapping(address => mapping(address => uint256))\n        public userToTokenToUnrealisedYieldTime;\n\n    ILendingProtocol public lendingProtocol;\n\n    // EVENTS\n    event TokenAdded(address indexed token_address);\n    event TokenStaked(\n        address indexed token,\n        address indexed staker,\n        uint256 amount\n    );\n    event TokenUnstaked(\n        address indexed token,\n        address indexed staker,\n        uint256 amount\n    );\n    event LendingProtocolChanged(address newProtocol, address oldProtocol);\n\n    event YieldRateChange(address indexed token, uint256 newYield);\n\n    // CONSTRUCTOR\n    constructor(address _projectTokenAddress, address _lendingProtocol) {\n        projectToken = IERC20(_projectTokenAddress);\n        lendingProtocol = ILendingProtocol(_lendingProtocol);\n    }\n\n    // PUBLIC FUNCTIONS\n\n    /// @notice Stake _amount of _token\n    /// @param _amount The amount ot stake\n    /// @param _token The address of the token\n    function stakeTokens(uint256 _amount, address _token) external {\n        // check parameters\n        require(_amount > 0, \"StakingContract: Amount must be greater than 0\");\n        require(\n            tokenIsAllowed(_token),\n            \"StakingContract: Token is currently no allowed\"\n        );\n        //update token to claim (if some amount already staked)\n        _updateOneTokenToClaim(msg.sender, _token);\n        require(\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount),\n            \"StakingContract: transferFrom() failed\"\n        );\n\n        if (stakingBalance[_token][msg.sender] == 0) {\n            uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] + 1;\n        }\n\n        stakingBalance[_token][msg.sender] =\n            stakingBalance[_token][msg.sender] +\n            _amount;\n\n        // add user to stakers list pnly if this is their first staking\n        if (uniqueTokensStaked[msg.sender] == 1) {\n            stakers.push(msg.sender);\n        }\n\n        //deposit on lending protocol\n        lendingProtocol.deposit(_token, _amount, address(this));\n        emit TokenStaked(_token, msg.sender, _amount);\n    }\n\n    /// @notice Unstake all _token staked\n    /// @param _token The address of the token\n    function unstakeTokens(address _token) external {\n        //check token to unstake\n        uint256 balance = stakingBalance[_token][msg.sender];\n        require(balance > 0, \"StakingContract: Staking balance already 0!\");\n        //update token to claim\n        _updateOneTokenToClaim(msg.sender, _token);\n        // update contract data\n        stakingBalance[_token][msg.sender] = 0;\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\n        if (uniqueTokensStaked[msg.sender] == 0) {\n            for (uint256 i = 0; i < stakers.length; i++) {\n                if (stakers[i] == msg.sender) {\n                    stakers[i] = stakers[stakers.length - 1];\n                    stakers.pop();\n                    break;\n                }\n            }\n        }\n\n        //withdraw from lending protocol and send to user\n        //and send tokens to user\n        require(\n            lendingProtocol.withdraw(_token, balance, msg.sender) > 0,\n            \"StakingContract: withdraw error\"\n        );\n        emit TokenUnstaked(_token, msg.sender, balance);\n    }\n\n    /// @notice Send Earned \"ProjectToken\" to user\n    function claimToken() external {\n        //Todo update yield per token in stake/unstake and here do it for each token\n        _updateTokenToClaim(msg.sender);\n        uint256 amount = tokenToClaim[msg.sender];\n        tokenToClaim[msg.sender] = 0;\n        require(\n            projectToken.transfer(msg.sender, amount),\n            \"StakingContract: transfer failed\"\n        );\n    }\n\n    /// @notice Check wheter a token is stakable on this contract\n    /// @param _token The address of the token\n    /// @return bool Wheter the token is stakable or not\n    function tokenIsAllowed(address _token) public view returns (bool) {\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == _token) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /// @notice Get the total value (in USD) staked by _user\n    /// @param _user The address of the user\n    /// @return totalValue The total value  of the tokens staked on the contract by _user\n    function getUserTotalValue(address _user) public view returns (uint256) {\n        if (uniqueTokensStaked[_user] == 0) {\n            return 0;\n        }\n        uint256 totalValue = 0;\n        //for any stakable token\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            totalValue += getUserSingleTokenValue(_user, allowedTokens[i]);\n        }\n        return totalValue;\n    }\n\n    /// @notice Get the value (in USD) of _token staked by _user\n    /// @param _user The address of the user\n    /// @param _token The address of the token\n    /// @return tokenValue The value of _token staked on the contract by _user\n    function getUserSingleTokenValue(address _user, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        //TODO\n        uint256 tokenValue = ((stakingBalance[_token][_user] * price) /\n            (10**decimals));\n        return tokenValue;\n        //          amt staked                  * price  / 10**8\n        // E.G.     10 WETH                      * 3'000(usd/weth)/ 100_000_000\n    }\n\n    /// @notice Get the value (in USD) of a _token and its decimals()\n    /// @param _token The address of the token\n    /// @return price The value of _token\n    /// @return decimals The number of decimals of the _token\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price), decimals);\n    }\n\n    // ONLYOWNER\n\n    /// @notice Set the price feed address for an ERC20 token\n    /// @dev Gets call automatically when adding new token\n    /// @param _token The address of the token\n    /// @param _priceFeed The address of the pricefeed\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }\n\n    /// @notice Add a new _token to the list of stakable token\n    /// @param _token The address of the token\n    /// @param _pricefeed The address for the price feed of _token\n    function addAllowedTokens(\n        address _token,\n        address _pricefeed,\n        uint256 _yield\n    ) external onlyOwner {\n        allowedTokens.push(_token);\n        require(\n            IERC20(_token).approve(address(lendingProtocol), type(uint256).max),\n            \"StakingContract: approve() failed\"\n        );\n        setPriceFeedContract(_token, _pricefeed);\n        updateYieldRate(_token, _yield);\n        emit TokenAdded(_token);\n    }\n\n    // @notice Update the yield rate for _token\n    /// @param _token The address of the token\n    /// @param _newYieldRate The new yield rate\n    function updateYieldRate(address _token, uint256 _newYieldRate)\n        public\n        onlyOwner\n    {\n        //for all staker who have _token staked, we calculate the amount they can claim with the previous yield\n        //before updating the yield\n        for (uint256 i = 0; i < stakers.length; i++) {\n            if (stakingBalance[_token][stakers[i]] > 0) {\n                _updateOneTokenToClaim(stakers[i], _token);\n            }\n        }\n        //update yield\n        tokenToYieldRate[_token] = _newYieldRate;\n        emit YieldRateChange(_token, _newYieldRate);\n    }\n\n    /// @notice Change the lending protocol\n    /// @param _newLendingProtocol The address of the new lending protocol contract\n    function changeLendingProtocol(address _newLendingProtocol)\n        external\n        onlyOwner\n    {\n        address oldProtocol = address(lendingProtocol);\n        lendingProtocol = ILendingProtocol(_newLendingProtocol);\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            require(\n                IERC20(allowedTokens[i]).approve(\n                    _newLendingProtocol,\n                    type(uint256).max\n                ),\n                \"StakingContract: approve() failed\"\n            );\n        }\n        //withdraw and redeposit\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            address token = allowedTokens[i];\n            uint256 totalStaked = 0;\n            for (uint256 j = 0; j < stakers.length; j++) {\n                address staker = stakers[j];\n                totalStaked += stakingBalance[token][staker]; //TODO\n            }\n            ILendingProtocol(oldProtocol).withdraw(\n                token,\n                totalStaked,\n                address(this)\n            );\n            lendingProtocol.deposit(token, totalStaked, address(this));\n        }\n        emit LendingProtocolChanged(_newLendingProtocol, oldProtocol);\n    }\n\n    //  INTERNAL FUNCTION\n\n    /// @notice Update the tokenToClaim variable of _user for all token staked\n    /// @param _user The address of the user\n    function _updateTokenToClaim(address _user) internal {\n        //loop through all token\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (stakingBalance[allowedTokens[i]][_user] > 0) {\n                _updateOneTokenToClaim(_user, allowedTokens[i]);\n            }\n        }\n    }\n\n    /// @notice Update the tokenToClaim variable of _user for _token\n    /// @param _user The address of the user\n    /// @param _token The address of the token\n    function _updateOneTokenToClaim(address _user, address _token) internal {\n        uint256 unrealisedYieldTime = userToTokenToUnrealisedYieldTime[_user][\n            _token\n        ];\n        userToTokenToUnrealisedYieldTime[_user][_token] = block.timestamp;\n\n        uint256 valueStaked = getUserSingleTokenValue(_user, _token);\n        uint256 time = block.timestamp - unrealisedYieldTime;\n        uint256 day = 1 days;\n        uint256 tokenYieldRate = tokenToYieldRate[_token];\n        uint256 additionalYield = ((valueStaked * time * tokenYieldRate) /\n            1000) / day;\n\n        tokenToClaim[_user] += additionalYield;\n    }\n}\n",
  "sourceMap": "291:11489:8:-:0;;;1835:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:4;867:9:0;:23::i;:::-;1913:12:8;:43;;-1:-1:-1;;;;;1913:43:8;;;-1:-1:-1;;;;;;1913:43:8;;;;;;;1966:15;:52;;;;;;;;;;;291:11489;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;291:11489:8;;;;;;",
  "sourcePath": "contracts/StakingContract.sol",
  "type": "contract"
}